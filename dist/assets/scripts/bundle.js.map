{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/index.ts","src/scripts/webgl-google-utils.ts","src/scripts/webgl-matrix.js","src/scripts/webgl-utils.ts"],"names":[],"mappings":"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AAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC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C,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA;QAClD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA;QAClD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA;QAClD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA;QAClD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA;QAClD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA;QAClD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA;QACnD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA;QACnD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA;QACnD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA;QACnD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA;QACnD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA;QACnD,OAAO,GAAG,CAAA;IACX,CAAC;IACD;;;;;;OAMG;IAEH,SAAS,SAAS,CAAC,GAAG,EAAE,CAAC;QACxB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACb,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACX,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACb,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACX,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACb,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACZ,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACd,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACZ,GAAG,CAAC,CAAC,CAAC;YACL,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA;QAC9F,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CACT,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC7B,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC7B,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAC7B,CAAA;QACD,GAAG,CAAC,CAAC,CAAC;YACL,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA;QAC9F,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CACT,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC7B,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC7B,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAC7B,CAAA;QACD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CACT,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC7B,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC7B,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAC7B,CAAA;QACD,GAAG,CAAC,CAAC,CAAC;YACL,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA;QAC9F,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CACT,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC7B,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC7B,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAC7B,CAAA;QACD,GAAG,CAAC,CAAC,CAAC;YACL,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,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,CAAC,CAAA;QACT,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACT,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACT,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAA;QAClD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAA;QAClD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAA;QAClD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAA;QAClD,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACT,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACT,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACV,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACV,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAA;QAClD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAA;QAClD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAA;QACnD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAA;QACnD,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACV,EAAE,GAAG,CAAC,C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CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACpB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACpB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACpB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACpB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACpB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACpB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACpB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACpB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACpB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACvB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACvB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACvB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACvB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACvB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACvB,OAAO,GAAG,CAAA;IACX,CAAC;IACD;;;;;;;OAOG;IAEH,SAAS,gBAAgB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;QAClC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACjB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACjB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACjB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACjB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACjB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACjB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACjB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACjB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACjB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACjB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;QACnB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;QACnB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;QACnB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;QACnB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;QACnB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;QACnB,OAAO,GAAG,CAAA;IACX,CAAC;IACD;;;;;;;;OAQG;IAEH,SAAS,sBAAsB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK;QAC/C,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;QAC5B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;QAC5B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;QAC5B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;QAC5B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;QAC5B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;QAC5B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;QAC5B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;QAC5B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;QAC5B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;QAC5B,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAA;QAC/B,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAA;QAC/B,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAA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E,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,G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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import WebGLUtils, { addTexture, degToRad } from './webgl-google-utils'\r\nimport { mat4, vec3 } from './webgl-matrix'\r\nimport { createProgram, createShader, resizeCanvasToDisplaySize } from './webgl-utils'\r\n\r\nlet gl: any\r\n\r\nconst attribs: any = {}\r\nconst uniforms: any = {}\r\n\r\nconst viewMatrix = mat4.identity(mat4.create())\r\nconst modelMatrix = mat4.identity(mat4.create())\r\nconst modelViewMatrix = mat4.identity(mat4.create())\r\nconst perspectiveMatrix = mat4.identity(mat4.create())\r\nconst mvpMatrix = mat4.identity(mat4.create())\r\nmat4.perspective(perspectiveMatrix, degToRad(60), 1, 1, 100)\r\n\r\nconst $ = function(selector: string, qs?: boolean): HTMLElement {\r\n\tif (!qs) {\r\n\t\treturn document.getElementById(selector)\r\n\t}\r\n\treturn document.querySelector(selector)\r\n}\r\n\r\nconst controlPanel: HTMLElement = $('control-panel')\r\nconst fpsCounter: HTMLElement = $('fps-counter')\r\nconst frameCounter: HTMLElement = $('frame-counter')\r\nconst timeCounter: HTMLElement = $('time-counter')\r\nconst scale: HTMLElement = $('scale')\r\nconst rotX: HTMLElement = $('rotateX')\r\nconst rotY: HTMLElement = $('rotateY')\r\nconst rotZ: HTMLElement = $('rotateZ')\r\nconst trsX: HTMLElement = $('translateX')\r\nconst trsY: HTMLElement = $('translateY')\r\nconst trsZ: HTMLElement = $('translateZ')\r\nconst eyeX: HTMLElement = $('eyeX')\r\nconst eyeY: HTMLElement = $('eyeY')\r\nconst eyeZ: HTMLElement = $('eyeZ')\r\n\r\ncontrolPanel.oninput = function(e: Event) {\r\n\tconst input: any = e.target\r\n\tconst value: any = parseFloat(input.value).toFixed(2)\r\n\tinput.nextSibling.innerHTML = value\r\n}\r\n\r\nconst initShaders = function(resolve: () => void, reject: (err: Error) => void) {\r\n\tconst fShader: WebGLShader = new Promise((res, rej) =>\r\n\t\tcreateShader(gl, 'fragment-shader', res, rej),\r\n\t)\r\n\tconst vShader: WebGLShader = new Promise((res, rej) =>\r\n\t\tcreateShader(gl, 'vertex-shader', res, rej),\r\n\t)\r\n\r\n\tPromise.all([fShader, vShader]).then((shaders) => {\r\n\t\tgl.program = createProgram(gl, shaders)\r\n\t\tgl.useProgram(gl.program)\r\n\r\n\t\tresolve()\r\n\t})\r\n}\r\n\r\nconst initVariables = function() {\r\n\tattribs.aPosition = gl.getAttribLocation(gl.program, 'a_Position')\r\n\tattribs.aColor = gl.getAttribLocation(gl.program, 'a_Color')\r\n\r\n\tuniforms.uWidth = gl.getUniformLocation(gl.program, 'u_Width')\r\n\tuniforms.uHeight = gl.getUniformLocation(gl.program, 'u_Height')\r\n\tuniforms.uMvpMatrix = gl.getUniformLocation(gl.program, 'u_MvpMatrix')\r\n}\r\n\r\nconst initTextures = function() {\r\n\treturn true\r\n}\r\n// prettier-ignore\r\nconst initBuffer = function(): number {\r\n\tconst vertices = new Float32Array([\r\n\t\t1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\r\n\t\t-1.0, 1.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t-1.0, -1.0, 1.0, 1.0, 0.0, 0.0,\r\n\t\t1.0, -1.0, 1.0, 1.0, 1.0, 0.0,\r\n\t\t1.0, -1.0, -1.0, 0.0, 1.0, 0.0,\r\n\t\t1.0, 1.0, -1.0, 0.0, 1.0, 1.0,\r\n\t\t-1.0, 1.0, -1.0, 0.0, 0.0, 1.0,\r\n\t\t-1.0, -1.0, -1.0, 0.0, 0.0, 0.0,\r\n\t])\r\n\r\n\tconst FSIZE = vertices.BYTES_PER_ELEMENT\r\n\r\n\tconst vertexBuffer: WebGLBuffer = gl.createBuffer()\r\n\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\r\n\tgl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW)\r\n\r\n\tgl.vertexAttribPointer(attribs.aPosition, 3, gl.FLOAT, false, FSIZE * 6, 0)\r\n\tgl.enableVertexAttribArray(attribs.aPosition)\r\n\r\n\tgl.vertexAttribPointer(attribs.aColor, 3, gl.FLOAT, false, FSIZE * 6, FSIZE * 3)\r\n\tgl.enableVertexAttribArray(attribs.aColor)\r\n\r\n\tconst indices = new Uint8Array([\r\n\t\t0, 1, 2, 0, 2, 3,\r\n\t\t0, 3, 4, 0, 4, 5,\r\n\t\t0, 5, 6, 0, 6, 1,\r\n\t\t1, 6, 7, 1, 7, 2,\r\n\t\t7, 4, 3, 7, 3, 2,\r\n\t\t4, 7, 6, 4, 6, 5,\r\n\t])\r\n\r\n\tconst indexBuffer: WebGLBuffer = gl.createBuffer()\r\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\r\n\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW)\r\n\r\n\treturn indices.length\r\n}\r\n\r\nconst drawScene = function() {\r\n\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight)\r\n\r\n\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\r\n\r\n\tconst eye = vec3.fromValues(\r\n\t\tparseFloat((eyeX as HTMLInputElement).value),\r\n\t\tparseFloat((eyeY as HTMLInputElement).value),\r\n\t\tparseFloat((eyeZ as HTMLInputElement).value),\r\n\t)\r\n\tconst center = vec3.fromValues(0, 0, 0)\r\n\tconst up = vec3.fromValues(0, 1, 0)\r\n\r\n\tmat4.lookAt(viewMatrix, eye, center, up)\r\n\r\n\tmat4.identity(modelMatrix)\r\n\tmat4.translate(\r\n\t\tmodelMatrix,\r\n\t\tmodelMatrix,\r\n\t\tvec3.fromValues(\r\n\t\t\tparseFloat((trsX as HTMLInputElement).value),\r\n\t\t\tparseFloat((trsY as HTMLInputElement).value),\r\n\t\t\tparseFloat((trsZ as HTMLInputElement).value),\r\n\t\t),\r\n\t)\r\n\tmat4.rotateX(modelMatrix, modelMatrix, degToRad((rotX as HTMLInputElement).value))\r\n\tmat4.rotateY(modelMatrix, modelMatrix, degToRad((rotY as HTMLInputElement).value))\r\n\tmat4.rotateZ(modelMatrix, modelMatrix, degToRad((rotZ as HTMLInputElement).value))\r\n\tmat4.scale(\r\n\t\tmodelMatrix,\r\n\t\tmodelMatrix,\r\n\t\tvec3.fromValues(\r\n\t\t\tparseFloat((scale as HTMLInputElement).value),\r\n\t\t\tparseFloat((scale as HTMLInputElement).value),\r\n\t\t\tparseFloat((scale as HTMLInputElement).value),\r\n\t\t),\r\n\t)\r\n\tmat4.mul(modelViewMatrix, viewMatrix, modelMatrix)\r\n\tmat4.mul(mvpMatrix, perspectiveMatrix, modelViewMatrix)\r\n\r\n\tgl.uniformMatrix4fv(uniforms.uMvpMatrix, false, mvpMatrix)\r\n\r\n\tgl.uniform1f(uniforms.uWidth, gl.drawingBufferWidth)\r\n\tgl.uniform1f(uniforms.uHeight, gl.drawingBufferHeight)\r\n\r\n\tgl.drawElements(gl.TRIANGLES, 36, gl.UNSIGNED_BYTE, 0)\r\n}\r\n\r\nlet lastTime: number = 0\r\nlet frames: number = 0\r\nlet fps: number | string\r\nconst render = function(time: DOMHighResTimeStamp = 0) {\r\n\tfps = (1000 / (time - lastTime)).toFixed(0)\r\n\tfpsCounter.textContent = fps\r\n\tframeCounter.textContent = ++frames + ''\r\n\ttimeCounter.textContent = (time / 1000).toFixed(2)\r\n\tlastTime = time\r\n\twindow.requestAnimationFrame(render)\r\n\tdrawScene()\r\n}\r\n\r\nconst webGLStart = function() {\r\n\tconst canvas: any = document.getElementById('canvas')\r\n\r\n\tconst powerPreference = 'default' || 'high-performance' || 'low-power'\r\n\tgl = WebGLUtils.setupWebGL(canvas, {\r\n\t\talpha: true,\r\n\t\tdepth: true,\r\n\t\tpowerPreference,\r\n\t})\r\n\r\n\tgl.clearColor(0.0, 0.0, 0.0, 1.0)\r\n\tgl.enable(gl.DEPTH_TEST)\r\n\r\n\tresizeCanvasToDisplaySize(gl.canvas)\r\n\r\n\tconsole.log(gl)\r\n\r\n\tconst promiseShader = new Promise((res, rej) => initShaders(res, rej))\r\n\tpromiseShader\r\n\t\t.then(() => initVariables())\r\n\t\t.then(() => initTextures())\r\n\t\t.then(() => initBuffer())\r\n\t\t.then((n) => render())\r\n\t\t.catch((error: Error) => console.error(error))\r\n}\r\n// prettier-ignore\r\nwindow.onload = function() {\r\n\t[].forEach.call(\r\n\t\tcontrolPanel.children,\r\n\t\t(child: HTMLElement) =>\r\n\t\t\t(child.children[2].innerHTML = parseFloat(child.children[1].getAttribute('value')).toFixed(\r\n\t\t\t\t2,\r\n\t\t\t)),\r\n\t)\r\n\twebGLStart()\r\n}\r\n\r\nwindow.addEventListener('resize', (e) => resizeCanvasToDisplaySize(gl.canvas))\r\n","/*\r\n * Copyright 2010, Google Inc.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *     * Redistributions of source code must retain the above copyright\r\n * notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above\r\n * copyright notice, this list of conditions and the following disclaimer\r\n * in the documentation and/or other materials provided with the\r\n * distribution.\r\n *     * Neither the name of Google Inc. nor the names of its\r\n * contributors may be used to endorse or promote products derived from\r\n * this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * Modified by Alex Garneau - Feb 2, 2012 - gskinner.com inc.\r\n */\r\n\r\n/**\r\n * @fileoverview This file contains functions every webgl program will need\r\n * a version of one way or another.\r\n *\r\n * Instead of setting up a context manually it is recommended to\r\n * use. This will check for success or failure. On failure it\r\n * will attempt to present an approriate message to the user.\r\n *\r\n *       gl = WebGLUtils.setupWebGL(canvas);\r\n *\r\n * For animated WebGL apps use of setTimeout or setInterval are\r\n * discouraged. It is recommended you structure your rendering\r\n * loop like this.\r\n *\r\n *       function render() {\r\n *         window.requestAnimFrame(render, canvas);\r\n *\r\n *         // do rendering\r\n *         ...\r\n *       }\r\n *       render();\r\n *\r\n * This will call your rendering function up to the refresh rate\r\n * of your display but will stop rendering if your app is not\r\n * visible.\r\n */\r\n\r\nexport function getPositionFromMatrix(matrix: number[]) {\r\n\treturn { x: matrix[12], y: matrix[13], z: matrix[14] }\r\n}\r\n\r\nexport function getRotationFromMatrix(matrix: number[]) {\r\n\treturn { x: Math.asin(matrix[6]), y: Math.asin(matrix[8]), z: Math.asin(matrix[1]) }\r\n}\r\n\r\nexport function degToRad(degrees: number | string): number {\r\n\treturn (parseFloat(degrees as string) * Math.PI) / 180\r\n}\r\n\r\nexport function getMousePosition(event: MouseEvent) {\r\n\treturn { x: event.offsetX, y: event.offsetY }\r\n}\r\n\r\nexport function getNodeFromMouse(\r\n\tcanvas: HTMLCanvasElement,\r\n\tmouse: MouseEvent,\r\n\tgridSize: number,\r\n\tGRID_WIDTH: number,\r\n\tGRID_HEIGHT: number,\r\n) {\r\n\t// We're getting it in this format: left=0, right=gridSize. Same with top and bottom.\r\n\t// First, let's see what the grid looks like compared to the canvas.\r\n\t// Its borders will always be touching whichever part's thinner: the width or the height.\r\n\r\n\tconst middleCanvas = { x: canvas.width / 2, y: canvas.height / 2 }\r\n\r\n\tconst pos = {\r\n\t\tx: (gridSize * (mouse.x - (middleCanvas.x - GRID_WIDTH * 0.5))) / GRID_WIDTH,\r\n\t\ty: (gridSize * (mouse.y - (middleCanvas.y - GRID_HEIGHT * 0.5))) / GRID_HEIGHT,\r\n\t}\r\n\r\n\tif (pos.x >= 0 && pos.x <= gridSize && pos.y >= 0 && pos.y <= gridSize) {\r\n\t\tconst item = { x: pos.x | 0, y: pos.y | 0 }\r\n\t\treturn item\r\n\t} else {\r\n\t\treturn null\r\n\t}\r\n}\r\nexport function getCoordinateFromMouse(\r\n\tcanvas: HTMLCanvasElement,\r\n\tmouse: MouseEvent,\r\n\tgridSize: number,\r\n\tGRID_WIDTH: number,\r\n\tGRID_HEIGHT: number,\r\n) {\r\n\t// We're getting it in this format: left=0, right=gridSize. Same with top and bottom.\r\n\t// First, let's see what the grid looks like compared to the canvas.\r\n\t// Its borders will always be touching whichever part's thinner: the width or the height.\r\n\r\n\tconst middleCanvas = { x: canvas.width, y: canvas.height }\r\n\r\n\tconst pos = {\r\n\t\tx: (gridSize * (mouse.x - (middleCanvas.x - GRID_WIDTH * 0.5))) / GRID_WIDTH,\r\n\t\ty: (gridSize * (mouse.y - (middleCanvas.y - GRID_HEIGHT * 0.5))) / GRID_HEIGHT,\r\n\t}\r\n\r\n\treturn pos\r\n}\r\n\r\n/*\r\n * When an image is loaded, this will store it in the shader to be used by the sampler references.\r\n * For example, to use the texture stored at TEXTURE0, you set the sampler to 0.\r\n */\r\n\r\nexport function addTexture(gl: WebGLRenderingContext, imageURL: string, glTexture: GLenum) {\r\n\tfunction isPowerOf2(value: number): boolean {\r\n\t\tif ((value & (value - 1)) === 0) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\tconst texture: any = gl.createTexture()\r\n\ttexture.image = new Image()\r\n\ttexture.image.onload = function() {\r\n\t\tgl.activeTexture(glTexture)\r\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1)\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\r\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this)\r\n\r\n\t\t// This clamps images whose dimensions are not a power of 2, letting you use images of any size.\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\r\n\t}\r\n\r\n\ttexture.image.src = imageURL\r\n\treturn texture\r\n}\r\n\r\nexport function ease(from: number, to: number, easiness: number) {\r\n\tif (easiness > 1) {\r\n\t\teasiness = 1 / easiness\r\n\t}\r\n\treturn (to - from) * easiness\r\n}\r\n\r\nexport function displayAlertMatrix(matrix: number[]) {\r\n\tlet testString = ''\r\n\tfor (let i = 0, l = matrix.length; i < l; i++) {\r\n\t\tif (i % 4 === 0 && i > 0) {\r\n\t\t\ttestString += '\\n'\r\n\t\t}\r\n\t\ttestString += matrix[i] + ', '\r\n\t}\r\n\ttestString += ''\r\n\talert(testString)\r\n}\r\n\r\nexport function addVectors(vec1: number[], vec2: number[]) {\r\n\tfor (let i = 0, l = vec1.length; i < l; i++) {\r\n\t\tif (vec2[i]) {\r\n\t\t\tvec1[i] += vec2[i]\r\n\t\t}\r\n\t}\r\n\treturn vec1\r\n}\r\nexport function subtractVectors(vec1: number[], vec2: number[]) {\r\n\tfor (let i = 0, l = vec1.length; i < l; i++) {\r\n\t\tif (vec2[i]) {\r\n\t\t\tvec1[i] -= vec2[i]\r\n\t\t}\r\n\t}\r\n\treturn vec1\r\n}\r\n\r\nexport function inverseVector(vec: number[]) {\r\n\tfor (let i = 0, l = vec.length; i < l; i++) {\r\n\t\tvec[i] = 1 - Math.abs(vec[i])\r\n\t}\r\n\treturn vec\r\n}\r\n\r\nexport function alertMat4(mat: number[]) {\r\n\tlet string = '['\r\n\r\n\tfor (let i = 0; i < 4; i++) {\r\n\t\tfor (let j = 0; j < 4; j++) {\r\n\t\t\tstring += Math.round(mat[i * 4 + j]).toString() + ', \\t'\r\n\t\t}\r\n\t\tstring += '\\n'\r\n\t}\r\n\tstring += ']'\r\n\talert(string)\r\n}\r\n\r\nexport function Float32Concat(original: number[], addition: number[]) {\r\n\tif (!original) {\r\n\t\treturn addition\r\n\t}\r\n\r\n\tconst length = original.length\r\n\tconst totalLength = length + addition.length\r\n\r\n\tconst result = new Float32Array(totalLength)\r\n\r\n\tresult.set(original)\r\n\tresult.set(addition, length)\r\n\r\n\treturn result\r\n}\r\n\r\nlet totalTimePassed = 0\r\nlet lastTimePassed = 0\r\nexport function ConsoleTimePassed(message: string) {\r\n\ttotalTimePassed = new Date().getTime()\r\n\tconsole.log(message + ': ' + (totalTimePassed - lastTimePassed))\r\n\tlastTimePassed = totalTimePassed\r\n}\r\n\r\nexport function easeNormalVec(vec: number[]) {\r\n\tvec[0] += (1 - vec[0]) / 2\r\n\tvec[1] += (1 - vec[1]) / 2\r\n\tvec[2] += (1 - vec[2]) / 2\r\n\r\n\treturn vec\r\n}\r\nexport function getBetweenVec(min: number[], range: number[]) {\r\n\tconst vec: number[] = [0, 0, 0]\r\n\tvec[0] = Math.random() * range[0] + min[0]\r\n\tvec[1] = Math.random() * range[1] + min[1]\r\n\tvec[2] = Math.random() * range[2] + min[2]\r\n\r\n\treturn vec\r\n}\r\n\r\nexport function normalize(vec: number[]) {\r\n\tlet i = 0\r\n\tlet total = 0\r\n\tconst l = vec.length\r\n\tfor (i = 0; i < l; i++) {\r\n\t\ttotal += vec[i]\r\n\t}\r\n\tfor (i = 0; i < l; i++) {\r\n\t\tvec[i] /= total\r\n\t}\r\n\treturn vec\r\n}\r\n\r\nconst WebGLUtils = (function() {\r\n\t/**\r\n\t * Creates the HTLM for a failure message\r\n\t * @param {string} canvasContainerId id of container of th\r\n\t *        canvas.\r\n\t * @return {string} The html.\r\n\t */\r\n\tconst makeFailHTML = function(msg: string): string {\r\n\t\treturn (\r\n\t\t\t'' +\r\n\t\t\t'<table style=\"background-color: #8CE; width: 100%; height: 100%;\"><tr>' +\r\n\t\t\t'<td align=\"center\">' +\r\n\t\t\t'<div style=\"display: table-cell; vertical-align: middle;\">' +\r\n\t\t\t'<div style=\"\">' +\r\n\t\t\tmsg +\r\n\t\t\t'</div>' +\r\n\t\t\t'</div>' +\r\n\t\t\t'</td></tr></table>'\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * Mesasge for getting a webgl browser\r\n\t * @type {string}\r\n\t */\r\n\tconst GET_A_WEBGL_BROWSER: string =\r\n\t\t'' +\r\n\t\t'This page requires a browser that supports WebGL.<br/>' +\r\n\t\t'<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>'\r\n\r\n\t/**\r\n\t * Mesasge for need better hardware\r\n\t * @type {string}\r\n\t */\r\n\tconst OTHER_PROBLEM: string = `It doesn't appear your computer can support WebGL.<br/>\r\n\t\t<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>`\r\n\r\n\t/**\r\n\t * Creates a webgl context. If creation fails it will\r\n\t * change the contents of the container of the <canvas>\r\n\t * tag to an error message with the correct links for WebGL.\r\n\t * @param {HTMLCanvasElement} canvas. The canvas element to create a\r\n\t *     context from.\r\n\t * @param {WebGLContextCreationAttirbutes} opt_attribs Any\r\n\t *     creation attributes you want to pass in.\r\n\t * @param {function:(msg)} opt_onError An function to call\r\n\t *     if there is an error during creation.\r\n\t * @return {WebGLRenderingContext} The created context.\r\n\t */\r\n\tconst setupWebGL = function(\r\n\t\tcanvas: HTMLCanvasElement,\r\n\t\topt_attribs?: object,\r\n\t\topt_onError?: any,\r\n\t): WebGLRenderingContext | CanvasRenderingContext2D {\r\n\t\tfunction handleCreationError(msg: string): void {\r\n\t\t\tconst container: Node = canvas.parentNode\r\n\t\t\tif (container) {\r\n\t\t\t\tlet str = (window as any).WebGLRenderingContext ? OTHER_PROBLEM : GET_A_WEBGL_BROWSER\r\n\t\t\t\tif (msg) {\r\n\t\t\t\t\tstr += '<br/><br/>Status: ' + msg\r\n\t\t\t\t}\r\n\t\t\t\tcontainer.textContent = makeFailHTML(str)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\topt_onError = opt_onError || handleCreationError\r\n\r\n\t\tif (canvas.addEventListener) {\r\n\t\t\tcanvas.addEventListener('webglcontextcreationerror', (event: WebGLContextEvent) =>\r\n\t\t\t\topt_onError(event.statusMessage),\r\n\t\t\t)\r\n\t\t}\r\n\t\tconst context = create3DContext(canvas, opt_attribs)\r\n\t\tif (!context) {\r\n\t\t\tif (!(window as any).WebGLRenderingContext) {\r\n\t\t\t\topt_onError('')\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn context\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a webgl context.\r\n\t * @param {!Canvas} canvas The canvas tag to get context\r\n\t *     from. If one is not passed in one will be created.\r\n\t * @return {!WebGLContext} The created context.\r\n\t */\r\n\tconst create3DContext = function(\r\n\t\tcanvas: HTMLCanvasElement,\r\n\t\topt_attribs?: object,\r\n\t): WebGLRenderingContext | CanvasRenderingContext2D {\r\n\t\tconst names = ['webgl', 'experimental-webgl', 'webkit-3d', 'moz-webgl']\r\n\t\tlet context = null\r\n\t\tfor (const name of names) {\r\n\t\t\ttry {\r\n\t\t\t\tcontext = canvas.getContext(name, opt_attribs)\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e)\r\n\t\t\t}\r\n\t\t\tif (context) {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn context\r\n\t}\r\n\r\n\treturn { setupWebGL, create3DContext }\r\n})()\r\n\r\nwindow.requestAnimationFrame = (function() {\r\n\treturn (\r\n\t\t(window as any).requestAnimationFrame ||\r\n\t\t(window as any).webkitRequestAnimationFrame ||\r\n\t\t(window as any).mozRequestAnimationFrame ||\r\n\t\t(window as any).oRequestAnimationFrame ||\r\n\t\t(window as any).msRequestAnimationFrame ||\r\n\t\tfunction(callback: () => void) {\r\n\t\t\twindow.setTimeout(callback, 1000 / 15)\r\n\t\t}\r\n\t)\r\n})()\r\n\r\nexport default WebGLUtils\r\n","/*!\r\n@fileoverview gl-matrix - High performance matrix and vector operations\r\n@author Brandon Jones\r\n@author Colin MacKenzie IV\r\n@version 3.0.0-0\r\n\r\nCopyright (c) 2015-2018, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n*/\r\n;(function(global, factory) {\r\n\ttypeof exports === 'object' && typeof module !== 'undefined'\r\n\t\t? factory(exports)\r\n\t\t: typeof define === 'function' && define.amd\r\n\t\t? define(['exports'], factory)\r\n\t\t: factory((global.glMatrix = {}))\r\n})(this, function(exports) {\r\n\t'use strict'\r\n\r\n\t/**\r\n\t * Common utilities\r\n\t * @module glMatrix\r\n\t */\r\n\t// Configuration Constants\r\n\tvar EPSILON = 0.000001\r\n\tvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array\r\n\tvar RANDOM = Math.random\r\n\t/**\r\n\t * Sets the type of array used when creating new vectors and matrices\r\n\t *\r\n\t * @param {Type} type Array type, such as Float32Array or Array\r\n\t */\r\n\r\n\tfunction setMatrixArrayType(type) {\r\n\t\tARRAY_TYPE = type\r\n\t}\r\n\tvar degree = Math.PI / 180\r\n\t/**\r\n\t * Convert Degree To Radian\r\n\t *\r\n\t * @param {Number} a Angle in Degrees\r\n\t */\r\n\r\n\tfunction toRadian(a) {\r\n\t\treturn a * degree\r\n\t}\r\n\t/**\r\n\t * Tests whether or not the arguments have approximately the same value, within an absolute\r\n\t * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n\t * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n\t *\r\n\t * @param {Number} a The first number to test.\r\n\t * @param {Number} b The second number to test.\r\n\t * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n\t */\r\n\r\n\tfunction equals(a, b) {\r\n\t\treturn Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b))\r\n\t}\r\n\r\n\tvar common = /*#__PURE__*/ Object.freeze({\r\n\t\tEPSILON: EPSILON,\r\n\t\tget ARRAY_TYPE() {\r\n\t\t\treturn ARRAY_TYPE\r\n\t\t},\r\n\t\tRANDOM: RANDOM,\r\n\t\tsetMatrixArrayType: setMatrixArrayType,\r\n\t\ttoRadian: toRadian,\r\n\t\tequals: equals,\r\n\t})\r\n\r\n\t/**\r\n\t * 2x2 Matrix\r\n\t * @module mat2\r\n\t */\r\n\r\n\t/**\r\n\t * Creates a new identity mat2\r\n\t *\r\n\t * @returns {mat2} a new 2x2 matrix\r\n\t */\r\n\r\n\tfunction create() {\r\n\t\tvar out = new ARRAY_TYPE(4)\r\n\r\n\t\tif (ARRAY_TYPE != Float32Array) {\r\n\t\t\tout[1] = 0\r\n\t\t\tout[2] = 0\r\n\t\t}\r\n\r\n\t\tout[0] = 1\r\n\t\tout[3] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a new mat2 initialized with values from an existing matrix\r\n\t *\r\n\t * @param {mat2} a matrix to clone\r\n\t * @returns {mat2} a new 2x2 matrix\r\n\t */\r\n\r\n\tfunction clone(a) {\r\n\t\tvar out = new ARRAY_TYPE(4)\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = a[2]\r\n\t\tout[3] = a[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Copy the values from one mat2 to another\r\n\t *\r\n\t * @param {mat2} out the receiving matrix\r\n\t * @param {mat2} a the source matrix\r\n\t * @returns {mat2} out\r\n\t */\r\n\r\n\tfunction copy(out, a) {\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = a[2]\r\n\t\tout[3] = a[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set a mat2 to the identity matrix\r\n\t *\r\n\t * @param {mat2} out the receiving matrix\r\n\t * @returns {mat2} out\r\n\t */\r\n\r\n\tfunction identity(out) {\r\n\t\tout[0] = 1\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Create a new mat2 with the given values\r\n\t *\r\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n\t * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n\t * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n\t * @returns {mat2} out A new 2x2 matrix\r\n\t */\r\n\r\n\tfunction fromValues(m00, m01, m10, m11) {\r\n\t\tvar out = new ARRAY_TYPE(4)\r\n\t\tout[0] = m00\r\n\t\tout[1] = m01\r\n\t\tout[2] = m10\r\n\t\tout[3] = m11\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set the components of a mat2 to the given values\r\n\t *\r\n\t * @param {mat2} out the receiving matrix\r\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n\t * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n\t * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n\t * @returns {mat2} out\r\n\t */\r\n\r\n\tfunction set(out, m00, m01, m10, m11) {\r\n\t\tout[0] = m00\r\n\t\tout[1] = m01\r\n\t\tout[2] = m10\r\n\t\tout[3] = m11\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Transpose the values of a mat2\r\n\t *\r\n\t * @param {mat2} out the receiving matrix\r\n\t * @param {mat2} a the source matrix\r\n\t * @returns {mat2} out\r\n\t */\r\n\r\n\tfunction transpose(out, a) {\r\n\t\t// If we are transposing ourselves we can skip a few steps but have to cache\r\n\t\t// some values\r\n\t\tif (out === a) {\r\n\t\t\tvar a1 = a[1]\r\n\t\t\tout[1] = a[2]\r\n\t\t\tout[2] = a1\r\n\t\t} else {\r\n\t\t\tout[0] = a[0]\r\n\t\t\tout[1] = a[2]\r\n\t\t\tout[2] = a[1]\r\n\t\t\tout[3] = a[3]\r\n\t\t}\r\n\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Inverts a mat2\r\n\t *\r\n\t * @param {mat2} out the receiving matrix\r\n\t * @param {mat2} a the source matrix\r\n\t * @returns {mat2} out\r\n\t */\r\n\r\n\tfunction invert(out, a) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3] // Calculate the determinant\r\n\r\n\t\tvar det = a0 * a3 - a2 * a1\r\n\r\n\t\tif (!det) {\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tdet = 1.0 / det\r\n\t\tout[0] = a3 * det\r\n\t\tout[1] = -a1 * det\r\n\t\tout[2] = -a2 * det\r\n\t\tout[3] = a0 * det\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the adjugate of a mat2\r\n\t *\r\n\t * @param {mat2} out the receiving matrix\r\n\t * @param {mat2} a the source matrix\r\n\t * @returns {mat2} out\r\n\t */\r\n\r\n\tfunction adjoint(out, a) {\r\n\t\t// Caching this value is nessecary if out == a\r\n\t\tvar a0 = a[0]\r\n\t\tout[0] = a[3]\r\n\t\tout[1] = -a[1]\r\n\t\tout[2] = -a[2]\r\n\t\tout[3] = a0\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the determinant of a mat2\r\n\t *\r\n\t * @param {mat2} a the source matrix\r\n\t * @returns {Number} determinant of a\r\n\t */\r\n\r\n\tfunction determinant(a) {\r\n\t\treturn a[0] * a[3] - a[2] * a[1]\r\n\t}\r\n\t/**\r\n\t * Multiplies two mat2's\r\n\t *\r\n\t * @param {mat2} out the receiving matrix\r\n\t * @param {mat2} a the first operand\r\n\t * @param {mat2} b the second operand\r\n\t * @returns {mat2} out\r\n\t */\r\n\r\n\tfunction multiply(out, a, b) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3]\r\n\t\tvar b0 = b[0],\r\n\t\t\tb1 = b[1],\r\n\t\t\tb2 = b[2],\r\n\t\t\tb3 = b[3]\r\n\t\tout[0] = a0 * b0 + a2 * b1\r\n\t\tout[1] = a1 * b0 + a3 * b1\r\n\t\tout[2] = a0 * b2 + a2 * b3\r\n\t\tout[3] = a1 * b2 + a3 * b3\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a mat2 by the given angle\r\n\t *\r\n\t * @param {mat2} out the receiving matrix\r\n\t * @param {mat2} a the matrix to rotate\r\n\t * @param {Number} rad the angle to rotate the matrix by\r\n\t * @returns {mat2} out\r\n\t */\r\n\r\n\tfunction rotate(out, a, rad) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3]\r\n\t\tvar s = Math.sin(rad)\r\n\t\tvar c = Math.cos(rad)\r\n\t\tout[0] = a0 * c + a2 * s\r\n\t\tout[1] = a1 * c + a3 * s\r\n\t\tout[2] = a0 * -s + a2 * c\r\n\t\tout[3] = a1 * -s + a3 * c\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Scales the mat2 by the dimensions in the given vec2\r\n\t *\r\n\t * @param {mat2} out the receiving matrix\r\n\t * @param {mat2} a the matrix to rotate\r\n\t * @param {vec2} v the vec2 to scale the matrix by\r\n\t * @returns {mat2} out\r\n\t **/\r\n\r\n\tfunction scale(out, a, v) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3]\r\n\t\tvar v0 = v[0],\r\n\t\t\tv1 = v[1]\r\n\t\tout[0] = a0 * v0\r\n\t\tout[1] = a1 * v0\r\n\t\tout[2] = a2 * v1\r\n\t\tout[3] = a3 * v1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from a given angle\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat2.identity(dest);\r\n\t *     mat2.rotate(dest, dest, rad);\r\n\t *\r\n\t * @param {mat2} out mat2 receiving operation result\r\n\t * @param {Number} rad the angle to rotate the matrix by\r\n\t * @returns {mat2} out\r\n\t */\r\n\r\n\tfunction fromRotation(out, rad) {\r\n\t\tvar s = Math.sin(rad)\r\n\t\tvar c = Math.cos(rad)\r\n\t\tout[0] = c\r\n\t\tout[1] = s\r\n\t\tout[2] = -s\r\n\t\tout[3] = c\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from a vector scaling\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat2.identity(dest);\r\n\t *     mat2.scale(dest, dest, vec);\r\n\t *\r\n\t * @param {mat2} out mat2 receiving operation result\r\n\t * @param {vec2} v Scaling vector\r\n\t * @returns {mat2} out\r\n\t */\r\n\r\n\tfunction fromScaling(out, v) {\r\n\t\tout[0] = v[0]\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = v[1]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns a string representation of a mat2\r\n\t *\r\n\t * @param {mat2} a matrix to represent as a string\r\n\t * @returns {String} string representation of the matrix\r\n\t */\r\n\r\n\tfunction str(a) {\r\n\t\treturn 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')'\r\n\t}\r\n\t/**\r\n\t * Returns Frobenius norm of a mat2\r\n\t *\r\n\t * @param {mat2} a the matrix to calculate Frobenius norm of\r\n\t * @returns {Number} Frobenius norm\r\n\t */\r\n\r\n\tfunction frob(a) {\r\n\t\treturn Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2))\r\n\t}\r\n\t/**\r\n\t * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n\t * @param {mat2} L the lower triangular matrix\r\n\t * @param {mat2} D the diagonal matrix\r\n\t * @param {mat2} U the upper triangular matrix\r\n\t * @param {mat2} a the input matrix to factorize\r\n\t */\r\n\r\n\tfunction LDU(L, D, U, a) {\r\n\t\tL[2] = a[2] / a[0]\r\n\t\tU[0] = a[0]\r\n\t\tU[1] = a[1]\r\n\t\tU[3] = a[3] - L[2] * U[1]\r\n\t\treturn [L, D, U]\r\n\t}\r\n\t/**\r\n\t * Adds two mat2's\r\n\t *\r\n\t * @param {mat2} out the receiving matrix\r\n\t * @param {mat2} a the first operand\r\n\t * @param {mat2} b the second operand\r\n\t * @returns {mat2} out\r\n\t */\r\n\r\n\tfunction add(out, a, b) {\r\n\t\tout[0] = a[0] + b[0]\r\n\t\tout[1] = a[1] + b[1]\r\n\t\tout[2] = a[2] + b[2]\r\n\t\tout[3] = a[3] + b[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Subtracts matrix b from matrix a\r\n\t *\r\n\t * @param {mat2} out the receiving matrix\r\n\t * @param {mat2} a the first operand\r\n\t * @param {mat2} b the second operand\r\n\t * @returns {mat2} out\r\n\t */\r\n\r\n\tfunction subtract(out, a, b) {\r\n\t\tout[0] = a[0] - b[0]\r\n\t\tout[1] = a[1] - b[1]\r\n\t\tout[2] = a[2] - b[2]\r\n\t\tout[3] = a[3] - b[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n\t *\r\n\t * @param {mat2} a The first matrix.\r\n\t * @param {mat2} b The second matrix.\r\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction exactEquals(a, b) {\r\n\t\treturn a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3]\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the matrices have approximately the same elements in the same position.\r\n\t *\r\n\t * @param {mat2} a The first matrix.\r\n\t * @param {mat2} b The second matrix.\r\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction equals$1(a, b) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3]\r\n\t\tvar b0 = b[0],\r\n\t\t\tb1 = b[1],\r\n\t\t\tb2 = b[2],\r\n\t\t\tb3 = b[3]\r\n\t\treturn (\r\n\t\t\tMath.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n\t\t\tMath.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n\t\t\tMath.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3))\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Multiply each element of the matrix by a scalar.\r\n\t *\r\n\t * @param {mat2} out the receiving matrix\r\n\t * @param {mat2} a the matrix to scale\r\n\t * @param {Number} b amount to scale the matrix's elements by\r\n\t * @returns {mat2} out\r\n\t */\r\n\r\n\tfunction multiplyScalar(out, a, b) {\r\n\t\tout[0] = a[0] * b\r\n\t\tout[1] = a[1] * b\r\n\t\tout[2] = a[2] * b\r\n\t\tout[3] = a[3] * b\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n\t *\r\n\t * @param {mat2} out the receiving vector\r\n\t * @param {mat2} a the first operand\r\n\t * @param {mat2} b the second operand\r\n\t * @param {Number} scale the amount to scale b's elements by before adding\r\n\t * @returns {mat2} out\r\n\t */\r\n\r\n\tfunction multiplyScalarAndAdd(out, a, b, scale) {\r\n\t\tout[0] = a[0] + b[0] * scale\r\n\t\tout[1] = a[1] + b[1] * scale\r\n\t\tout[2] = a[2] + b[2] * scale\r\n\t\tout[3] = a[3] + b[3] * scale\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Alias for {@link mat2.multiply}\r\n\t * @function\r\n\t */\r\n\r\n\tvar mul = multiply\r\n\t/**\r\n\t * Alias for {@link mat2.subtract}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sub = subtract\r\n\r\n\tvar mat2 = /*#__PURE__*/ Object.freeze({\r\n\t\tcreate: create,\r\n\t\tclone: clone,\r\n\t\tcopy: copy,\r\n\t\tidentity: identity,\r\n\t\tfromValues: fromValues,\r\n\t\tset: set,\r\n\t\ttranspose: transpose,\r\n\t\tinvert: invert,\r\n\t\tadjoint: adjoint,\r\n\t\tdeterminant: determinant,\r\n\t\tmultiply: multiply,\r\n\t\trotate: rotate,\r\n\t\tscale: scale,\r\n\t\tfromRotation: fromRotation,\r\n\t\tfromScaling: fromScaling,\r\n\t\tstr: str,\r\n\t\tfrob: frob,\r\n\t\tLDU: LDU,\r\n\t\tadd: add,\r\n\t\tsubtract: subtract,\r\n\t\texactEquals: exactEquals,\r\n\t\tequals: equals$1,\r\n\t\tmultiplyScalar: multiplyScalar,\r\n\t\tmultiplyScalarAndAdd: multiplyScalarAndAdd,\r\n\t\tmul: mul,\r\n\t\tsub: sub,\r\n\t})\r\n\r\n\t/**\r\n\t * 2x3 Matrix\r\n\t * @module mat2d\r\n\t *\r\n\t * @description\r\n\t * A mat2d contains six elements defined as:\r\n\t * <pre>\r\n\t * [a, c, tx,\r\n\t *  b, d, ty]\r\n\t * </pre>\r\n\t * This is a short form for the 3x3 matrix:\r\n\t * <pre>\r\n\t * [a, c, tx,\r\n\t *  b, d, ty,\r\n\t *  0, 0, 1]\r\n\t * </pre>\r\n\t * The last row is ignored so the array is shorter and operations are faster.\r\n\t */\r\n\r\n\t/**\r\n\t * Creates a new identity mat2d\r\n\t *\r\n\t * @returns {mat2d} a new 2x3 matrix\r\n\t */\r\n\r\n\tfunction create$1() {\r\n\t\tvar out = new ARRAY_TYPE(6)\r\n\r\n\t\tif (ARRAY_TYPE != Float32Array) {\r\n\t\t\tout[1] = 0\r\n\t\t\tout[2] = 0\r\n\t\t\tout[4] = 0\r\n\t\t\tout[5] = 0\r\n\t\t}\r\n\r\n\t\tout[0] = 1\r\n\t\tout[3] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a new mat2d initialized with values from an existing matrix\r\n\t *\r\n\t * @param {mat2d} a matrix to clone\r\n\t * @returns {mat2d} a new 2x3 matrix\r\n\t */\r\n\r\n\tfunction clone$1(a) {\r\n\t\tvar out = new ARRAY_TYPE(6)\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = a[2]\r\n\t\tout[3] = a[3]\r\n\t\tout[4] = a[4]\r\n\t\tout[5] = a[5]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Copy the values from one mat2d to another\r\n\t *\r\n\t * @param {mat2d} out the receiving matrix\r\n\t * @param {mat2d} a the source matrix\r\n\t * @returns {mat2d} out\r\n\t */\r\n\r\n\tfunction copy$1(out, a) {\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = a[2]\r\n\t\tout[3] = a[3]\r\n\t\tout[4] = a[4]\r\n\t\tout[5] = a[5]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set a mat2d to the identity matrix\r\n\t *\r\n\t * @param {mat2d} out the receiving matrix\r\n\t * @returns {mat2d} out\r\n\t */\r\n\r\n\tfunction identity$1(out) {\r\n\t\tout[0] = 1\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 1\r\n\t\tout[4] = 0\r\n\t\tout[5] = 0\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Create a new mat2d with the given values\r\n\t *\r\n\t * @param {Number} a Component A (index 0)\r\n\t * @param {Number} b Component B (index 1)\r\n\t * @param {Number} c Component C (index 2)\r\n\t * @param {Number} d Component D (index 3)\r\n\t * @param {Number} tx Component TX (index 4)\r\n\t * @param {Number} ty Component TY (index 5)\r\n\t * @returns {mat2d} A new mat2d\r\n\t */\r\n\r\n\tfunction fromValues$1(a, b, c, d, tx, ty) {\r\n\t\tvar out = new ARRAY_TYPE(6)\r\n\t\tout[0] = a\r\n\t\tout[1] = b\r\n\t\tout[2] = c\r\n\t\tout[3] = d\r\n\t\tout[4] = tx\r\n\t\tout[5] = ty\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set the components of a mat2d to the given values\r\n\t *\r\n\t * @param {mat2d} out the receiving matrix\r\n\t * @param {Number} a Component A (index 0)\r\n\t * @param {Number} b Component B (index 1)\r\n\t * @param {Number} c Component C (index 2)\r\n\t * @param {Number} d Component D (index 3)\r\n\t * @param {Number} tx Component TX (index 4)\r\n\t * @param {Number} ty Component TY (index 5)\r\n\t * @returns {mat2d} out\r\n\t */\r\n\r\n\tfunction set$1(out, a, b, c, d, tx, ty) {\r\n\t\tout[0] = a\r\n\t\tout[1] = b\r\n\t\tout[2] = c\r\n\t\tout[3] = d\r\n\t\tout[4] = tx\r\n\t\tout[5] = ty\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Inverts a mat2d\r\n\t *\r\n\t * @param {mat2d} out the receiving matrix\r\n\t * @param {mat2d} a the source matrix\r\n\t * @returns {mat2d} out\r\n\t */\r\n\r\n\tfunction invert$1(out, a) {\r\n\t\tvar aa = a[0],\r\n\t\t\tab = a[1],\r\n\t\t\tac = a[2],\r\n\t\t\tad = a[3]\r\n\t\tvar atx = a[4],\r\n\t\t\taty = a[5]\r\n\t\tvar det = aa * ad - ab * ac\r\n\r\n\t\tif (!det) {\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tdet = 1.0 / det\r\n\t\tout[0] = ad * det\r\n\t\tout[1] = -ab * det\r\n\t\tout[2] = -ac * det\r\n\t\tout[3] = aa * det\r\n\t\tout[4] = (ac * aty - ad * atx) * det\r\n\t\tout[5] = (ab * atx - aa * aty) * det\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the determinant of a mat2d\r\n\t *\r\n\t * @param {mat2d} a the source matrix\r\n\t * @returns {Number} determinant of a\r\n\t */\r\n\r\n\tfunction determinant$1(a) {\r\n\t\treturn a[0] * a[3] - a[1] * a[2]\r\n\t}\r\n\t/**\r\n\t * Multiplies two mat2d's\r\n\t *\r\n\t * @param {mat2d} out the receiving matrix\r\n\t * @param {mat2d} a the first operand\r\n\t * @param {mat2d} b the second operand\r\n\t * @returns {mat2d} out\r\n\t */\r\n\r\n\tfunction multiply$1(out, a, b) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3],\r\n\t\t\ta4 = a[4],\r\n\t\t\ta5 = a[5]\r\n\t\tvar b0 = b[0],\r\n\t\t\tb1 = b[1],\r\n\t\t\tb2 = b[2],\r\n\t\t\tb3 = b[3],\r\n\t\t\tb4 = b[4],\r\n\t\t\tb5 = b[5]\r\n\t\tout[0] = a0 * b0 + a2 * b1\r\n\t\tout[1] = a1 * b0 + a3 * b1\r\n\t\tout[2] = a0 * b2 + a2 * b3\r\n\t\tout[3] = a1 * b2 + a3 * b3\r\n\t\tout[4] = a0 * b4 + a2 * b5 + a4\r\n\t\tout[5] = a1 * b4 + a3 * b5 + a5\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a mat2d by the given angle\r\n\t *\r\n\t * @param {mat2d} out the receiving matrix\r\n\t * @param {mat2d} a the matrix to rotate\r\n\t * @param {Number} rad the angle to rotate the matrix by\r\n\t * @returns {mat2d} out\r\n\t */\r\n\r\n\tfunction rotate$1(out, a, rad) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3],\r\n\t\t\ta4 = a[4],\r\n\t\t\ta5 = a[5]\r\n\t\tvar s = Math.sin(rad)\r\n\t\tvar c = Math.cos(rad)\r\n\t\tout[0] = a0 * c + a2 * s\r\n\t\tout[1] = a1 * c + a3 * s\r\n\t\tout[2] = a0 * -s + a2 * c\r\n\t\tout[3] = a1 * -s + a3 * c\r\n\t\tout[4] = a4\r\n\t\tout[5] = a5\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Scales the mat2d by the dimensions in the given vec2\r\n\t *\r\n\t * @param {mat2d} out the receiving matrix\r\n\t * @param {mat2d} a the matrix to translate\r\n\t * @param {vec2} v the vec2 to scale the matrix by\r\n\t * @returns {mat2d} out\r\n\t **/\r\n\r\n\tfunction scale$1(out, a, v) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3],\r\n\t\t\ta4 = a[4],\r\n\t\t\ta5 = a[5]\r\n\t\tvar v0 = v[0],\r\n\t\t\tv1 = v[1]\r\n\t\tout[0] = a0 * v0\r\n\t\tout[1] = a1 * v0\r\n\t\tout[2] = a2 * v1\r\n\t\tout[3] = a3 * v1\r\n\t\tout[4] = a4\r\n\t\tout[5] = a5\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Translates the mat2d by the dimensions in the given vec2\r\n\t *\r\n\t * @param {mat2d} out the receiving matrix\r\n\t * @param {mat2d} a the matrix to translate\r\n\t * @param {vec2} v the vec2 to translate the matrix by\r\n\t * @returns {mat2d} out\r\n\t **/\r\n\r\n\tfunction translate(out, a, v) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3],\r\n\t\t\ta4 = a[4],\r\n\t\t\ta5 = a[5]\r\n\t\tvar v0 = v[0],\r\n\t\t\tv1 = v[1]\r\n\t\tout[0] = a0\r\n\t\tout[1] = a1\r\n\t\tout[2] = a2\r\n\t\tout[3] = a3\r\n\t\tout[4] = a0 * v0 + a2 * v1 + a4\r\n\t\tout[5] = a1 * v0 + a3 * v1 + a5\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from a given angle\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat2d.identity(dest);\r\n\t *     mat2d.rotate(dest, dest, rad);\r\n\t *\r\n\t * @param {mat2d} out mat2d receiving operation result\r\n\t * @param {Number} rad the angle to rotate the matrix by\r\n\t * @returns {mat2d} out\r\n\t */\r\n\r\n\tfunction fromRotation$1(out, rad) {\r\n\t\tvar s = Math.sin(rad),\r\n\t\t\tc = Math.cos(rad)\r\n\t\tout[0] = c\r\n\t\tout[1] = s\r\n\t\tout[2] = -s\r\n\t\tout[3] = c\r\n\t\tout[4] = 0\r\n\t\tout[5] = 0\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from a vector scaling\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat2d.identity(dest);\r\n\t *     mat2d.scale(dest, dest, vec);\r\n\t *\r\n\t * @param {mat2d} out mat2d receiving operation result\r\n\t * @param {vec2} v Scaling vector\r\n\t * @returns {mat2d} out\r\n\t */\r\n\r\n\tfunction fromScaling$1(out, v) {\r\n\t\tout[0] = v[0]\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = v[1]\r\n\t\tout[4] = 0\r\n\t\tout[5] = 0\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from a vector translation\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat2d.identity(dest);\r\n\t *     mat2d.translate(dest, dest, vec);\r\n\t *\r\n\t * @param {mat2d} out mat2d receiving operation result\r\n\t * @param {vec2} v Translation vector\r\n\t * @returns {mat2d} out\r\n\t */\r\n\r\n\tfunction fromTranslation(out, v) {\r\n\t\tout[0] = 1\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 1\r\n\t\tout[4] = v[0]\r\n\t\tout[5] = v[1]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns a string representation of a mat2d\r\n\t *\r\n\t * @param {mat2d} a matrix to represent as a string\r\n\t * @returns {String} string representation of the matrix\r\n\t */\r\n\r\n\tfunction str$1(a) {\r\n\t\treturn (\r\n\t\t\t'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')'\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Returns Frobenius norm of a mat2d\r\n\t *\r\n\t * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n\t * @returns {Number} Frobenius norm\r\n\t */\r\n\r\n\tfunction frob$1(a) {\r\n\t\treturn Math.sqrt(\r\n\t\t\tMath.pow(a[0], 2) +\r\n\t\t\t\tMath.pow(a[1], 2) +\r\n\t\t\t\tMath.pow(a[2], 2) +\r\n\t\t\t\tMath.pow(a[3], 2) +\r\n\t\t\t\tMath.pow(a[4], 2) +\r\n\t\t\t\tMath.pow(a[5], 2) +\r\n\t\t\t\t1,\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Adds two mat2d's\r\n\t *\r\n\t * @param {mat2d} out the receiving matrix\r\n\t * @param {mat2d} a the first operand\r\n\t * @param {mat2d} b the second operand\r\n\t * @returns {mat2d} out\r\n\t */\r\n\r\n\tfunction add$1(out, a, b) {\r\n\t\tout[0] = a[0] + b[0]\r\n\t\tout[1] = a[1] + b[1]\r\n\t\tout[2] = a[2] + b[2]\r\n\t\tout[3] = a[3] + b[3]\r\n\t\tout[4] = a[4] + b[4]\r\n\t\tout[5] = a[5] + b[5]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Subtracts matrix b from matrix a\r\n\t *\r\n\t * @param {mat2d} out the receiving matrix\r\n\t * @param {mat2d} a the first operand\r\n\t * @param {mat2d} b the second operand\r\n\t * @returns {mat2d} out\r\n\t */\r\n\r\n\tfunction subtract$1(out, a, b) {\r\n\t\tout[0] = a[0] - b[0]\r\n\t\tout[1] = a[1] - b[1]\r\n\t\tout[2] = a[2] - b[2]\r\n\t\tout[3] = a[3] - b[3]\r\n\t\tout[4] = a[4] - b[4]\r\n\t\tout[5] = a[5] - b[5]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Multiply each element of the matrix by a scalar.\r\n\t *\r\n\t * @param {mat2d} out the receiving matrix\r\n\t * @param {mat2d} a the matrix to scale\r\n\t * @param {Number} b amount to scale the matrix's elements by\r\n\t * @returns {mat2d} out\r\n\t */\r\n\r\n\tfunction multiplyScalar$1(out, a, b) {\r\n\t\tout[0] = a[0] * b\r\n\t\tout[1] = a[1] * b\r\n\t\tout[2] = a[2] * b\r\n\t\tout[3] = a[3] * b\r\n\t\tout[4] = a[4] * b\r\n\t\tout[5] = a[5] * b\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n\t *\r\n\t * @param {mat2d} out the receiving vector\r\n\t * @param {mat2d} a the first operand\r\n\t * @param {mat2d} b the second operand\r\n\t * @param {Number} scale the amount to scale b's elements by before adding\r\n\t * @returns {mat2d} out\r\n\t */\r\n\r\n\tfunction multiplyScalarAndAdd$1(out, a, b, scale) {\r\n\t\tout[0] = a[0] + b[0] * scale\r\n\t\tout[1] = a[1] + b[1] * scale\r\n\t\tout[2] = a[2] + b[2] * scale\r\n\t\tout[3] = a[3] + b[3] * scale\r\n\t\tout[4] = a[4] + b[4] * scale\r\n\t\tout[5] = a[5] + b[5] * scale\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n\t *\r\n\t * @param {mat2d} a The first matrix.\r\n\t * @param {mat2d} b The second matrix.\r\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction exactEquals$1(a, b) {\r\n\t\treturn (\r\n\t\t\ta[0] === b[0] &&\r\n\t\t\ta[1] === b[1] &&\r\n\t\t\ta[2] === b[2] &&\r\n\t\t\ta[3] === b[3] &&\r\n\t\t\ta[4] === b[4] &&\r\n\t\t\ta[5] === b[5]\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the matrices have approximately the same elements in the same position.\r\n\t *\r\n\t * @param {mat2d} a The first matrix.\r\n\t * @param {mat2d} b The second matrix.\r\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction equals$2(a, b) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3],\r\n\t\t\ta4 = a[4],\r\n\t\t\ta5 = a[5]\r\n\t\tvar b0 = b[0],\r\n\t\t\tb1 = b[1],\r\n\t\t\tb2 = b[2],\r\n\t\t\tb3 = b[3],\r\n\t\t\tb4 = b[4],\r\n\t\t\tb5 = b[5]\r\n\t\treturn (\r\n\t\t\tMath.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n\t\t\tMath.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n\t\t\tMath.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\r\n\t\t\tMath.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\r\n\t\t\tMath.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5))\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Alias for {@link mat2d.multiply}\r\n\t * @function\r\n\t */\r\n\r\n\tvar mul$1 = multiply$1\r\n\t/**\r\n\t * Alias for {@link mat2d.subtract}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sub$1 = subtract$1\r\n\r\n\tvar mat2d = /*#__PURE__*/ Object.freeze({\r\n\t\tcreate: create$1,\r\n\t\tclone: clone$1,\r\n\t\tcopy: copy$1,\r\n\t\tidentity: identity$1,\r\n\t\tfromValues: fromValues$1,\r\n\t\tset: set$1,\r\n\t\tinvert: invert$1,\r\n\t\tdeterminant: determinant$1,\r\n\t\tmultiply: multiply$1,\r\n\t\trotate: rotate$1,\r\n\t\tscale: scale$1,\r\n\t\ttranslate: translate,\r\n\t\tfromRotation: fromRotation$1,\r\n\t\tfromScaling: fromScaling$1,\r\n\t\tfromTranslation: fromTranslation,\r\n\t\tstr: str$1,\r\n\t\tfrob: frob$1,\r\n\t\tadd: add$1,\r\n\t\tsubtract: subtract$1,\r\n\t\tmultiplyScalar: multiplyScalar$1,\r\n\t\tmultiplyScalarAndAdd: multiplyScalarAndAdd$1,\r\n\t\texactEquals: exactEquals$1,\r\n\t\tequals: equals$2,\r\n\t\tmul: mul$1,\r\n\t\tsub: sub$1,\r\n\t})\r\n\r\n\t/**\r\n\t * 3x3 Matrix\r\n\t * @module mat3\r\n\t */\r\n\r\n\t/**\r\n\t * Creates a new identity mat3\r\n\t *\r\n\t * @returns {mat3} a new 3x3 matrix\r\n\t */\r\n\r\n\tfunction create$2() {\r\n\t\tvar out = new ARRAY_TYPE(9)\r\n\r\n\t\tif (ARRAY_TYPE != Float32Array) {\r\n\t\t\tout[1] = 0\r\n\t\t\tout[2] = 0\r\n\t\t\tout[3] = 0\r\n\t\t\tout[5] = 0\r\n\t\t\tout[6] = 0\r\n\t\t\tout[7] = 0\r\n\t\t}\r\n\r\n\t\tout[0] = 1\r\n\t\tout[4] = 1\r\n\t\tout[8] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Copies the upper-left 3x3 values into the given mat3.\r\n\t *\r\n\t * @param {mat3} out the receiving 3x3 matrix\r\n\t * @param {mat4} a   the source 4x4 matrix\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction fromMat4(out, a) {\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = a[2]\r\n\t\tout[3] = a[4]\r\n\t\tout[4] = a[5]\r\n\t\tout[5] = a[6]\r\n\t\tout[6] = a[8]\r\n\t\tout[7] = a[9]\r\n\t\tout[8] = a[10]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a new mat3 initialized with values from an existing matrix\r\n\t *\r\n\t * @param {mat3} a matrix to clone\r\n\t * @returns {mat3} a new 3x3 matrix\r\n\t */\r\n\r\n\tfunction clone$2(a) {\r\n\t\tvar out = new ARRAY_TYPE(9)\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = a[2]\r\n\t\tout[3] = a[3]\r\n\t\tout[4] = a[4]\r\n\t\tout[5] = a[5]\r\n\t\tout[6] = a[6]\r\n\t\tout[7] = a[7]\r\n\t\tout[8] = a[8]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Copy the values from one mat3 to another\r\n\t *\r\n\t * @param {mat3} out the receiving matrix\r\n\t * @param {mat3} a the source matrix\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction copy$2(out, a) {\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = a[2]\r\n\t\tout[3] = a[3]\r\n\t\tout[4] = a[4]\r\n\t\tout[5] = a[5]\r\n\t\tout[6] = a[6]\r\n\t\tout[7] = a[7]\r\n\t\tout[8] = a[8]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Create a new mat3 with the given values\r\n\t *\r\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n\t * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n\t * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n\t * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n\t * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n\t * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n\t * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n\t * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n\t * @returns {mat3} A new mat3\r\n\t */\r\n\r\n\tfunction fromValues$2(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n\t\tvar out = new ARRAY_TYPE(9)\r\n\t\tout[0] = m00\r\n\t\tout[1] = m01\r\n\t\tout[2] = m02\r\n\t\tout[3] = m10\r\n\t\tout[4] = m11\r\n\t\tout[5] = m12\r\n\t\tout[6] = m20\r\n\t\tout[7] = m21\r\n\t\tout[8] = m22\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set the components of a mat3 to the given values\r\n\t *\r\n\t * @param {mat3} out the receiving matrix\r\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n\t * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n\t * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n\t * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n\t * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n\t * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n\t * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n\t * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction set$2(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n\t\tout[0] = m00\r\n\t\tout[1] = m01\r\n\t\tout[2] = m02\r\n\t\tout[3] = m10\r\n\t\tout[4] = m11\r\n\t\tout[5] = m12\r\n\t\tout[6] = m20\r\n\t\tout[7] = m21\r\n\t\tout[8] = m22\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set a mat3 to the identity matrix\r\n\t *\r\n\t * @param {mat3} out the receiving matrix\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction identity$2(out) {\r\n\t\tout[0] = 1\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 0\r\n\t\tout[4] = 1\r\n\t\tout[5] = 0\r\n\t\tout[6] = 0\r\n\t\tout[7] = 0\r\n\t\tout[8] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Transpose the values of a mat3\r\n\t *\r\n\t * @param {mat3} out the receiving matrix\r\n\t * @param {mat3} a the source matrix\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction transpose$1(out, a) {\r\n\t\t// If we are transposing ourselves we can skip a few steps but have to cache some values\r\n\t\tif (out === a) {\r\n\t\t\tvar a01 = a[1],\r\n\t\t\t\ta02 = a[2],\r\n\t\t\t\ta12 = a[5]\r\n\t\t\tout[1] = a[3]\r\n\t\t\tout[2] = a[6]\r\n\t\t\tout[3] = a01\r\n\t\t\tout[5] = a[7]\r\n\t\t\tout[6] = a02\r\n\t\t\tout[7] = a12\r\n\t\t} else {\r\n\t\t\tout[0] = a[0]\r\n\t\t\tout[1] = a[3]\r\n\t\t\tout[2] = a[6]\r\n\t\t\tout[3] = a[1]\r\n\t\t\tout[4] = a[4]\r\n\t\t\tout[5] = a[7]\r\n\t\t\tout[6] = a[2]\r\n\t\t\tout[7] = a[5]\r\n\t\t\tout[8] = a[8]\r\n\t\t}\r\n\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Inverts a mat3\r\n\t *\r\n\t * @param {mat3} out the receiving matrix\r\n\t * @param {mat3} a the source matrix\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction invert$2(out, a) {\r\n\t\tvar a00 = a[0],\r\n\t\t\ta01 = a[1],\r\n\t\t\ta02 = a[2]\r\n\t\tvar a10 = a[3],\r\n\t\t\ta11 = a[4],\r\n\t\t\ta12 = a[5]\r\n\t\tvar a20 = a[6],\r\n\t\t\ta21 = a[7],\r\n\t\t\ta22 = a[8]\r\n\t\tvar b01 = a22 * a11 - a12 * a21\r\n\t\tvar b11 = -a22 * a10 + a12 * a20\r\n\t\tvar b21 = a21 * a10 - a11 * a20 // Calculate the determinant\r\n\r\n\t\tvar det = a00 * b01 + a01 * b11 + a02 * b21\r\n\r\n\t\tif (!det) {\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tdet = 1.0 / det\r\n\t\tout[0] = b01 * det\r\n\t\tout[1] = (-a22 * a01 + a02 * a21) * det\r\n\t\tout[2] = (a12 * a01 - a02 * a11) * det\r\n\t\tout[3] = b11 * det\r\n\t\tout[4] = (a22 * a00 - a02 * a20) * det\r\n\t\tout[5] = (-a12 * a00 + a02 * a10) * det\r\n\t\tout[6] = b21 * det\r\n\t\tout[7] = (-a21 * a00 + a01 * a20) * det\r\n\t\tout[8] = (a11 * a00 - a01 * a10) * det\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the adjugate of a mat3\r\n\t *\r\n\t * @param {mat3} out the receiving matrix\r\n\t * @param {mat3} a the source matrix\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction adjoint$1(out, a) {\r\n\t\tvar a00 = a[0],\r\n\t\t\ta01 = a[1],\r\n\t\t\ta02 = a[2]\r\n\t\tvar a10 = a[3],\r\n\t\t\ta11 = a[4],\r\n\t\t\ta12 = a[5]\r\n\t\tvar a20 = a[6],\r\n\t\t\ta21 = a[7],\r\n\t\t\ta22 = a[8]\r\n\t\tout[0] = a11 * a22 - a12 * a21\r\n\t\tout[1] = a02 * a21 - a01 * a22\r\n\t\tout[2] = a01 * a12 - a02 * a11\r\n\t\tout[3] = a12 * a20 - a10 * a22\r\n\t\tout[4] = a00 * a22 - a02 * a20\r\n\t\tout[5] = a02 * a10 - a00 * a12\r\n\t\tout[6] = a10 * a21 - a11 * a20\r\n\t\tout[7] = a01 * a20 - a00 * a21\r\n\t\tout[8] = a00 * a11 - a01 * a10\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the determinant of a mat3\r\n\t *\r\n\t * @param {mat3} a the source matrix\r\n\t * @returns {Number} determinant of a\r\n\t */\r\n\r\n\tfunction determinant$2(a) {\r\n\t\tvar a00 = a[0],\r\n\t\t\ta01 = a[1],\r\n\t\t\ta02 = a[2]\r\n\t\tvar a10 = a[3],\r\n\t\t\ta11 = a[4],\r\n\t\t\ta12 = a[5]\r\n\t\tvar a20 = a[6],\r\n\t\t\ta21 = a[7],\r\n\t\t\ta22 = a[8]\r\n\t\treturn (\r\n\t\t\ta00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20)\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Multiplies two mat3's\r\n\t *\r\n\t * @param {mat3} out the receiving matrix\r\n\t * @param {mat3} a the first operand\r\n\t * @param {mat3} b the second operand\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction multiply$2(out, a, b) {\r\n\t\tvar a00 = a[0],\r\n\t\t\ta01 = a[1],\r\n\t\t\ta02 = a[2]\r\n\t\tvar a10 = a[3],\r\n\t\t\ta11 = a[4],\r\n\t\t\ta12 = a[5]\r\n\t\tvar a20 = a[6],\r\n\t\t\ta21 = a[7],\r\n\t\t\ta22 = a[8]\r\n\t\tvar b00 = b[0],\r\n\t\t\tb01 = b[1],\r\n\t\t\tb02 = b[2]\r\n\t\tvar b10 = b[3],\r\n\t\t\tb11 = b[4],\r\n\t\t\tb12 = b[5]\r\n\t\tvar b20 = b[6],\r\n\t\t\tb21 = b[7],\r\n\t\t\tb22 = b[8]\r\n\t\tout[0] = b00 * a00 + b01 * a10 + b02 * a20\r\n\t\tout[1] = b00 * a01 + b01 * a11 + b02 * a21\r\n\t\tout[2] = b00 * a02 + b01 * a12 + b02 * a22\r\n\t\tout[3] = b10 * a00 + b11 * a10 + b12 * a20\r\n\t\tout[4] = b10 * a01 + b11 * a11 + b12 * a21\r\n\t\tout[5] = b10 * a02 + b11 * a12 + b12 * a22\r\n\t\tout[6] = b20 * a00 + b21 * a10 + b22 * a20\r\n\t\tout[7] = b20 * a01 + b21 * a11 + b22 * a21\r\n\t\tout[8] = b20 * a02 + b21 * a12 + b22 * a22\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Translate a mat3 by the given vector\r\n\t *\r\n\t * @param {mat3} out the receiving matrix\r\n\t * @param {mat3} a the matrix to translate\r\n\t * @param {vec2} v vector to translate by\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction translate$1(out, a, v) {\r\n\t\tvar a00 = a[0],\r\n\t\t\ta01 = a[1],\r\n\t\t\ta02 = a[2],\r\n\t\t\ta10 = a[3],\r\n\t\t\ta11 = a[4],\r\n\t\t\ta12 = a[5],\r\n\t\t\ta20 = a[6],\r\n\t\t\ta21 = a[7],\r\n\t\t\ta22 = a[8],\r\n\t\t\tx = v[0],\r\n\t\t\ty = v[1]\r\n\t\tout[0] = a00\r\n\t\tout[1] = a01\r\n\t\tout[2] = a02\r\n\t\tout[3] = a10\r\n\t\tout[4] = a11\r\n\t\tout[5] = a12\r\n\t\tout[6] = x * a00 + y * a10 + a20\r\n\t\tout[7] = x * a01 + y * a11 + a21\r\n\t\tout[8] = x * a02 + y * a12 + a22\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a mat3 by the given angle\r\n\t *\r\n\t * @param {mat3} out the receiving matrix\r\n\t * @param {mat3} a the matrix to rotate\r\n\t * @param {Number} rad the angle to rotate the matrix by\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction rotate$2(out, a, rad) {\r\n\t\tvar a00 = a[0],\r\n\t\t\ta01 = a[1],\r\n\t\t\ta02 = a[2],\r\n\t\t\ta10 = a[3],\r\n\t\t\ta11 = a[4],\r\n\t\t\ta12 = a[5],\r\n\t\t\ta20 = a[6],\r\n\t\t\ta21 = a[7],\r\n\t\t\ta22 = a[8],\r\n\t\t\ts = Math.sin(rad),\r\n\t\t\tc = Math.cos(rad)\r\n\t\tout[0] = c * a00 + s * a10\r\n\t\tout[1] = c * a01 + s * a11\r\n\t\tout[2] = c * a02 + s * a12\r\n\t\tout[3] = c * a10 - s * a00\r\n\t\tout[4] = c * a11 - s * a01\r\n\t\tout[5] = c * a12 - s * a02\r\n\t\tout[6] = a20\r\n\t\tout[7] = a21\r\n\t\tout[8] = a22\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Scales the mat3 by the dimensions in the given vec2\r\n\t *\r\n\t * @param {mat3} out the receiving matrix\r\n\t * @param {mat3} a the matrix to rotate\r\n\t * @param {vec2} v the vec2 to scale the matrix by\r\n\t * @returns {mat3} out\r\n\t **/\r\n\r\n\tfunction scale$2(out, a, v) {\r\n\t\tvar x = v[0],\r\n\t\t\ty = v[1]\r\n\t\tout[0] = x * a[0]\r\n\t\tout[1] = x * a[1]\r\n\t\tout[2] = x * a[2]\r\n\t\tout[3] = y * a[3]\r\n\t\tout[4] = y * a[4]\r\n\t\tout[5] = y * a[5]\r\n\t\tout[6] = a[6]\r\n\t\tout[7] = a[7]\r\n\t\tout[8] = a[8]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from a vector translation\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat3.identity(dest);\r\n\t *     mat3.translate(dest, dest, vec);\r\n\t *\r\n\t * @param {mat3} out mat3 receiving operation result\r\n\t * @param {vec2} v Translation vector\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction fromTranslation$1(out, v) {\r\n\t\tout[0] = 1\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 0\r\n\t\tout[4] = 1\r\n\t\tout[5] = 0\r\n\t\tout[6] = v[0]\r\n\t\tout[7] = v[1]\r\n\t\tout[8] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from a given angle\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat3.identity(dest);\r\n\t *     mat3.rotate(dest, dest, rad);\r\n\t *\r\n\t * @param {mat3} out mat3 receiving operation result\r\n\t * @param {Number} rad the angle to rotate the matrix by\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction fromRotation$2(out, rad) {\r\n\t\tvar s = Math.sin(rad),\r\n\t\t\tc = Math.cos(rad)\r\n\t\tout[0] = c\r\n\t\tout[1] = s\r\n\t\tout[2] = 0\r\n\t\tout[3] = -s\r\n\t\tout[4] = c\r\n\t\tout[5] = 0\r\n\t\tout[6] = 0\r\n\t\tout[7] = 0\r\n\t\tout[8] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from a vector scaling\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat3.identity(dest);\r\n\t *     mat3.scale(dest, dest, vec);\r\n\t *\r\n\t * @param {mat3} out mat3 receiving operation result\r\n\t * @param {vec2} v Scaling vector\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction fromScaling$2(out, v) {\r\n\t\tout[0] = v[0]\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 0\r\n\t\tout[4] = v[1]\r\n\t\tout[5] = 0\r\n\t\tout[6] = 0\r\n\t\tout[7] = 0\r\n\t\tout[8] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Copies the values from a mat2d into a mat3\r\n\t *\r\n\t * @param {mat3} out the receiving matrix\r\n\t * @param {mat2d} a the matrix to copy\r\n\t * @returns {mat3} out\r\n\t **/\r\n\r\n\tfunction fromMat2d(out, a) {\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = 0\r\n\t\tout[3] = a[2]\r\n\t\tout[4] = a[3]\r\n\t\tout[5] = 0\r\n\t\tout[6] = a[4]\r\n\t\tout[7] = a[5]\r\n\t\tout[8] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates a 3x3 matrix from the given quaternion\r\n\t *\r\n\t * @param {mat3} out mat3 receiving operation result\r\n\t * @param {quat} q Quaternion to create matrix from\r\n\t *\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction fromQuat(out, q) {\r\n\t\tvar x = q[0],\r\n\t\t\ty = q[1],\r\n\t\t\tz = q[2],\r\n\t\t\tw = q[3]\r\n\t\tvar x2 = x + x\r\n\t\tvar y2 = y + y\r\n\t\tvar z2 = z + z\r\n\t\tvar xx = x * x2\r\n\t\tvar yx = y * x2\r\n\t\tvar yy = y * y2\r\n\t\tvar zx = z * x2\r\n\t\tvar zy = z * y2\r\n\t\tvar zz = z * z2\r\n\t\tvar wx = w * x2\r\n\t\tvar wy = w * y2\r\n\t\tvar wz = w * z2\r\n\t\tout[0] = 1 - yy - zz\r\n\t\tout[3] = yx - wz\r\n\t\tout[6] = zx + wy\r\n\t\tout[1] = yx + wz\r\n\t\tout[4] = 1 - xx - zz\r\n\t\tout[7] = zy - wx\r\n\t\tout[2] = zx - wy\r\n\t\tout[5] = zy + wx\r\n\t\tout[8] = 1 - xx - yy\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n\t *\r\n\t * @param {mat3} out mat3 receiving operation result\r\n\t * @param {mat4} a Mat4 to derive the normal matrix from\r\n\t *\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction normalFromMat4(out, a) {\r\n\t\tvar a00 = a[0],\r\n\t\t\ta01 = a[1],\r\n\t\t\ta02 = a[2],\r\n\t\t\ta03 = a[3]\r\n\t\tvar a10 = a[4],\r\n\t\t\ta11 = a[5],\r\n\t\t\ta12 = a[6],\r\n\t\t\ta13 = a[7]\r\n\t\tvar a20 = a[8],\r\n\t\t\ta21 = a[9],\r\n\t\t\ta22 = a[10],\r\n\t\t\ta23 = a[11]\r\n\t\tvar a30 = a[12],\r\n\t\t\ta31 = a[13],\r\n\t\t\ta32 = a[14],\r\n\t\t\ta33 = a[15]\r\n\t\tvar b00 = a00 * a11 - a01 * a10\r\n\t\tvar b01 = a00 * a12 - a02 * a10\r\n\t\tvar b02 = a00 * a13 - a03 * a10\r\n\t\tvar b03 = a01 * a12 - a02 * a11\r\n\t\tvar b04 = a01 * a13 - a03 * a11\r\n\t\tvar b05 = a02 * a13 - a03 * a12\r\n\t\tvar b06 = a20 * a31 - a21 * a30\r\n\t\tvar b07 = a20 * a32 - a22 * a30\r\n\t\tvar b08 = a20 * a33 - a23 * a30\r\n\t\tvar b09 = a21 * a32 - a22 * a31\r\n\t\tvar b10 = a21 * a33 - a23 * a31\r\n\t\tvar b11 = a22 * a33 - a23 * a32 // Calculate the determinant\r\n\r\n\t\tvar det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06\r\n\r\n\t\tif (!det) {\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tdet = 1.0 / det\r\n\t\tout[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det\r\n\t\tout[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det\r\n\t\tout[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det\r\n\t\tout[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det\r\n\t\tout[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det\r\n\t\tout[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det\r\n\t\tout[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det\r\n\t\tout[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det\r\n\t\tout[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Generates a 2D projection matrix with the given bounds\r\n\t *\r\n\t * @param {mat3} out mat3 frustum matrix will be written into\r\n\t * @param {number} width Width of your gl context\r\n\t * @param {number} height Height of gl context\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction projection(out, width, height) {\r\n\t\tout[0] = 2 / width\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 0\r\n\t\tout[4] = -2 / height\r\n\t\tout[5] = 0\r\n\t\tout[6] = -1\r\n\t\tout[7] = 1\r\n\t\tout[8] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns a string representation of a mat3\r\n\t *\r\n\t * @param {mat3} a matrix to represent as a string\r\n\t * @returns {String} string representation of the matrix\r\n\t */\r\n\r\n\tfunction str$2(a) {\r\n\t\treturn (\r\n\t\t\t'mat3(' +\r\n\t\t\ta[0] +\r\n\t\t\t', ' +\r\n\t\t\ta[1] +\r\n\t\t\t', ' +\r\n\t\t\ta[2] +\r\n\t\t\t', ' +\r\n\t\t\ta[3] +\r\n\t\t\t', ' +\r\n\t\t\ta[4] +\r\n\t\t\t', ' +\r\n\t\t\ta[5] +\r\n\t\t\t', ' +\r\n\t\t\ta[6] +\r\n\t\t\t', ' +\r\n\t\t\ta[7] +\r\n\t\t\t', ' +\r\n\t\t\ta[8] +\r\n\t\t\t')'\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Returns Frobenius norm of a mat3\r\n\t *\r\n\t * @param {mat3} a the matrix to calculate Frobenius norm of\r\n\t * @returns {Number} Frobenius norm\r\n\t */\r\n\r\n\tfunction frob$2(a) {\r\n\t\treturn Math.sqrt(\r\n\t\t\tMath.pow(a[0], 2) +\r\n\t\t\t\tMath.pow(a[1], 2) +\r\n\t\t\t\tMath.pow(a[2], 2) +\r\n\t\t\t\tMath.pow(a[3], 2) +\r\n\t\t\t\tMath.pow(a[4], 2) +\r\n\t\t\t\tMath.pow(a[5], 2) +\r\n\t\t\t\tMath.pow(a[6], 2) +\r\n\t\t\t\tMath.pow(a[7], 2) +\r\n\t\t\t\tMath.pow(a[8], 2),\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Adds two mat3's\r\n\t *\r\n\t * @param {mat3} out the receiving matrix\r\n\t * @param {mat3} a the first operand\r\n\t * @param {mat3} b the second operand\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction add$2(out, a, b) {\r\n\t\tout[0] = a[0] + b[0]\r\n\t\tout[1] = a[1] + b[1]\r\n\t\tout[2] = a[2] + b[2]\r\n\t\tout[3] = a[3] + b[3]\r\n\t\tout[4] = a[4] + b[4]\r\n\t\tout[5] = a[5] + b[5]\r\n\t\tout[6] = a[6] + b[6]\r\n\t\tout[7] = a[7] + b[7]\r\n\t\tout[8] = a[8] + b[8]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Subtracts matrix b from matrix a\r\n\t *\r\n\t * @param {mat3} out the receiving matrix\r\n\t * @param {mat3} a the first operand\r\n\t * @param {mat3} b the second operand\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction subtract$2(out, a, b) {\r\n\t\tout[0] = a[0] - b[0]\r\n\t\tout[1] = a[1] - b[1]\r\n\t\tout[2] = a[2] - b[2]\r\n\t\tout[3] = a[3] - b[3]\r\n\t\tout[4] = a[4] - b[4]\r\n\t\tout[5] = a[5] - b[5]\r\n\t\tout[6] = a[6] - b[6]\r\n\t\tout[7] = a[7] - b[7]\r\n\t\tout[8] = a[8] - b[8]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Multiply each element of the matrix by a scalar.\r\n\t *\r\n\t * @param {mat3} out the receiving matrix\r\n\t * @param {mat3} a the matrix to scale\r\n\t * @param {Number} b amount to scale the matrix's elements by\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction multiplyScalar$2(out, a, b) {\r\n\t\tout[0] = a[0] * b\r\n\t\tout[1] = a[1] * b\r\n\t\tout[2] = a[2] * b\r\n\t\tout[3] = a[3] * b\r\n\t\tout[4] = a[4] * b\r\n\t\tout[5] = a[5] * b\r\n\t\tout[6] = a[6] * b\r\n\t\tout[7] = a[7] * b\r\n\t\tout[8] = a[8] * b\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n\t *\r\n\t * @param {mat3} out the receiving vector\r\n\t * @param {mat3} a the first operand\r\n\t * @param {mat3} b the second operand\r\n\t * @param {Number} scale the amount to scale b's elements by before adding\r\n\t * @returns {mat3} out\r\n\t */\r\n\r\n\tfunction multiplyScalarAndAdd$2(out, a, b, scale) {\r\n\t\tout[0] = a[0] + b[0] * scale\r\n\t\tout[1] = a[1] + b[1] * scale\r\n\t\tout[2] = a[2] + b[2] * scale\r\n\t\tout[3] = a[3] + b[3] * scale\r\n\t\tout[4] = a[4] + b[4] * scale\r\n\t\tout[5] = a[5] + b[5] * scale\r\n\t\tout[6] = a[6] + b[6] * scale\r\n\t\tout[7] = a[7] + b[7] * scale\r\n\t\tout[8] = a[8] + b[8] * scale\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n\t *\r\n\t * @param {mat3} a The first matrix.\r\n\t * @param {mat3} b The second matrix.\r\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction exactEquals$2(a, b) {\r\n\t\treturn (\r\n\t\t\ta[0] === b[0] &&\r\n\t\t\ta[1] === b[1] &&\r\n\t\t\ta[2] === b[2] &&\r\n\t\t\ta[3] === b[3] &&\r\n\t\t\ta[4] === b[4] &&\r\n\t\t\ta[5] === b[5] &&\r\n\t\t\ta[6] === b[6] &&\r\n\t\t\ta[7] === b[7] &&\r\n\t\t\ta[8] === b[8]\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the matrices have approximately the same elements in the same position.\r\n\t *\r\n\t * @param {mat3} a The first matrix.\r\n\t * @param {mat3} b The second matrix.\r\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction equals$3(a, b) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3],\r\n\t\t\ta4 = a[4],\r\n\t\t\ta5 = a[5],\r\n\t\t\ta6 = a[6],\r\n\t\t\ta7 = a[7],\r\n\t\t\ta8 = a[8]\r\n\t\tvar b0 = b[0],\r\n\t\t\tb1 = b[1],\r\n\t\t\tb2 = b[2],\r\n\t\t\tb3 = b[3],\r\n\t\t\tb4 = b[4],\r\n\t\t\tb5 = b[5],\r\n\t\t\tb6 = b[6],\r\n\t\t\tb7 = b[7],\r\n\t\t\tb8 = b[8]\r\n\t\treturn (\r\n\t\t\tMath.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n\t\t\tMath.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n\t\t\tMath.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\r\n\t\t\tMath.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\r\n\t\t\tMath.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\r\n\t\t\tMath.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\r\n\t\t\tMath.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\r\n\t\t\tMath.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8))\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Alias for {@link mat3.multiply}\r\n\t * @function\r\n\t */\r\n\r\n\tvar mul$2 = multiply$2\r\n\t/**\r\n\t * Alias for {@link mat3.subtract}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sub$2 = subtract$2\r\n\r\n\tvar mat3 = /*#__PURE__*/ Object.freeze({\r\n\t\tcreate: create$2,\r\n\t\tfromMat4: fromMat4,\r\n\t\tclone: clone$2,\r\n\t\tcopy: copy$2,\r\n\t\tfromValues: fromValues$2,\r\n\t\tset: set$2,\r\n\t\tidentity: identity$2,\r\n\t\ttranspose: transpose$1,\r\n\t\tinvert: invert$2,\r\n\t\tadjoint: adjoint$1,\r\n\t\tdeterminant: determinant$2,\r\n\t\tmultiply: multiply$2,\r\n\t\ttranslate: translate$1,\r\n\t\trotate: rotate$2,\r\n\t\tscale: scale$2,\r\n\t\tfromTranslation: fromTranslation$1,\r\n\t\tfromRotation: fromRotation$2,\r\n\t\tfromScaling: fromScaling$2,\r\n\t\tfromMat2d: fromMat2d,\r\n\t\tfromQuat: fromQuat,\r\n\t\tnormalFromMat4: normalFromMat4,\r\n\t\tprojection: projection,\r\n\t\tstr: str$2,\r\n\t\tfrob: frob$2,\r\n\t\tadd: add$2,\r\n\t\tsubtract: subtract$2,\r\n\t\tmultiplyScalar: multiplyScalar$2,\r\n\t\tmultiplyScalarAndAdd: multiplyScalarAndAdd$2,\r\n\t\texactEquals: exactEquals$2,\r\n\t\tequals: equals$3,\r\n\t\tmul: mul$2,\r\n\t\tsub: sub$2,\r\n\t})\r\n\r\n\t/**\r\n\t * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n\t * @module mat4\r\n\t */\r\n\r\n\t/**\r\n\t * Creates a new identity mat4\r\n\t *\r\n\t * @returns {mat4} a new 4x4 matrix\r\n\t */\r\n\r\n\tfunction create$3() {\r\n\t\tvar out = new ARRAY_TYPE(16)\r\n\r\n\t\tif (ARRAY_TYPE != Float32Array) {\r\n\t\t\tout[1] = 0\r\n\t\t\tout[2] = 0\r\n\t\t\tout[3] = 0\r\n\t\t\tout[4] = 0\r\n\t\t\tout[6] = 0\r\n\t\t\tout[7] = 0\r\n\t\t\tout[8] = 0\r\n\t\t\tout[9] = 0\r\n\t\t\tout[11] = 0\r\n\t\t\tout[12] = 0\r\n\t\t\tout[13] = 0\r\n\t\t\tout[14] = 0\r\n\t\t}\r\n\r\n\t\tout[0] = 1\r\n\t\tout[5] = 1\r\n\t\tout[10] = 1\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a new mat4 initialized with values from an existing matrix\r\n\t *\r\n\t * @param {mat4} a matrix to clone\r\n\t * @returns {mat4} a new 4x4 matrix\r\n\t */\r\n\r\n\tfunction clone$3(a) {\r\n\t\tvar out = new ARRAY_TYPE(16)\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = a[2]\r\n\t\tout[3] = a[3]\r\n\t\tout[4] = a[4]\r\n\t\tout[5] = a[5]\r\n\t\tout[6] = a[6]\r\n\t\tout[7] = a[7]\r\n\t\tout[8] = a[8]\r\n\t\tout[9] = a[9]\r\n\t\tout[10] = a[10]\r\n\t\tout[11] = a[11]\r\n\t\tout[12] = a[12]\r\n\t\tout[13] = a[13]\r\n\t\tout[14] = a[14]\r\n\t\tout[15] = a[15]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Copy the values from one mat4 to another\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {mat4} a the source matrix\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction copy$3(out, a) {\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = a[2]\r\n\t\tout[3] = a[3]\r\n\t\tout[4] = a[4]\r\n\t\tout[5] = a[5]\r\n\t\tout[6] = a[6]\r\n\t\tout[7] = a[7]\r\n\t\tout[8] = a[8]\r\n\t\tout[9] = a[9]\r\n\t\tout[10] = a[10]\r\n\t\tout[11] = a[11]\r\n\t\tout[12] = a[12]\r\n\t\tout[13] = a[13]\r\n\t\tout[14] = a[14]\r\n\t\tout[15] = a[15]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Create a new mat4 with the given values\r\n\t *\r\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n\t * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n\t * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n\t * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n\t * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n\t * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n\t * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n\t * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n\t * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n\t * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n\t * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n\t * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n\t * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n\t * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n\t * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n\t * @returns {mat4} A new mat4\r\n\t */\r\n\r\n\tfunction fromValues$3(\r\n\t\tm00,\r\n\t\tm01,\r\n\t\tm02,\r\n\t\tm03,\r\n\t\tm10,\r\n\t\tm11,\r\n\t\tm12,\r\n\t\tm13,\r\n\t\tm20,\r\n\t\tm21,\r\n\t\tm22,\r\n\t\tm23,\r\n\t\tm30,\r\n\t\tm31,\r\n\t\tm32,\r\n\t\tm33,\r\n\t) {\r\n\t\tvar out = new ARRAY_TYPE(16)\r\n\t\tout[0] = m00\r\n\t\tout[1] = m01\r\n\t\tout[2] = m02\r\n\t\tout[3] = m03\r\n\t\tout[4] = m10\r\n\t\tout[5] = m11\r\n\t\tout[6] = m12\r\n\t\tout[7] = m13\r\n\t\tout[8] = m20\r\n\t\tout[9] = m21\r\n\t\tout[10] = m22\r\n\t\tout[11] = m23\r\n\t\tout[12] = m30\r\n\t\tout[13] = m31\r\n\t\tout[14] = m32\r\n\t\tout[15] = m33\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set the components of a mat4 to the given values\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n\t * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n\t * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n\t * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n\t * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n\t * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n\t * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n\t * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n\t * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n\t * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n\t * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n\t * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n\t * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n\t * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n\t * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction set$3(\r\n\t\tout,\r\n\t\tm00,\r\n\t\tm01,\r\n\t\tm02,\r\n\t\tm03,\r\n\t\tm10,\r\n\t\tm11,\r\n\t\tm12,\r\n\t\tm13,\r\n\t\tm20,\r\n\t\tm21,\r\n\t\tm22,\r\n\t\tm23,\r\n\t\tm30,\r\n\t\tm31,\r\n\t\tm32,\r\n\t\tm33,\r\n\t) {\r\n\t\tout[0] = m00\r\n\t\tout[1] = m01\r\n\t\tout[2] = m02\r\n\t\tout[3] = m03\r\n\t\tout[4] = m10\r\n\t\tout[5] = m11\r\n\t\tout[6] = m12\r\n\t\tout[7] = m13\r\n\t\tout[8] = m20\r\n\t\tout[9] = m21\r\n\t\tout[10] = m22\r\n\t\tout[11] = m23\r\n\t\tout[12] = m30\r\n\t\tout[13] = m31\r\n\t\tout[14] = m32\r\n\t\tout[15] = m33\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set a mat4 to the identity matrix\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction identity$3(out) {\r\n\t\tout[0] = 1\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 0\r\n\t\tout[4] = 0\r\n\t\tout[5] = 1\r\n\t\tout[6] = 0\r\n\t\tout[7] = 0\r\n\t\tout[8] = 0\r\n\t\tout[9] = 0\r\n\t\tout[10] = 1\r\n\t\tout[11] = 0\r\n\t\tout[12] = 0\r\n\t\tout[13] = 0\r\n\t\tout[14] = 0\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Transpose the values of a mat4\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {mat4} a the source matrix\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction transpose$2(out, a) {\r\n\t\t// If we are transposing ourselves we can skip a few steps but have to cache some values\r\n\t\tif (out === a) {\r\n\t\t\tvar a01 = a[1],\r\n\t\t\t\ta02 = a[2],\r\n\t\t\t\ta03 = a[3]\r\n\t\t\tvar a12 = a[6],\r\n\t\t\t\ta13 = a[7]\r\n\t\t\tvar a23 = a[11]\r\n\t\t\tout[1] = a[4]\r\n\t\t\tout[2] = a[8]\r\n\t\t\tout[3] = a[12]\r\n\t\t\tout[4] = a01\r\n\t\t\tout[6] = a[9]\r\n\t\t\tout[7] = a[13]\r\n\t\t\tout[8] = a02\r\n\t\t\tout[9] = a12\r\n\t\t\tout[11] = a[14]\r\n\t\t\tout[12] = a03\r\n\t\t\tout[13] = a13\r\n\t\t\tout[14] = a23\r\n\t\t} else {\r\n\t\t\tout[0] = a[0]\r\n\t\t\tout[1] = a[4]\r\n\t\t\tout[2] = a[8]\r\n\t\t\tout[3] = a[12]\r\n\t\t\tout[4] = a[1]\r\n\t\t\tout[5] = a[5]\r\n\t\t\tout[6] = a[9]\r\n\t\t\tout[7] = a[13]\r\n\t\t\tout[8] = a[2]\r\n\t\t\tout[9] = a[6]\r\n\t\t\tout[10] = a[10]\r\n\t\t\tout[11] = a[14]\r\n\t\t\tout[12] = a[3]\r\n\t\t\tout[13] = a[7]\r\n\t\t\tout[14] = a[11]\r\n\t\t\tout[15] = a[15]\r\n\t\t}\r\n\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Inverts a mat4\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {mat4} a the source matrix\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction invert$3(out, a) {\r\n\t\tvar a00 = a[0],\r\n\t\t\ta01 = a[1],\r\n\t\t\ta02 = a[2],\r\n\t\t\ta03 = a[3]\r\n\t\tvar a10 = a[4],\r\n\t\t\ta11 = a[5],\r\n\t\t\ta12 = a[6],\r\n\t\t\ta13 = a[7]\r\n\t\tvar a20 = a[8],\r\n\t\t\ta21 = a[9],\r\n\t\t\ta22 = a[10],\r\n\t\t\ta23 = a[11]\r\n\t\tvar a30 = a[12],\r\n\t\t\ta31 = a[13],\r\n\t\t\ta32 = a[14],\r\n\t\t\ta33 = a[15]\r\n\t\tvar b00 = a00 * a11 - a01 * a10\r\n\t\tvar b01 = a00 * a12 - a02 * a10\r\n\t\tvar b02 = a00 * a13 - a03 * a10\r\n\t\tvar b03 = a01 * a12 - a02 * a11\r\n\t\tvar b04 = a01 * a13 - a03 * a11\r\n\t\tvar b05 = a02 * a13 - a03 * a12\r\n\t\tvar b06 = a20 * a31 - a21 * a30\r\n\t\tvar b07 = a20 * a32 - a22 * a30\r\n\t\tvar b08 = a20 * a33 - a23 * a30\r\n\t\tvar b09 = a21 * a32 - a22 * a31\r\n\t\tvar b10 = a21 * a33 - a23 * a31\r\n\t\tvar b11 = a22 * a33 - a23 * a32 // Calculate the determinant\r\n\r\n\t\tvar det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06\r\n\r\n\t\tif (!det) {\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tdet = 1.0 / det\r\n\t\tout[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det\r\n\t\tout[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det\r\n\t\tout[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det\r\n\t\tout[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det\r\n\t\tout[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det\r\n\t\tout[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det\r\n\t\tout[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det\r\n\t\tout[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det\r\n\t\tout[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det\r\n\t\tout[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det\r\n\t\tout[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det\r\n\t\tout[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det\r\n\t\tout[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det\r\n\t\tout[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det\r\n\t\tout[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det\r\n\t\tout[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the adjugate of a mat4\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {mat4} a the source matrix\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction adjoint$2(out, a) {\r\n\t\tvar a00 = a[0],\r\n\t\t\ta01 = a[1],\r\n\t\t\ta02 = a[2],\r\n\t\t\ta03 = a[3]\r\n\t\tvar a10 = a[4],\r\n\t\t\ta11 = a[5],\r\n\t\t\ta12 = a[6],\r\n\t\t\ta13 = a[7]\r\n\t\tvar a20 = a[8],\r\n\t\t\ta21 = a[9],\r\n\t\t\ta22 = a[10],\r\n\t\t\ta23 = a[11]\r\n\t\tvar a30 = a[12],\r\n\t\t\ta31 = a[13],\r\n\t\t\ta32 = a[14],\r\n\t\t\ta33 = a[15]\r\n\t\tout[0] =\r\n\t\t\ta11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22)\r\n\t\tout[1] = -(\r\n\t\t\ta01 * (a22 * a33 - a23 * a32) -\r\n\t\t\ta21 * (a02 * a33 - a03 * a32) +\r\n\t\t\ta31 * (a02 * a23 - a03 * a22)\r\n\t\t)\r\n\t\tout[2] =\r\n\t\t\ta01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12)\r\n\t\tout[3] = -(\r\n\t\t\ta01 * (a12 * a23 - a13 * a22) -\r\n\t\t\ta11 * (a02 * a23 - a03 * a22) +\r\n\t\t\ta21 * (a02 * a13 - a03 * a12)\r\n\t\t)\r\n\t\tout[4] = -(\r\n\t\t\ta10 * (a22 * a33 - a23 * a32) -\r\n\t\t\ta20 * (a12 * a33 - a13 * a32) +\r\n\t\t\ta30 * (a12 * a23 - a13 * a22)\r\n\t\t)\r\n\t\tout[5] =\r\n\t\t\ta00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22)\r\n\t\tout[6] = -(\r\n\t\t\ta00 * (a12 * a33 - a13 * a32) -\r\n\t\t\ta10 * (a02 * a33 - a03 * a32) +\r\n\t\t\ta30 * (a02 * a13 - a03 * a12)\r\n\t\t)\r\n\t\tout[7] =\r\n\t\t\ta00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12)\r\n\t\tout[8] =\r\n\t\t\ta10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21)\r\n\t\tout[9] = -(\r\n\t\t\ta00 * (a21 * a33 - a23 * a31) -\r\n\t\t\ta20 * (a01 * a33 - a03 * a31) +\r\n\t\t\ta30 * (a01 * a23 - a03 * a21)\r\n\t\t)\r\n\t\tout[10] =\r\n\t\t\ta00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11)\r\n\t\tout[11] = -(\r\n\t\t\ta00 * (a11 * a23 - a13 * a21) -\r\n\t\t\ta10 * (a01 * a23 - a03 * a21) +\r\n\t\t\ta20 * (a01 * a13 - a03 * a11)\r\n\t\t)\r\n\t\tout[12] = -(\r\n\t\t\ta10 * (a21 * a32 - a22 * a31) -\r\n\t\t\ta20 * (a11 * a32 - a12 * a31) +\r\n\t\t\ta30 * (a11 * a22 - a12 * a21)\r\n\t\t)\r\n\t\tout[13] =\r\n\t\t\ta00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21)\r\n\t\tout[14] = -(\r\n\t\t\ta00 * (a11 * a32 - a12 * a31) -\r\n\t\t\ta10 * (a01 * a32 - a02 * a31) +\r\n\t\t\ta30 * (a01 * a12 - a02 * a11)\r\n\t\t)\r\n\t\tout[15] =\r\n\t\t\ta00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11)\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the determinant of a mat4\r\n\t *\r\n\t * @param {mat4} a the source matrix\r\n\t * @returns {Number} determinant of a\r\n\t */\r\n\r\n\tfunction determinant$3(a) {\r\n\t\tvar a00 = a[0],\r\n\t\t\ta01 = a[1],\r\n\t\t\ta02 = a[2],\r\n\t\t\ta03 = a[3]\r\n\t\tvar a10 = a[4],\r\n\t\t\ta11 = a[5],\r\n\t\t\ta12 = a[6],\r\n\t\t\ta13 = a[7]\r\n\t\tvar a20 = a[8],\r\n\t\t\ta21 = a[9],\r\n\t\t\ta22 = a[10],\r\n\t\t\ta23 = a[11]\r\n\t\tvar a30 = a[12],\r\n\t\t\ta31 = a[13],\r\n\t\t\ta32 = a[14],\r\n\t\t\ta33 = a[15]\r\n\t\tvar b00 = a00 * a11 - a01 * a10\r\n\t\tvar b01 = a00 * a12 - a02 * a10\r\n\t\tvar b02 = a00 * a13 - a03 * a10\r\n\t\tvar b03 = a01 * a12 - a02 * a11\r\n\t\tvar b04 = a01 * a13 - a03 * a11\r\n\t\tvar b05 = a02 * a13 - a03 * a12\r\n\t\tvar b06 = a20 * a31 - a21 * a30\r\n\t\tvar b07 = a20 * a32 - a22 * a30\r\n\t\tvar b08 = a20 * a33 - a23 * a30\r\n\t\tvar b09 = a21 * a32 - a22 * a31\r\n\t\tvar b10 = a21 * a33 - a23 * a31\r\n\t\tvar b11 = a22 * a33 - a23 * a32 // Calculate the determinant\r\n\r\n\t\treturn b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06\r\n\t}\r\n\t/**\r\n\t * Multiplies two mat4s\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {mat4} a the first operand\r\n\t * @param {mat4} b the second operand\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction multiply$3(out, a, b) {\r\n\t\tvar a00 = a[0],\r\n\t\t\ta01 = a[1],\r\n\t\t\ta02 = a[2],\r\n\t\t\ta03 = a[3]\r\n\t\tvar a10 = a[4],\r\n\t\t\ta11 = a[5],\r\n\t\t\ta12 = a[6],\r\n\t\t\ta13 = a[7]\r\n\t\tvar a20 = a[8],\r\n\t\t\ta21 = a[9],\r\n\t\t\ta22 = a[10],\r\n\t\t\ta23 = a[11]\r\n\t\tvar a30 = a[12],\r\n\t\t\ta31 = a[13],\r\n\t\t\ta32 = a[14],\r\n\t\t\ta33 = a[15] // Cache only the current line of the second matrix\r\n\r\n\t\tvar b0 = b[0],\r\n\t\t\tb1 = b[1],\r\n\t\t\tb2 = b[2],\r\n\t\t\tb3 = b[3]\r\n\t\tout[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\r\n\t\tout[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\r\n\t\tout[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\r\n\t\tout[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\r\n\t\tb0 = b[4]\r\n\t\tb1 = b[5]\r\n\t\tb2 = b[6]\r\n\t\tb3 = b[7]\r\n\t\tout[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\r\n\t\tout[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\r\n\t\tout[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\r\n\t\tout[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\r\n\t\tb0 = b[8]\r\n\t\tb1 = b[9]\r\n\t\tb2 = b[10]\r\n\t\tb3 = b[11]\r\n\t\tout[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\r\n\t\tout[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\r\n\t\tout[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\r\n\t\tout[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\r\n\t\tb0 = b[12]\r\n\t\tb1 = b[13]\r\n\t\tb2 = b[14]\r\n\t\tb3 = b[15]\r\n\t\tout[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\r\n\t\tout[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\r\n\t\tout[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\r\n\t\tout[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Translate a mat4 by the given vector\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {mat4} a the matrix to translate\r\n\t * @param {vec3} v vector to translate by\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction translate$2(out, a, v) {\r\n\t\tvar x = v[0],\r\n\t\t\ty = v[1],\r\n\t\t\tz = v[2]\r\n\t\tvar a00, a01, a02, a03\r\n\t\tvar a10, a11, a12, a13\r\n\t\tvar a20, a21, a22, a23\r\n\r\n\t\tif (a === out) {\r\n\t\t\tout[12] = a[0] * x + a[4] * y + a[8] * z + a[12]\r\n\t\t\tout[13] = a[1] * x + a[5] * y + a[9] * z + a[13]\r\n\t\t\tout[14] = a[2] * x + a[6] * y + a[10] * z + a[14]\r\n\t\t\tout[15] = a[3] * x + a[7] * y + a[11] * z + a[15]\r\n\t\t} else {\r\n\t\t\ta00 = a[0]\r\n\t\t\ta01 = a[1]\r\n\t\t\ta02 = a[2]\r\n\t\t\ta03 = a[3]\r\n\t\t\ta10 = a[4]\r\n\t\t\ta11 = a[5]\r\n\t\t\ta12 = a[6]\r\n\t\t\ta13 = a[7]\r\n\t\t\ta20 = a[8]\r\n\t\t\ta21 = a[9]\r\n\t\t\ta22 = a[10]\r\n\t\t\ta23 = a[11]\r\n\t\t\tout[0] = a00\r\n\t\t\tout[1] = a01\r\n\t\t\tout[2] = a02\r\n\t\t\tout[3] = a03\r\n\t\t\tout[4] = a10\r\n\t\t\tout[5] = a11\r\n\t\t\tout[6] = a12\r\n\t\t\tout[7] = a13\r\n\t\t\tout[8] = a20\r\n\t\t\tout[9] = a21\r\n\t\t\tout[10] = a22\r\n\t\t\tout[11] = a23\r\n\t\t\tout[12] = a00 * x + a10 * y + a20 * z + a[12]\r\n\t\t\tout[13] = a01 * x + a11 * y + a21 * z + a[13]\r\n\t\t\tout[14] = a02 * x + a12 * y + a22 * z + a[14]\r\n\t\t\tout[15] = a03 * x + a13 * y + a23 * z + a[15]\r\n\t\t}\r\n\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {mat4} a the matrix to scale\r\n\t * @param {vec3} v the vec3 to scale the matrix by\r\n\t * @returns {mat4} out\r\n\t **/\r\n\r\n\tfunction scale$3(out, a, v) {\r\n\t\tvar x = v[0],\r\n\t\t\ty = v[1],\r\n\t\t\tz = v[2]\r\n\t\tout[0] = a[0] * x\r\n\t\tout[1] = a[1] * x\r\n\t\tout[2] = a[2] * x\r\n\t\tout[3] = a[3] * x\r\n\t\tout[4] = a[4] * y\r\n\t\tout[5] = a[5] * y\r\n\t\tout[6] = a[6] * y\r\n\t\tout[7] = a[7] * y\r\n\t\tout[8] = a[8] * z\r\n\t\tout[9] = a[9] * z\r\n\t\tout[10] = a[10] * z\r\n\t\tout[11] = a[11] * z\r\n\t\tout[12] = a[12]\r\n\t\tout[13] = a[13]\r\n\t\tout[14] = a[14]\r\n\t\tout[15] = a[15]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a mat4 by the given angle around the given axis\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {mat4} a the matrix to rotate\r\n\t * @param {Number} rad the angle to rotate the matrix by\r\n\t * @param {vec3} axis the axis to rotate around\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction rotate$3(out, a, rad, axis) {\r\n\t\tvar x = axis[0],\r\n\t\t\ty = axis[1],\r\n\t\t\tz = axis[2]\r\n\t\tvar len = Math.sqrt(x * x + y * y + z * z)\r\n\t\tvar s, c, t\r\n\t\tvar a00, a01, a02, a03\r\n\t\tvar a10, a11, a12, a13\r\n\t\tvar a20, a21, a22, a23\r\n\t\tvar b00, b01, b02\r\n\t\tvar b10, b11, b12\r\n\t\tvar b20, b21, b22\r\n\r\n\t\tif (len < EPSILON) {\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tlen = 1 / len\r\n\t\tx *= len\r\n\t\ty *= len\r\n\t\tz *= len\r\n\t\ts = Math.sin(rad)\r\n\t\tc = Math.cos(rad)\r\n\t\tt = 1 - c\r\n\t\ta00 = a[0]\r\n\t\ta01 = a[1]\r\n\t\ta02 = a[2]\r\n\t\ta03 = a[3]\r\n\t\ta10 = a[4]\r\n\t\ta11 = a[5]\r\n\t\ta12 = a[6]\r\n\t\ta13 = a[7]\r\n\t\ta20 = a[8]\r\n\t\ta21 = a[9]\r\n\t\ta22 = a[10]\r\n\t\ta23 = a[11] // Construct the elements of the rotation matrix\r\n\r\n\t\tb00 = x * x * t + c\r\n\t\tb01 = y * x * t + z * s\r\n\t\tb02 = z * x * t - y * s\r\n\t\tb10 = x * y * t - z * s\r\n\t\tb11 = y * y * t + c\r\n\t\tb12 = z * y * t + x * s\r\n\t\tb20 = x * z * t + y * s\r\n\t\tb21 = y * z * t - x * s\r\n\t\tb22 = z * z * t + c // Perform rotation-specific matrix multiplication\r\n\r\n\t\tout[0] = a00 * b00 + a10 * b01 + a20 * b02\r\n\t\tout[1] = a01 * b00 + a11 * b01 + a21 * b02\r\n\t\tout[2] = a02 * b00 + a12 * b01 + a22 * b02\r\n\t\tout[3] = a03 * b00 + a13 * b01 + a23 * b02\r\n\t\tout[4] = a00 * b10 + a10 * b11 + a20 * b12\r\n\t\tout[5] = a01 * b10 + a11 * b11 + a21 * b12\r\n\t\tout[6] = a02 * b10 + a12 * b11 + a22 * b12\r\n\t\tout[7] = a03 * b10 + a13 * b11 + a23 * b12\r\n\t\tout[8] = a00 * b20 + a10 * b21 + a20 * b22\r\n\t\tout[9] = a01 * b20 + a11 * b21 + a21 * b22\r\n\t\tout[10] = a02 * b20 + a12 * b21 + a22 * b22\r\n\t\tout[11] = a03 * b20 + a13 * b21 + a23 * b22\r\n\r\n\t\tif (a !== out) {\r\n\t\t\t// If the source and destination differ, copy the unchanged last row\r\n\t\t\tout[12] = a[12]\r\n\t\t\tout[13] = a[13]\r\n\t\t\tout[14] = a[14]\r\n\t\t\tout[15] = a[15]\r\n\t\t}\r\n\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a matrix by the given angle around the X axis\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {mat4} a the matrix to rotate\r\n\t * @param {Number} rad the angle to rotate the matrix by\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction rotateX(out, a, rad) {\r\n\t\tvar s = Math.sin(rad)\r\n\t\tvar c = Math.cos(rad)\r\n\t\tvar a10 = a[4]\r\n\t\tvar a11 = a[5]\r\n\t\tvar a12 = a[6]\r\n\t\tvar a13 = a[7]\r\n\t\tvar a20 = a[8]\r\n\t\tvar a21 = a[9]\r\n\t\tvar a22 = a[10]\r\n\t\tvar a23 = a[11]\r\n\r\n\t\tif (a !== out) {\r\n\t\t\t// If the source and destination differ, copy the unchanged rows\r\n\t\t\tout[0] = a[0]\r\n\t\t\tout[1] = a[1]\r\n\t\t\tout[2] = a[2]\r\n\t\t\tout[3] = a[3]\r\n\t\t\tout[12] = a[12]\r\n\t\t\tout[13] = a[13]\r\n\t\t\tout[14] = a[14]\r\n\t\t\tout[15] = a[15]\r\n\t\t} // Perform axis-specific matrix multiplication\r\n\r\n\t\tout[4] = a10 * c + a20 * s\r\n\t\tout[5] = a11 * c + a21 * s\r\n\t\tout[6] = a12 * c + a22 * s\r\n\t\tout[7] = a13 * c + a23 * s\r\n\t\tout[8] = a20 * c - a10 * s\r\n\t\tout[9] = a21 * c - a11 * s\r\n\t\tout[10] = a22 * c - a12 * s\r\n\t\tout[11] = a23 * c - a13 * s\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a matrix by the given angle around the Y axis\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {mat4} a the matrix to rotate\r\n\t * @param {Number} rad the angle to rotate the matrix by\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction rotateY(out, a, rad) {\r\n\t\tvar s = Math.sin(rad)\r\n\t\tvar c = Math.cos(rad)\r\n\t\tvar a00 = a[0]\r\n\t\tvar a01 = a[1]\r\n\t\tvar a02 = a[2]\r\n\t\tvar a03 = a[3]\r\n\t\tvar a20 = a[8]\r\n\t\tvar a21 = a[9]\r\n\t\tvar a22 = a[10]\r\n\t\tvar a23 = a[11]\r\n\r\n\t\tif (a !== out) {\r\n\t\t\t// If the source and destination differ, copy the unchanged rows\r\n\t\t\tout[4] = a[4]\r\n\t\t\tout[5] = a[5]\r\n\t\t\tout[6] = a[6]\r\n\t\t\tout[7] = a[7]\r\n\t\t\tout[12] = a[12]\r\n\t\t\tout[13] = a[13]\r\n\t\t\tout[14] = a[14]\r\n\t\t\tout[15] = a[15]\r\n\t\t} // Perform axis-specific matrix multiplication\r\n\r\n\t\tout[0] = a00 * c - a20 * s\r\n\t\tout[1] = a01 * c - a21 * s\r\n\t\tout[2] = a02 * c - a22 * s\r\n\t\tout[3] = a03 * c - a23 * s\r\n\t\tout[8] = a00 * s + a20 * c\r\n\t\tout[9] = a01 * s + a21 * c\r\n\t\tout[10] = a02 * s + a22 * c\r\n\t\tout[11] = a03 * s + a23 * c\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a matrix by the given angle around the Z axis\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {mat4} a the matrix to rotate\r\n\t * @param {Number} rad the angle to rotate the matrix by\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction rotateZ(out, a, rad) {\r\n\t\tvar s = Math.sin(rad)\r\n\t\tvar c = Math.cos(rad)\r\n\t\tvar a00 = a[0]\r\n\t\tvar a01 = a[1]\r\n\t\tvar a02 = a[2]\r\n\t\tvar a03 = a[3]\r\n\t\tvar a10 = a[4]\r\n\t\tvar a11 = a[5]\r\n\t\tvar a12 = a[6]\r\n\t\tvar a13 = a[7]\r\n\r\n\t\tif (a !== out) {\r\n\t\t\t// If the source and destination differ, copy the unchanged last row\r\n\t\t\tout[8] = a[8]\r\n\t\t\tout[9] = a[9]\r\n\t\t\tout[10] = a[10]\r\n\t\t\tout[11] = a[11]\r\n\t\t\tout[12] = a[12]\r\n\t\t\tout[13] = a[13]\r\n\t\t\tout[14] = a[14]\r\n\t\t\tout[15] = a[15]\r\n\t\t} // Perform axis-specific matrix multiplication\r\n\r\n\t\tout[0] = a00 * c + a10 * s\r\n\t\tout[1] = a01 * c + a11 * s\r\n\t\tout[2] = a02 * c + a12 * s\r\n\t\tout[3] = a03 * c + a13 * s\r\n\t\tout[4] = a10 * c - a00 * s\r\n\t\tout[5] = a11 * c - a01 * s\r\n\t\tout[6] = a12 * c - a02 * s\r\n\t\tout[7] = a13 * c - a03 * s\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from a vector translation\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat4.identity(dest);\r\n\t *     mat4.translate(dest, dest, vec);\r\n\t *\r\n\t * @param {mat4} out mat4 receiving operation result\r\n\t * @param {vec3} v Translation vector\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction fromTranslation$2(out, v) {\r\n\t\tout[0] = 1\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 0\r\n\t\tout[4] = 0\r\n\t\tout[5] = 1\r\n\t\tout[6] = 0\r\n\t\tout[7] = 0\r\n\t\tout[8] = 0\r\n\t\tout[9] = 0\r\n\t\tout[10] = 1\r\n\t\tout[11] = 0\r\n\t\tout[12] = v[0]\r\n\t\tout[13] = v[1]\r\n\t\tout[14] = v[2]\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from a vector scaling\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat4.identity(dest);\r\n\t *     mat4.scale(dest, dest, vec);\r\n\t *\r\n\t * @param {mat4} out mat4 receiving operation result\r\n\t * @param {vec3} v Scaling vector\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction fromScaling$3(out, v) {\r\n\t\tout[0] = v[0]\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 0\r\n\t\tout[4] = 0\r\n\t\tout[5] = v[1]\r\n\t\tout[6] = 0\r\n\t\tout[7] = 0\r\n\t\tout[8] = 0\r\n\t\tout[9] = 0\r\n\t\tout[10] = v[2]\r\n\t\tout[11] = 0\r\n\t\tout[12] = 0\r\n\t\tout[13] = 0\r\n\t\tout[14] = 0\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from a given angle around a given axis\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat4.identity(dest);\r\n\t *     mat4.rotate(dest, dest, rad, axis);\r\n\t *\r\n\t * @param {mat4} out mat4 receiving operation result\r\n\t * @param {Number} rad the angle to rotate the matrix by\r\n\t * @param {vec3} axis the axis to rotate around\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction fromRotation$3(out, rad, axis) {\r\n\t\tvar x = axis[0],\r\n\t\t\ty = axis[1],\r\n\t\t\tz = axis[2]\r\n\t\tvar len = Math.sqrt(x * x + y * y + z * z)\r\n\t\tvar s, c, t\r\n\r\n\t\tif (len < EPSILON) {\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tlen = 1 / len\r\n\t\tx *= len\r\n\t\ty *= len\r\n\t\tz *= len\r\n\t\ts = Math.sin(rad)\r\n\t\tc = Math.cos(rad)\r\n\t\tt = 1 - c // Perform rotation-specific matrix multiplication\r\n\r\n\t\tout[0] = x * x * t + c\r\n\t\tout[1] = y * x * t + z * s\r\n\t\tout[2] = z * x * t - y * s\r\n\t\tout[3] = 0\r\n\t\tout[4] = x * y * t - z * s\r\n\t\tout[5] = y * y * t + c\r\n\t\tout[6] = z * y * t + x * s\r\n\t\tout[7] = 0\r\n\t\tout[8] = x * z * t + y * s\r\n\t\tout[9] = y * z * t - x * s\r\n\t\tout[10] = z * z * t + c\r\n\t\tout[11] = 0\r\n\t\tout[12] = 0\r\n\t\tout[13] = 0\r\n\t\tout[14] = 0\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from the given angle around the X axis\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat4.identity(dest);\r\n\t *     mat4.rotateX(dest, dest, rad);\r\n\t *\r\n\t * @param {mat4} out mat4 receiving operation result\r\n\t * @param {Number} rad the angle to rotate the matrix by\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction fromXRotation(out, rad) {\r\n\t\tvar s = Math.sin(rad)\r\n\t\tvar c = Math.cos(rad) // Perform axis-specific matrix multiplication\r\n\r\n\t\tout[0] = 1\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 0\r\n\t\tout[4] = 0\r\n\t\tout[5] = c\r\n\t\tout[6] = s\r\n\t\tout[7] = 0\r\n\t\tout[8] = 0\r\n\t\tout[9] = -s\r\n\t\tout[10] = c\r\n\t\tout[11] = 0\r\n\t\tout[12] = 0\r\n\t\tout[13] = 0\r\n\t\tout[14] = 0\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from the given angle around the Y axis\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat4.identity(dest);\r\n\t *     mat4.rotateY(dest, dest, rad);\r\n\t *\r\n\t * @param {mat4} out mat4 receiving operation result\r\n\t * @param {Number} rad the angle to rotate the matrix by\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction fromYRotation(out, rad) {\r\n\t\tvar s = Math.sin(rad)\r\n\t\tvar c = Math.cos(rad) // Perform axis-specific matrix multiplication\r\n\r\n\t\tout[0] = c\r\n\t\tout[1] = 0\r\n\t\tout[2] = -s\r\n\t\tout[3] = 0\r\n\t\tout[4] = 0\r\n\t\tout[5] = 1\r\n\t\tout[6] = 0\r\n\t\tout[7] = 0\r\n\t\tout[8] = s\r\n\t\tout[9] = 0\r\n\t\tout[10] = c\r\n\t\tout[11] = 0\r\n\t\tout[12] = 0\r\n\t\tout[13] = 0\r\n\t\tout[14] = 0\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from the given angle around the Z axis\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat4.identity(dest);\r\n\t *     mat4.rotateZ(dest, dest, rad);\r\n\t *\r\n\t * @param {mat4} out mat4 receiving operation result\r\n\t * @param {Number} rad the angle to rotate the matrix by\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction fromZRotation(out, rad) {\r\n\t\tvar s = Math.sin(rad)\r\n\t\tvar c = Math.cos(rad) // Perform axis-specific matrix multiplication\r\n\r\n\t\tout[0] = c\r\n\t\tout[1] = s\r\n\t\tout[2] = 0\r\n\t\tout[3] = 0\r\n\t\tout[4] = -s\r\n\t\tout[5] = c\r\n\t\tout[6] = 0\r\n\t\tout[7] = 0\r\n\t\tout[8] = 0\r\n\t\tout[9] = 0\r\n\t\tout[10] = 1\r\n\t\tout[11] = 0\r\n\t\tout[12] = 0\r\n\t\tout[13] = 0\r\n\t\tout[14] = 0\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from a quaternion rotation and vector translation\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat4.identity(dest);\r\n\t *     mat4.translate(dest, vec);\r\n\t *     let quatMat = mat4.create();\r\n\t *     quat4.toMat4(quat, quatMat);\r\n\t *     mat4.multiply(dest, quatMat);\r\n\t *\r\n\t * @param {mat4} out mat4 receiving operation result\r\n\t * @param {quat4} q Rotation quaternion\r\n\t * @param {vec3} v Translation vector\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction fromRotationTranslation(out, q, v) {\r\n\t\t// Quaternion math\r\n\t\tvar x = q[0],\r\n\t\t\ty = q[1],\r\n\t\t\tz = q[2],\r\n\t\t\tw = q[3]\r\n\t\tvar x2 = x + x\r\n\t\tvar y2 = y + y\r\n\t\tvar z2 = z + z\r\n\t\tvar xx = x * x2\r\n\t\tvar xy = x * y2\r\n\t\tvar xz = x * z2\r\n\t\tvar yy = y * y2\r\n\t\tvar yz = y * z2\r\n\t\tvar zz = z * z2\r\n\t\tvar wx = w * x2\r\n\t\tvar wy = w * y2\r\n\t\tvar wz = w * z2\r\n\t\tout[0] = 1 - (yy + zz)\r\n\t\tout[1] = xy + wz\r\n\t\tout[2] = xz - wy\r\n\t\tout[3] = 0\r\n\t\tout[4] = xy - wz\r\n\t\tout[5] = 1 - (xx + zz)\r\n\t\tout[6] = yz + wx\r\n\t\tout[7] = 0\r\n\t\tout[8] = xz + wy\r\n\t\tout[9] = yz - wx\r\n\t\tout[10] = 1 - (xx + yy)\r\n\t\tout[11] = 0\r\n\t\tout[12] = v[0]\r\n\t\tout[13] = v[1]\r\n\t\tout[14] = v[2]\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a new mat4 from a dual quat.\r\n\t *\r\n\t * @param {mat4} out Matrix\r\n\t * @param {quat2} a Dual Quaternion\r\n\t * @returns {mat4} mat4 receiving operation result\r\n\t */\r\n\r\n\tfunction fromQuat2(out, a) {\r\n\t\tvar translation = new ARRAY_TYPE(3)\r\n\t\tvar bx = -a[0],\r\n\t\t\tby = -a[1],\r\n\t\t\tbz = -a[2],\r\n\t\t\tbw = a[3],\r\n\t\t\tax = a[4],\r\n\t\t\tay = a[5],\r\n\t\t\taz = a[6],\r\n\t\t\taw = a[7]\r\n\t\tvar magnitude = bx * bx + by * by + bz * bz + bw * bw //Only scale if it makes sense\r\n\r\n\t\tif (magnitude > 0) {\r\n\t\t\ttranslation[0] = ((ax * bw + aw * bx + ay * bz - az * by) * 2) / magnitude\r\n\t\t\ttranslation[1] = ((ay * bw + aw * by + az * bx - ax * bz) * 2) / magnitude\r\n\t\t\ttranslation[2] = ((az * bw + aw * bz + ax * by - ay * bx) * 2) / magnitude\r\n\t\t} else {\r\n\t\t\ttranslation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2\r\n\t\t\ttranslation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2\r\n\t\t\ttranslation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2\r\n\t\t}\r\n\r\n\t\tfromRotationTranslation(out, a, translation)\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns the translation vector component of a transformation\r\n\t *  matrix. If a matrix is built with fromRotationTranslation,\r\n\t *  the returned vector will be the same as the translation vector\r\n\t *  originally supplied.\r\n\t * @param  {vec3} out Vector to receive translation component\r\n\t * @param  {mat4} mat Matrix to be decomposed (input)\r\n\t * @return {vec3} out\r\n\t */\r\n\r\n\tfunction getTranslation(out, mat) {\r\n\t\tout[0] = mat[12]\r\n\t\tout[1] = mat[13]\r\n\t\tout[2] = mat[14]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns the scaling factor component of a transformation\r\n\t *  matrix. If a matrix is built with fromRotationTranslationScale\r\n\t *  with a normalized Quaternion paramter, the returned vector will be\r\n\t *  the same as the scaling vector\r\n\t *  originally supplied.\r\n\t * @param  {vec3} out Vector to receive scaling factor component\r\n\t * @param  {mat4} mat Matrix to be decomposed (input)\r\n\t * @return {vec3} out\r\n\t */\r\n\r\n\tfunction getScaling(out, mat) {\r\n\t\tvar m11 = mat[0]\r\n\t\tvar m12 = mat[1]\r\n\t\tvar m13 = mat[2]\r\n\t\tvar m21 = mat[4]\r\n\t\tvar m22 = mat[5]\r\n\t\tvar m23 = mat[6]\r\n\t\tvar m31 = mat[8]\r\n\t\tvar m32 = mat[9]\r\n\t\tvar m33 = mat[10]\r\n\t\tout[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13)\r\n\t\tout[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23)\r\n\t\tout[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33)\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns a quaternion representing the rotational component\r\n\t *  of a transformation matrix. If a matrix is built with\r\n\t *  fromRotationTranslation, the returned quaternion will be the\r\n\t *  same as the quaternion originally supplied.\r\n\t * @param {quat} out Quaternion to receive the rotation component\r\n\t * @param {mat4} mat Matrix to be decomposed (input)\r\n\t * @return {quat} out\r\n\t */\r\n\r\n\tfunction getRotation(out, mat) {\r\n\t\t// Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\t\tvar trace = mat[0] + mat[5] + mat[10]\r\n\t\tvar S = 0\r\n\r\n\t\tif (trace > 0) {\r\n\t\t\tS = Math.sqrt(trace + 1.0) * 2\r\n\t\t\tout[3] = 0.25 * S\r\n\t\t\tout[0] = (mat[6] - mat[9]) / S\r\n\t\t\tout[1] = (mat[8] - mat[2]) / S\r\n\t\t\tout[2] = (mat[1] - mat[4]) / S\r\n\t\t} else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n\t\t\tS = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2\r\n\t\t\tout[3] = (mat[6] - mat[9]) / S\r\n\t\t\tout[0] = 0.25 * S\r\n\t\t\tout[1] = (mat[1] + mat[4]) / S\r\n\t\t\tout[2] = (mat[8] + mat[2]) / S\r\n\t\t} else if (mat[5] > mat[10]) {\r\n\t\t\tS = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2\r\n\t\t\tout[3] = (mat[8] - mat[2]) / S\r\n\t\t\tout[0] = (mat[1] + mat[4]) / S\r\n\t\t\tout[1] = 0.25 * S\r\n\t\t\tout[2] = (mat[6] + mat[9]) / S\r\n\t\t} else {\r\n\t\t\tS = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2\r\n\t\t\tout[3] = (mat[1] - mat[4]) / S\r\n\t\t\tout[0] = (mat[8] + mat[2]) / S\r\n\t\t\tout[1] = (mat[6] + mat[9]) / S\r\n\t\t\tout[2] = 0.25 * S\r\n\t\t}\r\n\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat4.identity(dest);\r\n\t *     mat4.translate(dest, vec);\r\n\t *     let quatMat = mat4.create();\r\n\t *     quat4.toMat4(quat, quatMat);\r\n\t *     mat4.multiply(dest, quatMat);\r\n\t *     mat4.scale(dest, scale)\r\n\t *\r\n\t * @param {mat4} out mat4 receiving operation result\r\n\t * @param {quat4} q Rotation quaternion\r\n\t * @param {vec3} v Translation vector\r\n\t * @param {vec3} s Scaling vector\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction fromRotationTranslationScale(out, q, v, s) {\r\n\t\t// Quaternion math\r\n\t\tvar x = q[0],\r\n\t\t\ty = q[1],\r\n\t\t\tz = q[2],\r\n\t\t\tw = q[3]\r\n\t\tvar x2 = x + x\r\n\t\tvar y2 = y + y\r\n\t\tvar z2 = z + z\r\n\t\tvar xx = x * x2\r\n\t\tvar xy = x * y2\r\n\t\tvar xz = x * z2\r\n\t\tvar yy = y * y2\r\n\t\tvar yz = y * z2\r\n\t\tvar zz = z * z2\r\n\t\tvar wx = w * x2\r\n\t\tvar wy = w * y2\r\n\t\tvar wz = w * z2\r\n\t\tvar sx = s[0]\r\n\t\tvar sy = s[1]\r\n\t\tvar sz = s[2]\r\n\t\tout[0] = (1 - (yy + zz)) * sx\r\n\t\tout[1] = (xy + wz) * sx\r\n\t\tout[2] = (xz - wy) * sx\r\n\t\tout[3] = 0\r\n\t\tout[4] = (xy - wz) * sy\r\n\t\tout[5] = (1 - (xx + zz)) * sy\r\n\t\tout[6] = (yz + wx) * sy\r\n\t\tout[7] = 0\r\n\t\tout[8] = (xz + wy) * sz\r\n\t\tout[9] = (yz - wx) * sz\r\n\t\tout[10] = (1 - (xx + yy)) * sz\r\n\t\tout[11] = 0\r\n\t\tout[12] = v[0]\r\n\t\tout[13] = v[1]\r\n\t\tout[14] = v[2]\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n\t * This is equivalent to (but much faster than):\r\n\t *\r\n\t *     mat4.identity(dest);\r\n\t *     mat4.translate(dest, vec);\r\n\t *     mat4.translate(dest, origin);\r\n\t *     let quatMat = mat4.create();\r\n\t *     quat4.toMat4(quat, quatMat);\r\n\t *     mat4.multiply(dest, quatMat);\r\n\t *     mat4.scale(dest, scale)\r\n\t *     mat4.translate(dest, negativeOrigin);\r\n\t *\r\n\t * @param {mat4} out mat4 receiving operation result\r\n\t * @param {quat4} q Rotation quaternion\r\n\t * @param {vec3} v Translation vector\r\n\t * @param {vec3} s Scaling vector\r\n\t * @param {vec3} o The origin vector around which to scale and rotate\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n\t\t// Quaternion math\r\n\t\tvar x = q[0],\r\n\t\t\ty = q[1],\r\n\t\t\tz = q[2],\r\n\t\t\tw = q[3]\r\n\t\tvar x2 = x + x\r\n\t\tvar y2 = y + y\r\n\t\tvar z2 = z + z\r\n\t\tvar xx = x * x2\r\n\t\tvar xy = x * y2\r\n\t\tvar xz = x * z2\r\n\t\tvar yy = y * y2\r\n\t\tvar yz = y * z2\r\n\t\tvar zz = z * z2\r\n\t\tvar wx = w * x2\r\n\t\tvar wy = w * y2\r\n\t\tvar wz = w * z2\r\n\t\tvar sx = s[0]\r\n\t\tvar sy = s[1]\r\n\t\tvar sz = s[2]\r\n\t\tvar ox = o[0]\r\n\t\tvar oy = o[1]\r\n\t\tvar oz = o[2]\r\n\t\tvar out0 = (1 - (yy + zz)) * sx\r\n\t\tvar out1 = (xy + wz) * sx\r\n\t\tvar out2 = (xz - wy) * sx\r\n\t\tvar out4 = (xy - wz) * sy\r\n\t\tvar out5 = (1 - (xx + zz)) * sy\r\n\t\tvar out6 = (yz + wx) * sy\r\n\t\tvar out8 = (xz + wy) * sz\r\n\t\tvar out9 = (yz - wx) * sz\r\n\t\tvar out10 = (1 - (xx + yy)) * sz\r\n\t\tout[0] = out0\r\n\t\tout[1] = out1\r\n\t\tout[2] = out2\r\n\t\tout[3] = 0\r\n\t\tout[4] = out4\r\n\t\tout[5] = out5\r\n\t\tout[6] = out6\r\n\t\tout[7] = 0\r\n\t\tout[8] = out8\r\n\t\tout[9] = out9\r\n\t\tout[10] = out10\r\n\t\tout[11] = 0\r\n\t\tout[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz)\r\n\t\tout[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz)\r\n\t\tout[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz)\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates a 4x4 matrix from the given quaternion\r\n\t *\r\n\t * @param {mat4} out mat4 receiving operation result\r\n\t * @param {quat} q Quaternion to create matrix from\r\n\t *\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction fromQuat$1(out, q) {\r\n\t\tvar x = q[0],\r\n\t\t\ty = q[1],\r\n\t\t\tz = q[2],\r\n\t\t\tw = q[3]\r\n\t\tvar x2 = x + x\r\n\t\tvar y2 = y + y\r\n\t\tvar z2 = z + z\r\n\t\tvar xx = x * x2\r\n\t\tvar yx = y * x2\r\n\t\tvar yy = y * y2\r\n\t\tvar zx = z * x2\r\n\t\tvar zy = z * y2\r\n\t\tvar zz = z * z2\r\n\t\tvar wx = w * x2\r\n\t\tvar wy = w * y2\r\n\t\tvar wz = w * z2\r\n\t\tout[0] = 1 - yy - zz\r\n\t\tout[1] = yx + wz\r\n\t\tout[2] = zx - wy\r\n\t\tout[3] = 0\r\n\t\tout[4] = yx - wz\r\n\t\tout[5] = 1 - xx - zz\r\n\t\tout[6] = zy + wx\r\n\t\tout[7] = 0\r\n\t\tout[8] = zx + wy\r\n\t\tout[9] = zy - wx\r\n\t\tout[10] = 1 - xx - yy\r\n\t\tout[11] = 0\r\n\t\tout[12] = 0\r\n\t\tout[13] = 0\r\n\t\tout[14] = 0\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Generates a frustum matrix with the given bounds\r\n\t *\r\n\t * @param {mat4} out mat4 frustum matrix will be written into\r\n\t * @param {Number} left Left bound of the frustum\r\n\t * @param {Number} right Right bound of the frustum\r\n\t * @param {Number} bottom Bottom bound of the frustum\r\n\t * @param {Number} top Top bound of the frustum\r\n\t * @param {Number} near Near bound of the frustum\r\n\t * @param {Number} far Far bound of the frustum\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction frustum(out, left, right, bottom, top, near, far) {\r\n\t\tvar rl = 1 / (right - left)\r\n\t\tvar tb = 1 / (top - bottom)\r\n\t\tvar nf = 1 / (near - far)\r\n\t\tout[0] = near * 2 * rl\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 0\r\n\t\tout[4] = 0\r\n\t\tout[5] = near * 2 * tb\r\n\t\tout[6] = 0\r\n\t\tout[7] = 0\r\n\t\tout[8] = (right + left) * rl\r\n\t\tout[9] = (top + bottom) * tb\r\n\t\tout[10] = (far + near) * nf\r\n\t\tout[11] = -1\r\n\t\tout[12] = 0\r\n\t\tout[13] = 0\r\n\t\tout[14] = far * near * 2 * nf\r\n\t\tout[15] = 0\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Generates a perspective projection matrix with the given bounds.\r\n\t * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n\t *\r\n\t * @param {mat4} out mat4 frustum matrix will be written into\r\n\t * @param {number} fovy Vertical field of view in radians\r\n\t * @param {number} aspect Aspect ratio. typically viewport width/height\r\n\t * @param {number} near Near bound of the frustum\r\n\t * @param {number} far Far bound of the frustum, can be null or Infinity\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction perspective(out, fovy, aspect, near, far) {\r\n\t\tvar f = 1.0 / Math.tan(fovy / 2),\r\n\t\t\tnf\r\n\t\tout[0] = f / aspect\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 0\r\n\t\tout[4] = 0\r\n\t\tout[5] = f\r\n\t\tout[6] = 0\r\n\t\tout[7] = 0\r\n\t\tout[8] = 0\r\n\t\tout[9] = 0\r\n\t\tout[11] = -1\r\n\t\tout[12] = 0\r\n\t\tout[13] = 0\r\n\t\tout[15] = 0\r\n\r\n\t\tif (far != null && far !== Infinity) {\r\n\t\t\tnf = 1 / (near - far)\r\n\t\t\tout[10] = (far + near) * nf\r\n\t\t\tout[14] = 2 * far * near * nf\r\n\t\t} else {\r\n\t\t\tout[10] = -1\r\n\t\t\tout[14] = -2 * near\r\n\t\t}\r\n\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Generates a perspective projection matrix with the given field of view.\r\n\t * This is primarily useful for generating projection matrices to be used\r\n\t * with the still experiemental WebVR API.\r\n\t *\r\n\t * @param {mat4} out mat4 frustum matrix will be written into\r\n\t * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n\t * @param {number} near Near bound of the frustum\r\n\t * @param {number} far Far bound of the frustum\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction perspectiveFromFieldOfView(out, fov, near, far) {\r\n\t\tvar upTan = Math.tan((fov.upDegrees * Math.PI) / 180.0)\r\n\t\tvar downTan = Math.tan((fov.downDegrees * Math.PI) / 180.0)\r\n\t\tvar leftTan = Math.tan((fov.leftDegrees * Math.PI) / 180.0)\r\n\t\tvar rightTan = Math.tan((fov.rightDegrees * Math.PI) / 180.0)\r\n\t\tvar xScale = 2.0 / (leftTan + rightTan)\r\n\t\tvar yScale = 2.0 / (upTan + downTan)\r\n\t\tout[0] = xScale\r\n\t\tout[1] = 0.0\r\n\t\tout[2] = 0.0\r\n\t\tout[3] = 0.0\r\n\t\tout[4] = 0.0\r\n\t\tout[5] = yScale\r\n\t\tout[6] = 0.0\r\n\t\tout[7] = 0.0\r\n\t\tout[8] = -((leftTan - rightTan) * xScale * 0.5)\r\n\t\tout[9] = (upTan - downTan) * yScale * 0.5\r\n\t\tout[10] = far / (near - far)\r\n\t\tout[11] = -1.0\r\n\t\tout[12] = 0.0\r\n\t\tout[13] = 0.0\r\n\t\tout[14] = (far * near) / (near - far)\r\n\t\tout[15] = 0.0\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Generates a orthogonal projection matrix with the given bounds\r\n\t *\r\n\t * @param {mat4} out mat4 frustum matrix will be written into\r\n\t * @param {number} left Left bound of the frustum\r\n\t * @param {number} right Right bound of the frustum\r\n\t * @param {number} bottom Bottom bound of the frustum\r\n\t * @param {number} top Top bound of the frustum\r\n\t * @param {number} near Near bound of the frustum\r\n\t * @param {number} far Far bound of the frustum\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction ortho(out, left, right, bottom, top, near, far) {\r\n\t\tvar lr = 1 / (left - right)\r\n\t\tvar bt = 1 / (bottom - top)\r\n\t\tvar nf = 1 / (near - far)\r\n\t\tout[0] = -2 * lr\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 0\r\n\t\tout[4] = 0\r\n\t\tout[5] = -2 * bt\r\n\t\tout[6] = 0\r\n\t\tout[7] = 0\r\n\t\tout[8] = 0\r\n\t\tout[9] = 0\r\n\t\tout[10] = 2 * nf\r\n\t\tout[11] = 0\r\n\t\tout[12] = (left + right) * lr\r\n\t\tout[13] = (top + bottom) * bt\r\n\t\tout[14] = (far + near) * nf\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n\t * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n\t *\r\n\t * @param {mat4} out mat4 frustum matrix will be written into\r\n\t * @param {vec3} eye Position of the viewer\r\n\t * @param {vec3} center Point the viewer is looking at\r\n\t * @param {vec3} up vec3 pointing up\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction lookAt(out, eye, center, up) {\r\n\t\tvar x0, x1, x2, y0, y1, y2, z0, z1, z2, len\r\n\t\tvar eyex = eye[0]\r\n\t\tvar eyey = eye[1]\r\n\t\tvar eyez = eye[2]\r\n\t\tvar upx = up[0]\r\n\t\tvar upy = up[1]\r\n\t\tvar upz = up[2]\r\n\t\tvar centerx = center[0]\r\n\t\tvar centery = center[1]\r\n\t\tvar centerz = center[2]\r\n\r\n\t\tif (\r\n\t\t\tMath.abs(eyex - centerx) < EPSILON &&\r\n\t\t\tMath.abs(eyey - centery) < EPSILON &&\r\n\t\t\tMath.abs(eyez - centerz) < EPSILON\r\n\t\t) {\r\n\t\t\treturn identity$3(out)\r\n\t\t}\r\n\r\n\t\tz0 = eyex - centerx\r\n\t\tz1 = eyey - centery\r\n\t\tz2 = eyez - centerz\r\n\t\tlen = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2)\r\n\t\tz0 *= len\r\n\t\tz1 *= len\r\n\t\tz2 *= len\r\n\t\tx0 = upy * z2 - upz * z1\r\n\t\tx1 = upz * z0 - upx * z2\r\n\t\tx2 = upx * z1 - upy * z0\r\n\t\tlen = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2)\r\n\r\n\t\tif (!len) {\r\n\t\t\tx0 = 0\r\n\t\t\tx1 = 0\r\n\t\t\tx2 = 0\r\n\t\t} else {\r\n\t\t\tlen = 1 / len\r\n\t\t\tx0 *= len\r\n\t\t\tx1 *= len\r\n\t\t\tx2 *= len\r\n\t\t}\r\n\r\n\t\ty0 = z1 * x2 - z2 * x1\r\n\t\ty1 = z2 * x0 - z0 * x2\r\n\t\ty2 = z0 * x1 - z1 * x0\r\n\t\tlen = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2)\r\n\r\n\t\tif (!len) {\r\n\t\t\ty0 = 0\r\n\t\t\ty1 = 0\r\n\t\t\ty2 = 0\r\n\t\t} else {\r\n\t\t\tlen = 1 / len\r\n\t\t\ty0 *= len\r\n\t\t\ty1 *= len\r\n\t\t\ty2 *= len\r\n\t\t}\r\n\r\n\t\tout[0] = x0\r\n\t\tout[1] = y0\r\n\t\tout[2] = z0\r\n\t\tout[3] = 0\r\n\t\tout[4] = x1\r\n\t\tout[5] = y1\r\n\t\tout[6] = z1\r\n\t\tout[7] = 0\r\n\t\tout[8] = x2\r\n\t\tout[9] = y2\r\n\t\tout[10] = z2\r\n\t\tout[11] = 0\r\n\t\tout[12] = -(x0 * eyex + x1 * eyey + x2 * eyez)\r\n\t\tout[13] = -(y0 * eyex + y1 * eyey + y2 * eyez)\r\n\t\tout[14] = -(z0 * eyex + z1 * eyey + z2 * eyez)\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Generates a matrix that makes something look at something else.\r\n\t *\r\n\t * @param {mat4} out mat4 frustum matrix will be written into\r\n\t * @param {vec3} eye Position of the viewer\r\n\t * @param {vec3} center Point the viewer is looking at\r\n\t * @param {vec3} up vec3 pointing up\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction targetTo(out, eye, target, up) {\r\n\t\tvar eyex = eye[0],\r\n\t\t\teyey = eye[1],\r\n\t\t\teyez = eye[2],\r\n\t\t\tupx = up[0],\r\n\t\t\tupy = up[1],\r\n\t\t\tupz = up[2]\r\n\t\tvar z0 = eyex - target[0],\r\n\t\t\tz1 = eyey - target[1],\r\n\t\t\tz2 = eyez - target[2]\r\n\t\tvar len = z0 * z0 + z1 * z1 + z2 * z2\r\n\r\n\t\tif (len > 0) {\r\n\t\t\tlen = 1 / Math.sqrt(len)\r\n\t\t\tz0 *= len\r\n\t\t\tz1 *= len\r\n\t\t\tz2 *= len\r\n\t\t}\r\n\r\n\t\tvar x0 = upy * z2 - upz * z1,\r\n\t\t\tx1 = upz * z0 - upx * z2,\r\n\t\t\tx2 = upx * z1 - upy * z0\r\n\t\tlen = x0 * x0 + x1 * x1 + x2 * x2\r\n\r\n\t\tif (len > 0) {\r\n\t\t\tlen = 1 / Math.sqrt(len)\r\n\t\t\tx0 *= len\r\n\t\t\tx1 *= len\r\n\t\t\tx2 *= len\r\n\t\t}\r\n\r\n\t\tout[0] = x0\r\n\t\tout[1] = x1\r\n\t\tout[2] = x2\r\n\t\tout[3] = 0\r\n\t\tout[4] = z1 * x2 - z2 * x1\r\n\t\tout[5] = z2 * x0 - z0 * x2\r\n\t\tout[6] = z0 * x1 - z1 * x0\r\n\t\tout[7] = 0\r\n\t\tout[8] = z0\r\n\t\tout[9] = z1\r\n\t\tout[10] = z2\r\n\t\tout[11] = 0\r\n\t\tout[12] = eyex\r\n\t\tout[13] = eyey\r\n\t\tout[14] = eyez\r\n\t\tout[15] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns a string representation of a mat4\r\n\t *\r\n\t * @param {mat4} a matrix to represent as a string\r\n\t * @returns {String} string representation of the matrix\r\n\t */\r\n\r\n\tfunction str$3(a) {\r\n\t\treturn (\r\n\t\t\t'mat4(' +\r\n\t\t\ta[0] +\r\n\t\t\t', ' +\r\n\t\t\ta[1] +\r\n\t\t\t', ' +\r\n\t\t\ta[2] +\r\n\t\t\t', ' +\r\n\t\t\ta[3] +\r\n\t\t\t', ' +\r\n\t\t\ta[4] +\r\n\t\t\t', ' +\r\n\t\t\ta[5] +\r\n\t\t\t', ' +\r\n\t\t\ta[6] +\r\n\t\t\t', ' +\r\n\t\t\ta[7] +\r\n\t\t\t', ' +\r\n\t\t\ta[8] +\r\n\t\t\t', ' +\r\n\t\t\ta[9] +\r\n\t\t\t', ' +\r\n\t\t\ta[10] +\r\n\t\t\t', ' +\r\n\t\t\ta[11] +\r\n\t\t\t', ' +\r\n\t\t\ta[12] +\r\n\t\t\t', ' +\r\n\t\t\ta[13] +\r\n\t\t\t', ' +\r\n\t\t\ta[14] +\r\n\t\t\t', ' +\r\n\t\t\ta[15] +\r\n\t\t\t')'\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Returns Frobenius norm of a mat4\r\n\t *\r\n\t * @param {mat4} a the matrix to calculate Frobenius norm of\r\n\t * @returns {Number} Frobenius norm\r\n\t */\r\n\r\n\tfunction frob$3(a) {\r\n\t\treturn Math.sqrt(\r\n\t\t\tMath.pow(a[0], 2) +\r\n\t\t\t\tMath.pow(a[1], 2) +\r\n\t\t\t\tMath.pow(a[2], 2) +\r\n\t\t\t\tMath.pow(a[3], 2) +\r\n\t\t\t\tMath.pow(a[4], 2) +\r\n\t\t\t\tMath.pow(a[5], 2) +\r\n\t\t\t\tMath.pow(a[6], 2) +\r\n\t\t\t\tMath.pow(a[7], 2) +\r\n\t\t\t\tMath.pow(a[8], 2) +\r\n\t\t\t\tMath.pow(a[9], 2) +\r\n\t\t\t\tMath.pow(a[10], 2) +\r\n\t\t\t\tMath.pow(a[11], 2) +\r\n\t\t\t\tMath.pow(a[12], 2) +\r\n\t\t\t\tMath.pow(a[13], 2) +\r\n\t\t\t\tMath.pow(a[14], 2) +\r\n\t\t\t\tMath.pow(a[15], 2),\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Adds two mat4's\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {mat4} a the first operand\r\n\t * @param {mat4} b the second operand\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction add$3(out, a, b) {\r\n\t\tout[0] = a[0] + b[0]\r\n\t\tout[1] = a[1] + b[1]\r\n\t\tout[2] = a[2] + b[2]\r\n\t\tout[3] = a[3] + b[3]\r\n\t\tout[4] = a[4] + b[4]\r\n\t\tout[5] = a[5] + b[5]\r\n\t\tout[6] = a[6] + b[6]\r\n\t\tout[7] = a[7] + b[7]\r\n\t\tout[8] = a[8] + b[8]\r\n\t\tout[9] = a[9] + b[9]\r\n\t\tout[10] = a[10] + b[10]\r\n\t\tout[11] = a[11] + b[11]\r\n\t\tout[12] = a[12] + b[12]\r\n\t\tout[13] = a[13] + b[13]\r\n\t\tout[14] = a[14] + b[14]\r\n\t\tout[15] = a[15] + b[15]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Subtracts matrix b from matrix a\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {mat4} a the first operand\r\n\t * @param {mat4} b the second operand\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction subtract$3(out, a, b) {\r\n\t\tout[0] = a[0] - b[0]\r\n\t\tout[1] = a[1] - b[1]\r\n\t\tout[2] = a[2] - b[2]\r\n\t\tout[3] = a[3] - b[3]\r\n\t\tout[4] = a[4] - b[4]\r\n\t\tout[5] = a[5] - b[5]\r\n\t\tout[6] = a[6] - b[6]\r\n\t\tout[7] = a[7] - b[7]\r\n\t\tout[8] = a[8] - b[8]\r\n\t\tout[9] = a[9] - b[9]\r\n\t\tout[10] = a[10] - b[10]\r\n\t\tout[11] = a[11] - b[11]\r\n\t\tout[12] = a[12] - b[12]\r\n\t\tout[13] = a[13] - b[13]\r\n\t\tout[14] = a[14] - b[14]\r\n\t\tout[15] = a[15] - b[15]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Multiply each element of the matrix by a scalar.\r\n\t *\r\n\t * @param {mat4} out the receiving matrix\r\n\t * @param {mat4} a the matrix to scale\r\n\t * @param {Number} b amount to scale the matrix's elements by\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction multiplyScalar$3(out, a, b) {\r\n\t\tout[0] = a[0] * b\r\n\t\tout[1] = a[1] * b\r\n\t\tout[2] = a[2] * b\r\n\t\tout[3] = a[3] * b\r\n\t\tout[4] = a[4] * b\r\n\t\tout[5] = a[5] * b\r\n\t\tout[6] = a[6] * b\r\n\t\tout[7] = a[7] * b\r\n\t\tout[8] = a[8] * b\r\n\t\tout[9] = a[9] * b\r\n\t\tout[10] = a[10] * b\r\n\t\tout[11] = a[11] * b\r\n\t\tout[12] = a[12] * b\r\n\t\tout[13] = a[13] * b\r\n\t\tout[14] = a[14] * b\r\n\t\tout[15] = a[15] * b\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n\t *\r\n\t * @param {mat4} out the receiving vector\r\n\t * @param {mat4} a the first operand\r\n\t * @param {mat4} b the second operand\r\n\t * @param {Number} scale the amount to scale b's elements by before adding\r\n\t * @returns {mat4} out\r\n\t */\r\n\r\n\tfunction multiplyScalarAndAdd$3(out, a, b, scale) {\r\n\t\tout[0] = a[0] + b[0] * scale\r\n\t\tout[1] = a[1] + b[1] * scale\r\n\t\tout[2] = a[2] + b[2] * scale\r\n\t\tout[3] = a[3] + b[3] * scale\r\n\t\tout[4] = a[4] + b[4] * scale\r\n\t\tout[5] = a[5] + b[5] * scale\r\n\t\tout[6] = a[6] + b[6] * scale\r\n\t\tout[7] = a[7] + b[7] * scale\r\n\t\tout[8] = a[8] + b[8] * scale\r\n\t\tout[9] = a[9] + b[9] * scale\r\n\t\tout[10] = a[10] + b[10] * scale\r\n\t\tout[11] = a[11] + b[11] * scale\r\n\t\tout[12] = a[12] + b[12] * scale\r\n\t\tout[13] = a[13] + b[13] * scale\r\n\t\tout[14] = a[14] + b[14] * scale\r\n\t\tout[15] = a[15] + b[15] * scale\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n\t *\r\n\t * @param {mat4} a The first matrix.\r\n\t * @param {mat4} b The second matrix.\r\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction exactEquals$3(a, b) {\r\n\t\treturn (\r\n\t\t\ta[0] === b[0] &&\r\n\t\t\ta[1] === b[1] &&\r\n\t\t\ta[2] === b[2] &&\r\n\t\t\ta[3] === b[3] &&\r\n\t\t\ta[4] === b[4] &&\r\n\t\t\ta[5] === b[5] &&\r\n\t\t\ta[6] === b[6] &&\r\n\t\t\ta[7] === b[7] &&\r\n\t\t\ta[8] === b[8] &&\r\n\t\t\ta[9] === b[9] &&\r\n\t\t\ta[10] === b[10] &&\r\n\t\t\ta[11] === b[11] &&\r\n\t\t\ta[12] === b[12] &&\r\n\t\t\ta[13] === b[13] &&\r\n\t\t\ta[14] === b[14] &&\r\n\t\t\ta[15] === b[15]\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the matrices have approximately the same elements in the same position.\r\n\t *\r\n\t * @param {mat4} a The first matrix.\r\n\t * @param {mat4} b The second matrix.\r\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction equals$4(a, b) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3]\r\n\t\tvar a4 = a[4],\r\n\t\t\ta5 = a[5],\r\n\t\t\ta6 = a[6],\r\n\t\t\ta7 = a[7]\r\n\t\tvar a8 = a[8],\r\n\t\t\ta9 = a[9],\r\n\t\t\ta10 = a[10],\r\n\t\t\ta11 = a[11]\r\n\t\tvar a12 = a[12],\r\n\t\t\ta13 = a[13],\r\n\t\t\ta14 = a[14],\r\n\t\t\ta15 = a[15]\r\n\t\tvar b0 = b[0],\r\n\t\t\tb1 = b[1],\r\n\t\t\tb2 = b[2],\r\n\t\t\tb3 = b[3]\r\n\t\tvar b4 = b[4],\r\n\t\t\tb5 = b[5],\r\n\t\t\tb6 = b[6],\r\n\t\t\tb7 = b[7]\r\n\t\tvar b8 = b[8],\r\n\t\t\tb9 = b[9],\r\n\t\t\tb10 = b[10],\r\n\t\t\tb11 = b[11]\r\n\t\tvar b12 = b[12],\r\n\t\t\tb13 = b[13],\r\n\t\t\tb14 = b[14],\r\n\t\t\tb15 = b[15]\r\n\t\treturn (\r\n\t\t\tMath.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n\t\t\tMath.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n\t\t\tMath.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\r\n\t\t\tMath.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\r\n\t\t\tMath.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\r\n\t\t\tMath.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\r\n\t\t\tMath.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\r\n\t\t\tMath.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\r\n\t\t\tMath.abs(a9 - b9) <= EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\r\n\t\t\tMath.abs(a10 - b10) <= EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\r\n\t\t\tMath.abs(a11 - b11) <= EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\r\n\t\t\tMath.abs(a12 - b12) <= EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\r\n\t\t\tMath.abs(a13 - b13) <= EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\r\n\t\t\tMath.abs(a14 - b14) <= EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\r\n\t\t\tMath.abs(a15 - b15) <= EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15))\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Alias for {@link mat4.multiply}\r\n\t * @function\r\n\t */\r\n\r\n\tvar mul$3 = multiply$3\r\n\t/**\r\n\t * Alias for {@link mat4.subtract}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sub$3 = subtract$3\r\n\r\n\tvar mat4 = /*#__PURE__*/ Object.freeze({\r\n\t\tcreate: create$3,\r\n\t\tclone: clone$3,\r\n\t\tcopy: copy$3,\r\n\t\tfromValues: fromValues$3,\r\n\t\tset: set$3,\r\n\t\tidentity: identity$3,\r\n\t\ttranspose: transpose$2,\r\n\t\tinvert: invert$3,\r\n\t\tadjoint: adjoint$2,\r\n\t\tdeterminant: determinant$3,\r\n\t\tmultiply: multiply$3,\r\n\t\ttranslate: translate$2,\r\n\t\tscale: scale$3,\r\n\t\trotate: rotate$3,\r\n\t\trotateX: rotateX,\r\n\t\trotateY: rotateY,\r\n\t\trotateZ: rotateZ,\r\n\t\tfromTranslation: fromTranslation$2,\r\n\t\tfromScaling: fromScaling$3,\r\n\t\tfromRotation: fromRotation$3,\r\n\t\tfromXRotation: fromXRotation,\r\n\t\tfromYRotation: fromYRotation,\r\n\t\tfromZRotation: fromZRotation,\r\n\t\tfromRotationTranslation: fromRotationTranslation,\r\n\t\tfromQuat2: fromQuat2,\r\n\t\tgetTranslation: getTranslation,\r\n\t\tgetScaling: getScaling,\r\n\t\tgetRotation: getRotation,\r\n\t\tfromRotationTranslationScale: fromRotationTranslationScale,\r\n\t\tfromRotationTranslationScaleOrigin: fromRotationTranslationScaleOrigin,\r\n\t\tfromQuat: fromQuat$1,\r\n\t\tfrustum: frustum,\r\n\t\tperspective: perspective,\r\n\t\tperspectiveFromFieldOfView: perspectiveFromFieldOfView,\r\n\t\tortho: ortho,\r\n\t\tlookAt: lookAt,\r\n\t\ttargetTo: targetTo,\r\n\t\tstr: str$3,\r\n\t\tfrob: frob$3,\r\n\t\tadd: add$3,\r\n\t\tsubtract: subtract$3,\r\n\t\tmultiplyScalar: multiplyScalar$3,\r\n\t\tmultiplyScalarAndAdd: multiplyScalarAndAdd$3,\r\n\t\texactEquals: exactEquals$3,\r\n\t\tequals: equals$4,\r\n\t\tmul: mul$3,\r\n\t\tsub: sub$3,\r\n\t})\r\n\r\n\t/**\r\n\t * 3 Dimensional Vector\r\n\t * @module vec3\r\n\t */\r\n\r\n\t/**\r\n\t * Creates a new, empty vec3\r\n\t *\r\n\t * @returns {vec3} a new 3D vector\r\n\t */\r\n\r\n\tfunction create$4() {\r\n\t\tvar out = new ARRAY_TYPE(3)\r\n\r\n\t\tif (ARRAY_TYPE != Float32Array) {\r\n\t\t\tout[0] = 0\r\n\t\t\tout[1] = 0\r\n\t\t\tout[2] = 0\r\n\t\t}\r\n\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a new vec3 initialized with values from an existing vector\r\n\t *\r\n\t * @param {vec3} a vector to clone\r\n\t * @returns {vec3} a new 3D vector\r\n\t */\r\n\r\n\tfunction clone$4(a) {\r\n\t\tvar out = new ARRAY_TYPE(3)\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = a[2]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the length of a vec3\r\n\t *\r\n\t * @param {vec3} a vector to calculate length of\r\n\t * @returns {Number} length of a\r\n\t */\r\n\r\n\tfunction length(a) {\r\n\t\tvar x = a[0]\r\n\t\tvar y = a[1]\r\n\t\tvar z = a[2]\r\n\t\treturn Math.sqrt(x * x + y * y + z * z)\r\n\t}\r\n\t/**\r\n\t * Creates a new vec3 initialized with the given values\r\n\t *\r\n\t * @param {Number} x X component\r\n\t * @param {Number} y Y component\r\n\t * @param {Number} z Z component\r\n\t * @returns {vec3} a new 3D vector\r\n\t */\r\n\r\n\tfunction fromValues$4(x, y, z) {\r\n\t\tvar out = new ARRAY_TYPE(3)\r\n\t\tout[0] = x\r\n\t\tout[1] = y\r\n\t\tout[2] = z\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Copy the values from one vec3 to another\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the source vector\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction copy$4(out, a) {\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = a[2]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set the components of a vec3 to the given values\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {Number} x X component\r\n\t * @param {Number} y Y component\r\n\t * @param {Number} z Z component\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction set$4(out, x, y, z) {\r\n\t\tout[0] = x\r\n\t\tout[1] = y\r\n\t\tout[2] = z\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Adds two vec3's\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the first operand\r\n\t * @param {vec3} b the second operand\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction add$4(out, a, b) {\r\n\t\tout[0] = a[0] + b[0]\r\n\t\tout[1] = a[1] + b[1]\r\n\t\tout[2] = a[2] + b[2]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Subtracts vector b from vector a\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the first operand\r\n\t * @param {vec3} b the second operand\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction subtract$4(out, a, b) {\r\n\t\tout[0] = a[0] - b[0]\r\n\t\tout[1] = a[1] - b[1]\r\n\t\tout[2] = a[2] - b[2]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Multiplies two vec3's\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the first operand\r\n\t * @param {vec3} b the second operand\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction multiply$4(out, a, b) {\r\n\t\tout[0] = a[0] * b[0]\r\n\t\tout[1] = a[1] * b[1]\r\n\t\tout[2] = a[2] * b[2]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Divides two vec3's\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the first operand\r\n\t * @param {vec3} b the second operand\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction divide(out, a, b) {\r\n\t\tout[0] = a[0] / b[0]\r\n\t\tout[1] = a[1] / b[1]\r\n\t\tout[2] = a[2] / b[2]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Math.ceil the components of a vec3\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a vector to ceil\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction ceil(out, a) {\r\n\t\tout[0] = Math.ceil(a[0])\r\n\t\tout[1] = Math.ceil(a[1])\r\n\t\tout[2] = Math.ceil(a[2])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Math.floor the components of a vec3\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a vector to floor\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction floor(out, a) {\r\n\t\tout[0] = Math.floor(a[0])\r\n\t\tout[1] = Math.floor(a[1])\r\n\t\tout[2] = Math.floor(a[2])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns the minimum of two vec3's\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the first operand\r\n\t * @param {vec3} b the second operand\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction min(out, a, b) {\r\n\t\tout[0] = Math.min(a[0], b[0])\r\n\t\tout[1] = Math.min(a[1], b[1])\r\n\t\tout[2] = Math.min(a[2], b[2])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns the maximum of two vec3's\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the first operand\r\n\t * @param {vec3} b the second operand\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction max(out, a, b) {\r\n\t\tout[0] = Math.max(a[0], b[0])\r\n\t\tout[1] = Math.max(a[1], b[1])\r\n\t\tout[2] = Math.max(a[2], b[2])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Math.round the components of a vec3\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a vector to round\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction round(out, a) {\r\n\t\tout[0] = Math.round(a[0])\r\n\t\tout[1] = Math.round(a[1])\r\n\t\tout[2] = Math.round(a[2])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Scales a vec3 by a scalar number\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the vector to scale\r\n\t * @param {Number} b amount to scale the vector by\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction scale$4(out, a, b) {\r\n\t\tout[0] = a[0] * b\r\n\t\tout[1] = a[1] * b\r\n\t\tout[2] = a[2] * b\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Adds two vec3's after scaling the second operand by a scalar value\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the first operand\r\n\t * @param {vec3} b the second operand\r\n\t * @param {Number} scale the amount to scale b by before adding\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction scaleAndAdd(out, a, b, scale) {\r\n\t\tout[0] = a[0] + b[0] * scale\r\n\t\tout[1] = a[1] + b[1] * scale\r\n\t\tout[2] = a[2] + b[2] * scale\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the euclidian distance between two vec3's\r\n\t *\r\n\t * @param {vec3} a the first operand\r\n\t * @param {vec3} b the second operand\r\n\t * @returns {Number} distance between a and b\r\n\t */\r\n\r\n\tfunction distance(a, b) {\r\n\t\tvar x = b[0] - a[0]\r\n\t\tvar y = b[1] - a[1]\r\n\t\tvar z = b[2] - a[2]\r\n\t\treturn Math.sqrt(x * x + y * y + z * z)\r\n\t}\r\n\t/**\r\n\t * Calculates the squared euclidian distance between two vec3's\r\n\t *\r\n\t * @param {vec3} a the first operand\r\n\t * @param {vec3} b the second operand\r\n\t * @returns {Number} squared distance between a and b\r\n\t */\r\n\r\n\tfunction squaredDistance(a, b) {\r\n\t\tvar x = b[0] - a[0]\r\n\t\tvar y = b[1] - a[1]\r\n\t\tvar z = b[2] - a[2]\r\n\t\treturn x * x + y * y + z * z\r\n\t}\r\n\t/**\r\n\t * Calculates the squared length of a vec3\r\n\t *\r\n\t * @param {vec3} a vector to calculate squared length of\r\n\t * @returns {Number} squared length of a\r\n\t */\r\n\r\n\tfunction squaredLength(a) {\r\n\t\tvar x = a[0]\r\n\t\tvar y = a[1]\r\n\t\tvar z = a[2]\r\n\t\treturn x * x + y * y + z * z\r\n\t}\r\n\t/**\r\n\t * Negates the components of a vec3\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a vector to negate\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction negate(out, a) {\r\n\t\tout[0] = -a[0]\r\n\t\tout[1] = -a[1]\r\n\t\tout[2] = -a[2]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns the inverse of the components of a vec3\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a vector to invert\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction inverse(out, a) {\r\n\t\tout[0] = 1.0 / a[0]\r\n\t\tout[1] = 1.0 / a[1]\r\n\t\tout[2] = 1.0 / a[2]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Normalize a vec3\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a vector to normalize\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction normalize(out, a) {\r\n\t\tvar x = a[0]\r\n\t\tvar y = a[1]\r\n\t\tvar z = a[2]\r\n\t\tvar len = x * x + y * y + z * z\r\n\r\n\t\tif (len > 0) {\r\n\t\t\t//TODO: evaluate use of glm_invsqrt here?\r\n\t\t\tlen = 1 / Math.sqrt(len)\r\n\t\t}\r\n\r\n\t\tout[0] = a[0] * len\r\n\t\tout[1] = a[1] * len\r\n\t\tout[2] = a[2] * len\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the dot product of two vec3's\r\n\t *\r\n\t * @param {vec3} a the first operand\r\n\t * @param {vec3} b the second operand\r\n\t * @returns {Number} dot product of a and b\r\n\t */\r\n\r\n\tfunction dot(a, b) {\r\n\t\treturn a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\r\n\t}\r\n\t/**\r\n\t * Computes the cross product of two vec3's\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the first operand\r\n\t * @param {vec3} b the second operand\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction cross(out, a, b) {\r\n\t\tvar ax = a[0],\r\n\t\t\tay = a[1],\r\n\t\t\taz = a[2]\r\n\t\tvar bx = b[0],\r\n\t\t\tby = b[1],\r\n\t\t\tbz = b[2]\r\n\t\tout[0] = ay * bz - az * by\r\n\t\tout[1] = az * bx - ax * bz\r\n\t\tout[2] = ax * by - ay * bx\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Performs a linear interpolation between two vec3's\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the first operand\r\n\t * @param {vec3} b the second operand\r\n\t * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction lerp(out, a, b, t) {\r\n\t\tvar ax = a[0]\r\n\t\tvar ay = a[1]\r\n\t\tvar az = a[2]\r\n\t\tout[0] = ax + t * (b[0] - ax)\r\n\t\tout[1] = ay + t * (b[1] - ay)\r\n\t\tout[2] = az + t * (b[2] - az)\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Performs a hermite interpolation with two control points\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the first operand\r\n\t * @param {vec3} b the second operand\r\n\t * @param {vec3} c the third operand\r\n\t * @param {vec3} d the fourth operand\r\n\t * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction hermite(out, a, b, c, d, t) {\r\n\t\tvar factorTimes2 = t * t\r\n\t\tvar factor1 = factorTimes2 * (2 * t - 3) + 1\r\n\t\tvar factor2 = factorTimes2 * (t - 2) + t\r\n\t\tvar factor3 = factorTimes2 * (t - 1)\r\n\t\tvar factor4 = factorTimes2 * (3 - 2 * t)\r\n\t\tout[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4\r\n\t\tout[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4\r\n\t\tout[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Performs a bezier interpolation with two control points\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the first operand\r\n\t * @param {vec3} b the second operand\r\n\t * @param {vec3} c the third operand\r\n\t * @param {vec3} d the fourth operand\r\n\t * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction bezier(out, a, b, c, d, t) {\r\n\t\tvar inverseFactor = 1 - t\r\n\t\tvar inverseFactorTimesTwo = inverseFactor * inverseFactor\r\n\t\tvar factorTimes2 = t * t\r\n\t\tvar factor1 = inverseFactorTimesTwo * inverseFactor\r\n\t\tvar factor2 = 3 * t * inverseFactorTimesTwo\r\n\t\tvar factor3 = 3 * factorTimes2 * inverseFactor\r\n\t\tvar factor4 = factorTimes2 * t\r\n\t\tout[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4\r\n\t\tout[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4\r\n\t\tout[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Generates a random vector with the given scale\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction random(out, scale) {\r\n\t\tscale = scale || 1.0\r\n\t\tvar r = RANDOM() * 2.0 * Math.PI\r\n\t\tvar z = RANDOM() * 2.0 - 1.0\r\n\t\tvar zScale = Math.sqrt(1.0 - z * z) * scale\r\n\t\tout[0] = Math.cos(r) * zScale\r\n\t\tout[1] = Math.sin(r) * zScale\r\n\t\tout[2] = z * scale\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Transforms the vec3 with a mat4.\r\n\t * 4th vector component is implicitly '1'\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the vector to transform\r\n\t * @param {mat4} m matrix to transform with\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction transformMat4(out, a, m) {\r\n\t\tvar x = a[0],\r\n\t\t\ty = a[1],\r\n\t\t\tz = a[2]\r\n\t\tvar w = m[3] * x + m[7] * y + m[11] * z + m[15]\r\n\t\tw = w || 1.0\r\n\t\tout[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w\r\n\t\tout[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w\r\n\t\tout[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Transforms the vec3 with a mat3.\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the vector to transform\r\n\t * @param {mat3} m the 3x3 matrix to transform with\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction transformMat3(out, a, m) {\r\n\t\tvar x = a[0],\r\n\t\t\ty = a[1],\r\n\t\t\tz = a[2]\r\n\t\tout[0] = x * m[0] + y * m[3] + z * m[6]\r\n\t\tout[1] = x * m[1] + y * m[4] + z * m[7]\r\n\t\tout[2] = x * m[2] + y * m[5] + z * m[8]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Transforms the vec3 with a quat\r\n\t * Can also be used for dual quaternions. (Multiply it with the real part)\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec3} a the vector to transform\r\n\t * @param {quat} q quaternion to transform with\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction transformQuat(out, a, q) {\r\n\t\t// benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n\t\tvar qx = q[0],\r\n\t\t\tqy = q[1],\r\n\t\t\tqz = q[2],\r\n\t\t\tqw = q[3]\r\n\t\tvar x = a[0],\r\n\t\t\ty = a[1],\r\n\t\t\tz = a[2] // var qvec = [qx, qy, qz];\r\n\t\t// var uv = vec3.cross([], qvec, a);\r\n\r\n\t\tvar uvx = qy * z - qz * y,\r\n\t\t\tuvy = qz * x - qx * z,\r\n\t\t\tuvz = qx * y - qy * x // var uuv = vec3.cross([], qvec, uv);\r\n\r\n\t\tvar uuvx = qy * uvz - qz * uvy,\r\n\t\t\tuuvy = qz * uvx - qx * uvz,\r\n\t\t\tuuvz = qx * uvy - qy * uvx // vec3.scale(uv, uv, 2 * w);\r\n\r\n\t\tvar w2 = qw * 2\r\n\t\tuvx *= w2\r\n\t\tuvy *= w2\r\n\t\tuvz *= w2 // vec3.scale(uuv, uuv, 2);\r\n\r\n\t\tuuvx *= 2\r\n\t\tuuvy *= 2\r\n\t\tuuvz *= 2 // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n\r\n\t\tout[0] = x + uvx + uuvx\r\n\t\tout[1] = y + uvy + uuvy\r\n\t\tout[2] = z + uvz + uuvz\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotate a 3D vector around the x-axis\r\n\t * @param {vec3} out The receiving vec3\r\n\t * @param {vec3} a The vec3 point to rotate\r\n\t * @param {vec3} b The origin of the rotation\r\n\t * @param {Number} c The angle of rotation\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction rotateX$1(out, a, b, c) {\r\n\t\tvar p = [],\r\n\t\t\tr = [] //Translate point to the origin\r\n\r\n\t\tp[0] = a[0] - b[0]\r\n\t\tp[1] = a[1] - b[1]\r\n\t\tp[2] = a[2] - b[2] //perform rotation\r\n\r\n\t\tr[0] = p[0]\r\n\t\tr[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c)\r\n\t\tr[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c) //translate to correct position\r\n\r\n\t\tout[0] = r[0] + b[0]\r\n\t\tout[1] = r[1] + b[1]\r\n\t\tout[2] = r[2] + b[2]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotate a 3D vector around the y-axis\r\n\t * @param {vec3} out The receiving vec3\r\n\t * @param {vec3} a The vec3 point to rotate\r\n\t * @param {vec3} b The origin of the rotation\r\n\t * @param {Number} c The angle of rotation\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction rotateY$1(out, a, b, c) {\r\n\t\tvar p = [],\r\n\t\t\tr = [] //Translate point to the origin\r\n\r\n\t\tp[0] = a[0] - b[0]\r\n\t\tp[1] = a[1] - b[1]\r\n\t\tp[2] = a[2] - b[2] //perform rotation\r\n\r\n\t\tr[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c)\r\n\t\tr[1] = p[1]\r\n\t\tr[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c) //translate to correct position\r\n\r\n\t\tout[0] = r[0] + b[0]\r\n\t\tout[1] = r[1] + b[1]\r\n\t\tout[2] = r[2] + b[2]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotate a 3D vector around the z-axis\r\n\t * @param {vec3} out The receiving vec3\r\n\t * @param {vec3} a The vec3 point to rotate\r\n\t * @param {vec3} b The origin of the rotation\r\n\t * @param {Number} c The angle of rotation\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction rotateZ$1(out, a, b, c) {\r\n\t\tvar p = [],\r\n\t\t\tr = [] //Translate point to the origin\r\n\r\n\t\tp[0] = a[0] - b[0]\r\n\t\tp[1] = a[1] - b[1]\r\n\t\tp[2] = a[2] - b[2] //perform rotation\r\n\r\n\t\tr[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c)\r\n\t\tr[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c)\r\n\t\tr[2] = p[2] //translate to correct position\r\n\r\n\t\tout[0] = r[0] + b[0]\r\n\t\tout[1] = r[1] + b[1]\r\n\t\tout[2] = r[2] + b[2]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Get the angle between two 3D vectors\r\n\t * @param {vec3} a The first operand\r\n\t * @param {vec3} b The second operand\r\n\t * @returns {Number} The angle in radians\r\n\t */\r\n\r\n\tfunction angle(a, b) {\r\n\t\tvar tempA = fromValues$4(a[0], a[1], a[2])\r\n\t\tvar tempB = fromValues$4(b[0], b[1], b[2])\r\n\t\tnormalize(tempA, tempA)\r\n\t\tnormalize(tempB, tempB)\r\n\t\tvar cosine = dot(tempA, tempB)\r\n\r\n\t\tif (cosine > 1.0) {\r\n\t\t\treturn 0\r\n\t\t} else if (cosine < -1.0) {\r\n\t\t\treturn Math.PI\r\n\t\t} else {\r\n\t\t\treturn Math.acos(cosine)\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Returns a string representation of a vector\r\n\t *\r\n\t * @param {vec3} a vector to represent as a string\r\n\t * @returns {String} string representation of the vector\r\n\t */\r\n\r\n\tfunction str$4(a) {\r\n\t\treturn 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')'\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n\t *\r\n\t * @param {vec3} a The first vector.\r\n\t * @param {vec3} b The second vector.\r\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction exactEquals$4(a, b) {\r\n\t\treturn a[0] === b[0] && a[1] === b[1] && a[2] === b[2]\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the vectors have approximately the same elements in the same position.\r\n\t *\r\n\t * @param {vec3} a The first vector.\r\n\t * @param {vec3} b The second vector.\r\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction equals$5(a, b) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2]\r\n\t\tvar b0 = b[0],\r\n\t\t\tb1 = b[1],\r\n\t\t\tb2 = b[2]\r\n\t\treturn (\r\n\t\t\tMath.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n\t\t\tMath.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2))\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Alias for {@link vec3.subtract}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sub$4 = subtract$4\r\n\t/**\r\n\t * Alias for {@link vec3.multiply}\r\n\t * @function\r\n\t */\r\n\r\n\tvar mul$4 = multiply$4\r\n\t/**\r\n\t * Alias for {@link vec3.divide}\r\n\t * @function\r\n\t */\r\n\r\n\tvar div = divide\r\n\t/**\r\n\t * Alias for {@link vec3.distance}\r\n\t * @function\r\n\t */\r\n\r\n\tvar dist = distance\r\n\t/**\r\n\t * Alias for {@link vec3.squaredDistance}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sqrDist = squaredDistance\r\n\t/**\r\n\t * Alias for {@link vec3.length}\r\n\t * @function\r\n\t */\r\n\r\n\tvar len = length\r\n\t/**\r\n\t * Alias for {@link vec3.squaredLength}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sqrLen = squaredLength\r\n\t/**\r\n\t * Perform some operation over an array of vec3s.\r\n\t *\r\n\t * @param {Array} a the array of vectors to iterate over\r\n\t * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\r\n\t * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n\t * @param {Function} fn Function to call for each vector in the array\r\n\t * @param {Object} [arg] additional argument to pass to fn\r\n\t * @returns {Array} a\r\n\t * @function\r\n\t */\r\n\r\n\tvar forEach = (function() {\r\n\t\tvar vec = create$4()\r\n\t\treturn function(a, stride, offset, count, fn, arg) {\r\n\t\t\tvar i, l\r\n\r\n\t\t\tif (!stride) {\r\n\t\t\t\tstride = 3\r\n\t\t\t}\r\n\r\n\t\t\tif (!offset) {\r\n\t\t\t\toffset = 0\r\n\t\t\t}\r\n\r\n\t\t\tif (count) {\r\n\t\t\t\tl = Math.min(count * stride + offset, a.length)\r\n\t\t\t} else {\r\n\t\t\t\tl = a.length\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = offset; i < l; i += stride) {\r\n\t\t\t\tvec[0] = a[i]\r\n\t\t\t\tvec[1] = a[i + 1]\r\n\t\t\t\tvec[2] = a[i + 2]\r\n\t\t\t\tfn(vec, vec, arg)\r\n\t\t\t\ta[i] = vec[0]\r\n\t\t\t\ta[i + 1] = vec[1]\r\n\t\t\t\ta[i + 2] = vec[2]\r\n\t\t\t}\r\n\r\n\t\t\treturn a\r\n\t\t}\r\n\t})()\r\n\r\n\tvar vec3 = /*#__PURE__*/ Object.freeze({\r\n\t\tcreate: create$4,\r\n\t\tclone: clone$4,\r\n\t\tlength: length,\r\n\t\tfromValues: fromValues$4,\r\n\t\tcopy: copy$4,\r\n\t\tset: set$4,\r\n\t\tadd: add$4,\r\n\t\tsubtract: subtract$4,\r\n\t\tmultiply: multiply$4,\r\n\t\tdivide: divide,\r\n\t\tceil: ceil,\r\n\t\tfloor: floor,\r\n\t\tmin: min,\r\n\t\tmax: max,\r\n\t\tround: round,\r\n\t\tscale: scale$4,\r\n\t\tscaleAndAdd: scaleAndAdd,\r\n\t\tdistance: distance,\r\n\t\tsquaredDistance: squaredDistance,\r\n\t\tsquaredLength: squaredLength,\r\n\t\tnegate: negate,\r\n\t\tinverse: inverse,\r\n\t\tnormalize: normalize,\r\n\t\tdot: dot,\r\n\t\tcross: cross,\r\n\t\tlerp: lerp,\r\n\t\thermite: hermite,\r\n\t\tbezier: bezier,\r\n\t\trandom: random,\r\n\t\ttransformMat4: transformMat4,\r\n\t\ttransformMat3: transformMat3,\r\n\t\ttransformQuat: transformQuat,\r\n\t\trotateX: rotateX$1,\r\n\t\trotateY: rotateY$1,\r\n\t\trotateZ: rotateZ$1,\r\n\t\tangle: angle,\r\n\t\tstr: str$4,\r\n\t\texactEquals: exactEquals$4,\r\n\t\tequals: equals$5,\r\n\t\tsub: sub$4,\r\n\t\tmul: mul$4,\r\n\t\tdiv: div,\r\n\t\tdist: dist,\r\n\t\tsqrDist: sqrDist,\r\n\t\tlen: len,\r\n\t\tsqrLen: sqrLen,\r\n\t\tforEach: forEach,\r\n\t})\r\n\r\n\t/**\r\n\t * 4 Dimensional Vector\r\n\t * @module vec4\r\n\t */\r\n\r\n\t/**\r\n\t * Creates a new, empty vec4\r\n\t *\r\n\t * @returns {vec4} a new 4D vector\r\n\t */\r\n\r\n\tfunction create$5() {\r\n\t\tvar out = new ARRAY_TYPE(4)\r\n\r\n\t\tif (ARRAY_TYPE != Float32Array) {\r\n\t\t\tout[0] = 0\r\n\t\t\tout[1] = 0\r\n\t\t\tout[2] = 0\r\n\t\t\tout[3] = 0\r\n\t\t}\r\n\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a new vec4 initialized with values from an existing vector\r\n\t *\r\n\t * @param {vec4} a vector to clone\r\n\t * @returns {vec4} a new 4D vector\r\n\t */\r\n\r\n\tfunction clone$5(a) {\r\n\t\tvar out = new ARRAY_TYPE(4)\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = a[2]\r\n\t\tout[3] = a[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a new vec4 initialized with the given values\r\n\t *\r\n\t * @param {Number} x X component\r\n\t * @param {Number} y Y component\r\n\t * @param {Number} z Z component\r\n\t * @param {Number} w W component\r\n\t * @returns {vec4} a new 4D vector\r\n\t */\r\n\r\n\tfunction fromValues$5(x, y, z, w) {\r\n\t\tvar out = new ARRAY_TYPE(4)\r\n\t\tout[0] = x\r\n\t\tout[1] = y\r\n\t\tout[2] = z\r\n\t\tout[3] = w\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Copy the values from one vec4 to another\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a the source vector\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction copy$5(out, a) {\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = a[2]\r\n\t\tout[3] = a[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set the components of a vec4 to the given values\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {Number} x X component\r\n\t * @param {Number} y Y component\r\n\t * @param {Number} z Z component\r\n\t * @param {Number} w W component\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction set$5(out, x, y, z, w) {\r\n\t\tout[0] = x\r\n\t\tout[1] = y\r\n\t\tout[2] = z\r\n\t\tout[3] = w\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Adds two vec4's\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a the first operand\r\n\t * @param {vec4} b the second operand\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction add$5(out, a, b) {\r\n\t\tout[0] = a[0] + b[0]\r\n\t\tout[1] = a[1] + b[1]\r\n\t\tout[2] = a[2] + b[2]\r\n\t\tout[3] = a[3] + b[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Subtracts vector b from vector a\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a the first operand\r\n\t * @param {vec4} b the second operand\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction subtract$5(out, a, b) {\r\n\t\tout[0] = a[0] - b[0]\r\n\t\tout[1] = a[1] - b[1]\r\n\t\tout[2] = a[2] - b[2]\r\n\t\tout[3] = a[3] - b[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Multiplies two vec4's\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a the first operand\r\n\t * @param {vec4} b the second operand\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction multiply$5(out, a, b) {\r\n\t\tout[0] = a[0] * b[0]\r\n\t\tout[1] = a[1] * b[1]\r\n\t\tout[2] = a[2] * b[2]\r\n\t\tout[3] = a[3] * b[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Divides two vec4's\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a the first operand\r\n\t * @param {vec4} b the second operand\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction divide$1(out, a, b) {\r\n\t\tout[0] = a[0] / b[0]\r\n\t\tout[1] = a[1] / b[1]\r\n\t\tout[2] = a[2] / b[2]\r\n\t\tout[3] = a[3] / b[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Math.ceil the components of a vec4\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a vector to ceil\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction ceil$1(out, a) {\r\n\t\tout[0] = Math.ceil(a[0])\r\n\t\tout[1] = Math.ceil(a[1])\r\n\t\tout[2] = Math.ceil(a[2])\r\n\t\tout[3] = Math.ceil(a[3])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Math.floor the components of a vec4\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a vector to floor\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction floor$1(out, a) {\r\n\t\tout[0] = Math.floor(a[0])\r\n\t\tout[1] = Math.floor(a[1])\r\n\t\tout[2] = Math.floor(a[2])\r\n\t\tout[3] = Math.floor(a[3])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns the minimum of two vec4's\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a the first operand\r\n\t * @param {vec4} b the second operand\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction min$1(out, a, b) {\r\n\t\tout[0] = Math.min(a[0], b[0])\r\n\t\tout[1] = Math.min(a[1], b[1])\r\n\t\tout[2] = Math.min(a[2], b[2])\r\n\t\tout[3] = Math.min(a[3], b[3])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns the maximum of two vec4's\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a the first operand\r\n\t * @param {vec4} b the second operand\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction max$1(out, a, b) {\r\n\t\tout[0] = Math.max(a[0], b[0])\r\n\t\tout[1] = Math.max(a[1], b[1])\r\n\t\tout[2] = Math.max(a[2], b[2])\r\n\t\tout[3] = Math.max(a[3], b[3])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Math.round the components of a vec4\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a vector to round\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction round$1(out, a) {\r\n\t\tout[0] = Math.round(a[0])\r\n\t\tout[1] = Math.round(a[1])\r\n\t\tout[2] = Math.round(a[2])\r\n\t\tout[3] = Math.round(a[3])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Scales a vec4 by a scalar number\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a the vector to scale\r\n\t * @param {Number} b amount to scale the vector by\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction scale$5(out, a, b) {\r\n\t\tout[0] = a[0] * b\r\n\t\tout[1] = a[1] * b\r\n\t\tout[2] = a[2] * b\r\n\t\tout[3] = a[3] * b\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Adds two vec4's after scaling the second operand by a scalar value\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a the first operand\r\n\t * @param {vec4} b the second operand\r\n\t * @param {Number} scale the amount to scale b by before adding\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction scaleAndAdd$1(out, a, b, scale) {\r\n\t\tout[0] = a[0] + b[0] * scale\r\n\t\tout[1] = a[1] + b[1] * scale\r\n\t\tout[2] = a[2] + b[2] * scale\r\n\t\tout[3] = a[3] + b[3] * scale\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the euclidian distance between two vec4's\r\n\t *\r\n\t * @param {vec4} a the first operand\r\n\t * @param {vec4} b the second operand\r\n\t * @returns {Number} distance between a and b\r\n\t */\r\n\r\n\tfunction distance$1(a, b) {\r\n\t\tvar x = b[0] - a[0]\r\n\t\tvar y = b[1] - a[1]\r\n\t\tvar z = b[2] - a[2]\r\n\t\tvar w = b[3] - a[3]\r\n\t\treturn Math.sqrt(x * x + y * y + z * z + w * w)\r\n\t}\r\n\t/**\r\n\t * Calculates the squared euclidian distance between two vec4's\r\n\t *\r\n\t * @param {vec4} a the first operand\r\n\t * @param {vec4} b the second operand\r\n\t * @returns {Number} squared distance between a and b\r\n\t */\r\n\r\n\tfunction squaredDistance$1(a, b) {\r\n\t\tvar x = b[0] - a[0]\r\n\t\tvar y = b[1] - a[1]\r\n\t\tvar z = b[2] - a[2]\r\n\t\tvar w = b[3] - a[3]\r\n\t\treturn x * x + y * y + z * z + w * w\r\n\t}\r\n\t/**\r\n\t * Calculates the length of a vec4\r\n\t *\r\n\t * @param {vec4} a vector to calculate length of\r\n\t * @returns {Number} length of a\r\n\t */\r\n\r\n\tfunction length$1(a) {\r\n\t\tvar x = a[0]\r\n\t\tvar y = a[1]\r\n\t\tvar z = a[2]\r\n\t\tvar w = a[3]\r\n\t\treturn Math.sqrt(x * x + y * y + z * z + w * w)\r\n\t}\r\n\t/**\r\n\t * Calculates the squared length of a vec4\r\n\t *\r\n\t * @param {vec4} a vector to calculate squared length of\r\n\t * @returns {Number} squared length of a\r\n\t */\r\n\r\n\tfunction squaredLength$1(a) {\r\n\t\tvar x = a[0]\r\n\t\tvar y = a[1]\r\n\t\tvar z = a[2]\r\n\t\tvar w = a[3]\r\n\t\treturn x * x + y * y + z * z + w * w\r\n\t}\r\n\t/**\r\n\t * Negates the components of a vec4\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a vector to negate\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction negate$1(out, a) {\r\n\t\tout[0] = -a[0]\r\n\t\tout[1] = -a[1]\r\n\t\tout[2] = -a[2]\r\n\t\tout[3] = -a[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns the inverse of the components of a vec4\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a vector to invert\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction inverse$1(out, a) {\r\n\t\tout[0] = 1.0 / a[0]\r\n\t\tout[1] = 1.0 / a[1]\r\n\t\tout[2] = 1.0 / a[2]\r\n\t\tout[3] = 1.0 / a[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Normalize a vec4\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a vector to normalize\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction normalize$1(out, a) {\r\n\t\tvar x = a[0]\r\n\t\tvar y = a[1]\r\n\t\tvar z = a[2]\r\n\t\tvar w = a[3]\r\n\t\tvar len = x * x + y * y + z * z + w * w\r\n\r\n\t\tif (len > 0) {\r\n\t\t\tlen = 1 / Math.sqrt(len)\r\n\t\t}\r\n\r\n\t\tout[0] = x * len\r\n\t\tout[1] = y * len\r\n\t\tout[2] = z * len\r\n\t\tout[3] = w * len\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the dot product of two vec4's\r\n\t *\r\n\t * @param {vec4} a the first operand\r\n\t * @param {vec4} b the second operand\r\n\t * @returns {Number} dot product of a and b\r\n\t */\r\n\r\n\tfunction dot$1(a, b) {\r\n\t\treturn a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3]\r\n\t}\r\n\t/**\r\n\t * Performs a linear interpolation between two vec4's\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a the first operand\r\n\t * @param {vec4} b the second operand\r\n\t * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction lerp$1(out, a, b, t) {\r\n\t\tvar ax = a[0]\r\n\t\tvar ay = a[1]\r\n\t\tvar az = a[2]\r\n\t\tvar aw = a[3]\r\n\t\tout[0] = ax + t * (b[0] - ax)\r\n\t\tout[1] = ay + t * (b[1] - ay)\r\n\t\tout[2] = az + t * (b[2] - az)\r\n\t\tout[3] = aw + t * (b[3] - aw)\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Generates a random vector with the given scale\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction random$1(out, scale) {\r\n\t\tscale = scale || 1.0 // Marsaglia, George. Choosing a Point from the Surface of a\r\n\t\t// Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n\t\t// http://projecteuclid.org/euclid.aoms/1177692644;\r\n\r\n\t\tvar v1, v2, v3, v4\r\n\t\tvar s1, s2\r\n\r\n\t\tdo {\r\n\t\t\tv1 = RANDOM() * 2 - 1\r\n\t\t\tv2 = RANDOM() * 2 - 1\r\n\t\t\ts1 = v1 * v1 + v2 * v2\r\n\t\t} while (s1 >= 1)\r\n\r\n\t\tdo {\r\n\t\t\tv3 = RANDOM() * 2 - 1\r\n\t\t\tv4 = RANDOM() * 2 - 1\r\n\t\t\ts2 = v3 * v3 + v4 * v4\r\n\t\t} while (s2 >= 1)\r\n\r\n\t\tvar d = Math.sqrt((1 - s1) / s2)\r\n\t\tout[0] = scale * v1\r\n\t\tout[1] = scale * v2\r\n\t\tout[2] = scale * v3 * d\r\n\t\tout[3] = scale * v4 * d\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Transforms the vec4 with a mat4.\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a the vector to transform\r\n\t * @param {mat4} m matrix to transform with\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction transformMat4$1(out, a, m) {\r\n\t\tvar x = a[0],\r\n\t\t\ty = a[1],\r\n\t\t\tz = a[2],\r\n\t\t\tw = a[3]\r\n\t\tout[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w\r\n\t\tout[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w\r\n\t\tout[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w\r\n\t\tout[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Transforms the vec4 with a quat\r\n\t *\r\n\t * @param {vec4} out the receiving vector\r\n\t * @param {vec4} a the vector to transform\r\n\t * @param {quat} q quaternion to transform with\r\n\t * @returns {vec4} out\r\n\t */\r\n\r\n\tfunction transformQuat$1(out, a, q) {\r\n\t\tvar x = a[0],\r\n\t\t\ty = a[1],\r\n\t\t\tz = a[2]\r\n\t\tvar qx = q[0],\r\n\t\t\tqy = q[1],\r\n\t\t\tqz = q[2],\r\n\t\t\tqw = q[3] // calculate quat * vec\r\n\r\n\t\tvar ix = qw * x + qy * z - qz * y\r\n\t\tvar iy = qw * y + qz * x - qx * z\r\n\t\tvar iz = qw * z + qx * y - qy * x\r\n\t\tvar iw = -qx * x - qy * y - qz * z // calculate result * inverse quat\r\n\r\n\t\tout[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy\r\n\t\tout[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz\r\n\t\tout[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx\r\n\t\tout[3] = a[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns a string representation of a vector\r\n\t *\r\n\t * @param {vec4} a vector to represent as a string\r\n\t * @returns {String} string representation of the vector\r\n\t */\r\n\r\n\tfunction str$5(a) {\r\n\t\treturn 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')'\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n\t *\r\n\t * @param {vec4} a The first vector.\r\n\t * @param {vec4} b The second vector.\r\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction exactEquals$5(a, b) {\r\n\t\treturn a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3]\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the vectors have approximately the same elements in the same position.\r\n\t *\r\n\t * @param {vec4} a The first vector.\r\n\t * @param {vec4} b The second vector.\r\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction equals$6(a, b) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3]\r\n\t\tvar b0 = b[0],\r\n\t\t\tb1 = b[1],\r\n\t\t\tb2 = b[2],\r\n\t\t\tb3 = b[3]\r\n\t\treturn (\r\n\t\t\tMath.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n\t\t\tMath.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n\t\t\tMath.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3))\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Alias for {@link vec4.subtract}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sub$5 = subtract$5\r\n\t/**\r\n\t * Alias for {@link vec4.multiply}\r\n\t * @function\r\n\t */\r\n\r\n\tvar mul$5 = multiply$5\r\n\t/**\r\n\t * Alias for {@link vec4.divide}\r\n\t * @function\r\n\t */\r\n\r\n\tvar div$1 = divide$1\r\n\t/**\r\n\t * Alias for {@link vec4.distance}\r\n\t * @function\r\n\t */\r\n\r\n\tvar dist$1 = distance$1\r\n\t/**\r\n\t * Alias for {@link vec4.squaredDistance}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sqrDist$1 = squaredDistance$1\r\n\t/**\r\n\t * Alias for {@link vec4.length}\r\n\t * @function\r\n\t */\r\n\r\n\tvar len$1 = length$1\r\n\t/**\r\n\t * Alias for {@link vec4.squaredLength}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sqrLen$1 = squaredLength$1\r\n\t/**\r\n\t * Perform some operation over an array of vec4s.\r\n\t *\r\n\t * @param {Array} a the array of vectors to iterate over\r\n\t * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\r\n\t * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n\t * @param {Function} fn Function to call for each vector in the array\r\n\t * @param {Object} [arg] additional argument to pass to fn\r\n\t * @returns {Array} a\r\n\t * @function\r\n\t */\r\n\r\n\tvar forEach$1 = (function() {\r\n\t\tvar vec = create$5()\r\n\t\treturn function(a, stride, offset, count, fn, arg) {\r\n\t\t\tvar i, l\r\n\r\n\t\t\tif (!stride) {\r\n\t\t\t\tstride = 4\r\n\t\t\t}\r\n\r\n\t\t\tif (!offset) {\r\n\t\t\t\toffset = 0\r\n\t\t\t}\r\n\r\n\t\t\tif (count) {\r\n\t\t\t\tl = Math.min(count * stride + offset, a.length)\r\n\t\t\t} else {\r\n\t\t\t\tl = a.length\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = offset; i < l; i += stride) {\r\n\t\t\t\tvec[0] = a[i]\r\n\t\t\t\tvec[1] = a[i + 1]\r\n\t\t\t\tvec[2] = a[i + 2]\r\n\t\t\t\tvec[3] = a[i + 3]\r\n\t\t\t\tfn(vec, vec, arg)\r\n\t\t\t\ta[i] = vec[0]\r\n\t\t\t\ta[i + 1] = vec[1]\r\n\t\t\t\ta[i + 2] = vec[2]\r\n\t\t\t\ta[i + 3] = vec[3]\r\n\t\t\t}\r\n\r\n\t\t\treturn a\r\n\t\t}\r\n\t})()\r\n\r\n\tvar vec4 = /*#__PURE__*/ Object.freeze({\r\n\t\tcreate: create$5,\r\n\t\tclone: clone$5,\r\n\t\tfromValues: fromValues$5,\r\n\t\tcopy: copy$5,\r\n\t\tset: set$5,\r\n\t\tadd: add$5,\r\n\t\tsubtract: subtract$5,\r\n\t\tmultiply: multiply$5,\r\n\t\tdivide: divide$1,\r\n\t\tceil: ceil$1,\r\n\t\tfloor: floor$1,\r\n\t\tmin: min$1,\r\n\t\tmax: max$1,\r\n\t\tround: round$1,\r\n\t\tscale: scale$5,\r\n\t\tscaleAndAdd: scaleAndAdd$1,\r\n\t\tdistance: distance$1,\r\n\t\tsquaredDistance: squaredDistance$1,\r\n\t\tlength: length$1,\r\n\t\tsquaredLength: squaredLength$1,\r\n\t\tnegate: negate$1,\r\n\t\tinverse: inverse$1,\r\n\t\tnormalize: normalize$1,\r\n\t\tdot: dot$1,\r\n\t\tlerp: lerp$1,\r\n\t\trandom: random$1,\r\n\t\ttransformMat4: transformMat4$1,\r\n\t\ttransformQuat: transformQuat$1,\r\n\t\tstr: str$5,\r\n\t\texactEquals: exactEquals$5,\r\n\t\tequals: equals$6,\r\n\t\tsub: sub$5,\r\n\t\tmul: mul$5,\r\n\t\tdiv: div$1,\r\n\t\tdist: dist$1,\r\n\t\tsqrDist: sqrDist$1,\r\n\t\tlen: len$1,\r\n\t\tsqrLen: sqrLen$1,\r\n\t\tforEach: forEach$1,\r\n\t})\r\n\r\n\t/**\r\n\t * Quaternion\r\n\t * @module quat\r\n\t */\r\n\r\n\t/**\r\n\t * Creates a new identity quat\r\n\t *\r\n\t * @returns {quat} a new quaternion\r\n\t */\r\n\r\n\tfunction create$6() {\r\n\t\tvar out = new ARRAY_TYPE(4)\r\n\r\n\t\tif (ARRAY_TYPE != Float32Array) {\r\n\t\t\tout[0] = 0\r\n\t\t\tout[1] = 0\r\n\t\t\tout[2] = 0\r\n\t\t}\r\n\r\n\t\tout[3] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set a quat to the identity quaternion\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @returns {quat} out\r\n\t */\r\n\r\n\tfunction identity$4(out) {\r\n\t\tout[0] = 0\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 1\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Sets a quat from the given angle and rotation axis,\r\n\t * then returns it.\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @param {vec3} axis the axis around which to rotate\r\n\t * @param {Number} rad the angle in radians\r\n\t * @returns {quat} out\r\n\t **/\r\n\r\n\tfunction setAxisAngle(out, axis, rad) {\r\n\t\trad = rad * 0.5\r\n\t\tvar s = Math.sin(rad)\r\n\t\tout[0] = s * axis[0]\r\n\t\tout[1] = s * axis[1]\r\n\t\tout[2] = s * axis[2]\r\n\t\tout[3] = Math.cos(rad)\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Gets the rotation axis and angle for a given\r\n\t *  quaternion. If a quaternion is created with\r\n\t *  setAxisAngle, this method will return the same\r\n\t *  values as providied in the original parameter list\r\n\t *  OR functionally equivalent values.\r\n\t * Example: The quaternion formed by axis [0, 0, 1] and\r\n\t *  angle -90 is the same as the quaternion formed by\r\n\t *  [0, 0, 1] and 270. This method favors the latter.\r\n\t * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n\t * @param  {quat} q     Quaternion to be decomposed\r\n\t * @return {Number}     Angle, in radians, of the rotation\r\n\t */\r\n\r\n\tfunction getAxisAngle(out_axis, q) {\r\n\t\tvar rad = Math.acos(q[3]) * 2.0\r\n\t\tvar s = Math.sin(rad / 2.0)\r\n\r\n\t\tif (s > EPSILON) {\r\n\t\t\tout_axis[0] = q[0] / s\r\n\t\t\tout_axis[1] = q[1] / s\r\n\t\t\tout_axis[2] = q[2] / s\r\n\t\t} else {\r\n\t\t\t// If s is zero, return any axis (no rotation - axis does not matter)\r\n\t\t\tout_axis[0] = 1\r\n\t\t\tout_axis[1] = 0\r\n\t\t\tout_axis[2] = 0\r\n\t\t}\r\n\r\n\t\treturn rad\r\n\t}\r\n\t/**\r\n\t * Multiplies two quat's\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @param {quat} a the first operand\r\n\t * @param {quat} b the second operand\r\n\t * @returns {quat} out\r\n\t */\r\n\r\n\tfunction multiply$6(out, a, b) {\r\n\t\tvar ax = a[0],\r\n\t\t\tay = a[1],\r\n\t\t\taz = a[2],\r\n\t\t\taw = a[3]\r\n\t\tvar bx = b[0],\r\n\t\t\tby = b[1],\r\n\t\t\tbz = b[2],\r\n\t\t\tbw = b[3]\r\n\t\tout[0] = ax * bw + aw * bx + ay * bz - az * by\r\n\t\tout[1] = ay * bw + aw * by + az * bx - ax * bz\r\n\t\tout[2] = az * bw + aw * bz + ax * by - ay * bx\r\n\t\tout[3] = aw * bw - ax * bx - ay * by - az * bz\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a quaternion by the given angle about the X axis\r\n\t *\r\n\t * @param {quat} out quat receiving operation result\r\n\t * @param {quat} a quat to rotate\r\n\t * @param {number} rad angle (in radians) to rotate\r\n\t * @returns {quat} out\r\n\t */\r\n\r\n\tfunction rotateX$2(out, a, rad) {\r\n\t\trad *= 0.5\r\n\t\tvar ax = a[0],\r\n\t\t\tay = a[1],\r\n\t\t\taz = a[2],\r\n\t\t\taw = a[3]\r\n\t\tvar bx = Math.sin(rad),\r\n\t\t\tbw = Math.cos(rad)\r\n\t\tout[0] = ax * bw + aw * bx\r\n\t\tout[1] = ay * bw + az * bx\r\n\t\tout[2] = az * bw - ay * bx\r\n\t\tout[3] = aw * bw - ax * bx\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a quaternion by the given angle about the Y axis\r\n\t *\r\n\t * @param {quat} out quat receiving operation result\r\n\t * @param {quat} a quat to rotate\r\n\t * @param {number} rad angle (in radians) to rotate\r\n\t * @returns {quat} out\r\n\t */\r\n\r\n\tfunction rotateY$2(out, a, rad) {\r\n\t\trad *= 0.5\r\n\t\tvar ax = a[0],\r\n\t\t\tay = a[1],\r\n\t\t\taz = a[2],\r\n\t\t\taw = a[3]\r\n\t\tvar by = Math.sin(rad),\r\n\t\t\tbw = Math.cos(rad)\r\n\t\tout[0] = ax * bw - az * by\r\n\t\tout[1] = ay * bw + aw * by\r\n\t\tout[2] = az * bw + ax * by\r\n\t\tout[3] = aw * bw - ay * by\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a quaternion by the given angle about the Z axis\r\n\t *\r\n\t * @param {quat} out quat receiving operation result\r\n\t * @param {quat} a quat to rotate\r\n\t * @param {number} rad angle (in radians) to rotate\r\n\t * @returns {quat} out\r\n\t */\r\n\r\n\tfunction rotateZ$2(out, a, rad) {\r\n\t\trad *= 0.5\r\n\t\tvar ax = a[0],\r\n\t\t\tay = a[1],\r\n\t\t\taz = a[2],\r\n\t\t\taw = a[3]\r\n\t\tvar bz = Math.sin(rad),\r\n\t\t\tbw = Math.cos(rad)\r\n\t\tout[0] = ax * bw + ay * bz\r\n\t\tout[1] = ay * bw - ax * bz\r\n\t\tout[2] = az * bw + aw * bz\r\n\t\tout[3] = aw * bw - az * bz\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the W component of a quat from the X, Y, and Z components.\r\n\t * Assumes that quaternion is 1 unit in length.\r\n\t * Any existing W component will be ignored.\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @param {quat} a quat to calculate W component of\r\n\t * @returns {quat} out\r\n\t */\r\n\r\n\tfunction calculateW(out, a) {\r\n\t\tvar x = a[0],\r\n\t\t\ty = a[1],\r\n\t\t\tz = a[2]\r\n\t\tout[0] = x\r\n\t\tout[1] = y\r\n\t\tout[2] = z\r\n\t\tout[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z))\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Performs a spherical linear interpolation between two quat\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @param {quat} a the first operand\r\n\t * @param {quat} b the second operand\r\n\t * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n\t * @returns {quat} out\r\n\t */\r\n\r\n\tfunction slerp(out, a, b, t) {\r\n\t\t// benchmarks:\r\n\t\t//    http://jsperf.com/quaternion-slerp-implementations\r\n\t\tvar ax = a[0],\r\n\t\t\tay = a[1],\r\n\t\t\taz = a[2],\r\n\t\t\taw = a[3]\r\n\t\tvar bx = b[0],\r\n\t\t\tby = b[1],\r\n\t\t\tbz = b[2],\r\n\t\t\tbw = b[3]\r\n\t\tvar omega, cosom, sinom, scale0, scale1 // calc cosine\r\n\r\n\t\tcosom = ax * bx + ay * by + az * bz + aw * bw // adjust signs (if necessary)\r\n\r\n\t\tif (cosom < 0.0) {\r\n\t\t\tcosom = -cosom\r\n\t\t\tbx = -bx\r\n\t\t\tby = -by\r\n\t\t\tbz = -bz\r\n\t\t\tbw = -bw\r\n\t\t} // calculate coefficients\r\n\r\n\t\tif (1.0 - cosom > EPSILON) {\r\n\t\t\t// standard case (slerp)\r\n\t\t\tomega = Math.acos(cosom)\r\n\t\t\tsinom = Math.sin(omega)\r\n\t\t\tscale0 = Math.sin((1.0 - t) * omega) / sinom\r\n\t\t\tscale1 = Math.sin(t * omega) / sinom\r\n\t\t} else {\r\n\t\t\t// \"from\" and \"to\" quaternions are very close\r\n\t\t\t//  ... so we can do a linear interpolation\r\n\t\t\tscale0 = 1.0 - t\r\n\t\t\tscale1 = t\r\n\t\t} // calculate final values\r\n\r\n\t\tout[0] = scale0 * ax + scale1 * bx\r\n\t\tout[1] = scale0 * ay + scale1 * by\r\n\t\tout[2] = scale0 * az + scale1 * bz\r\n\t\tout[3] = scale0 * aw + scale1 * bw\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Generates a random quaternion\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @returns {quat} out\r\n\t */\r\n\r\n\tfunction random$2(out) {\r\n\t\t// Implementation of http://planning.cs.uiuc.edu/node198.html\r\n\t\t// TODO: Calling random 3 times is probably not the fastest solution\r\n\t\tvar u1 = RANDOM()\r\n\t\tvar u2 = RANDOM()\r\n\t\tvar u3 = RANDOM()\r\n\t\tvar sqrt1MinusU1 = Math.sqrt(1 - u1)\r\n\t\tvar sqrtU1 = Math.sqrt(u1)\r\n\t\tout[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2)\r\n\t\tout[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2)\r\n\t\tout[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3)\r\n\t\tout[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3)\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the inverse of a quat\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @param {quat} a quat to calculate inverse of\r\n\t * @returns {quat} out\r\n\t */\r\n\r\n\tfunction invert$4(out, a) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3]\r\n\t\tvar dot$$1 = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3\r\n\t\tvar invDot = dot$$1 ? 1.0 / dot$$1 : 0 // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n\t\tout[0] = -a0 * invDot\r\n\t\tout[1] = -a1 * invDot\r\n\t\tout[2] = -a2 * invDot\r\n\t\tout[3] = a3 * invDot\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the conjugate of a quat\r\n\t * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @param {quat} a quat to calculate conjugate of\r\n\t * @returns {quat} out\r\n\t */\r\n\r\n\tfunction conjugate(out, a) {\r\n\t\tout[0] = -a[0]\r\n\t\tout[1] = -a[1]\r\n\t\tout[2] = -a[2]\r\n\t\tout[3] = a[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a quaternion from the given 3x3 rotation matrix.\r\n\t *\r\n\t * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n\t * to renormalize the quaternion yourself where necessary.\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @param {mat3} m rotation matrix\r\n\t * @returns {quat} out\r\n\t * @function\r\n\t */\r\n\r\n\tfunction fromMat3(out, m) {\r\n\t\t// Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n\t\t// article \"Quaternion Calculus and Fast Animation\".\r\n\t\tvar fTrace = m[0] + m[4] + m[8]\r\n\t\tvar fRoot\r\n\r\n\t\tif (fTrace > 0.0) {\r\n\t\t\t// |w| > 1/2, may as well choose w > 1/2\r\n\t\t\tfRoot = Math.sqrt(fTrace + 1.0) // 2w\r\n\r\n\t\t\tout[3] = 0.5 * fRoot\r\n\t\t\tfRoot = 0.5 / fRoot // 1/(4w)\r\n\r\n\t\t\tout[0] = (m[5] - m[7]) * fRoot\r\n\t\t\tout[1] = (m[6] - m[2]) * fRoot\r\n\t\t\tout[2] = (m[1] - m[3]) * fRoot\r\n\t\t} else {\r\n\t\t\t// |w| <= 1/2\r\n\t\t\tvar i = 0\r\n\t\t\tif (m[4] > m[0]) i = 1\r\n\t\t\tif (m[8] > m[i * 3 + i]) i = 2\r\n\t\t\tvar j = (i + 1) % 3\r\n\t\t\tvar k = (i + 2) % 3\r\n\t\t\tfRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0)\r\n\t\t\tout[i] = 0.5 * fRoot\r\n\t\t\tfRoot = 0.5 / fRoot\r\n\t\t\tout[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot\r\n\t\t\tout[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot\r\n\t\t\tout[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot\r\n\t\t}\r\n\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a quaternion from the given euler angle x, y, z.\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @param {x} Angle to rotate around X axis in degrees.\r\n\t * @param {y} Angle to rotate around Y axis in degrees.\r\n\t * @param {z} Angle to rotate around Z axis in degrees.\r\n\t * @returns {quat} out\r\n\t * @function\r\n\t */\r\n\r\n\tfunction fromEuler(out, x, y, z) {\r\n\t\tvar halfToRad = (0.5 * Math.PI) / 180.0\r\n\t\tx *= halfToRad\r\n\t\ty *= halfToRad\r\n\t\tz *= halfToRad\r\n\t\tvar sx = Math.sin(x)\r\n\t\tvar cx = Math.cos(x)\r\n\t\tvar sy = Math.sin(y)\r\n\t\tvar cy = Math.cos(y)\r\n\t\tvar sz = Math.sin(z)\r\n\t\tvar cz = Math.cos(z)\r\n\t\tout[0] = sx * cy * cz - cx * sy * sz\r\n\t\tout[1] = cx * sy * cz + sx * cy * sz\r\n\t\tout[2] = cx * cy * sz - sx * sy * cz\r\n\t\tout[3] = cx * cy * cz + sx * sy * sz\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns a string representation of a quatenion\r\n\t *\r\n\t * @param {quat} a vector to represent as a string\r\n\t * @returns {String} string representation of the vector\r\n\t */\r\n\r\n\tfunction str$6(a) {\r\n\t\treturn 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')'\r\n\t}\r\n\t/**\r\n\t * Creates a new quat initialized with values from an existing quaternion\r\n\t *\r\n\t * @param {quat} a quaternion to clone\r\n\t * @returns {quat} a new quaternion\r\n\t * @function\r\n\t */\r\n\r\n\tvar clone$6 = clone$5\r\n\t/**\r\n\t * Creates a new quat initialized with the given values\r\n\t *\r\n\t * @param {Number} x X component\r\n\t * @param {Number} y Y component\r\n\t * @param {Number} z Z component\r\n\t * @param {Number} w W component\r\n\t * @returns {quat} a new quaternion\r\n\t * @function\r\n\t */\r\n\r\n\tvar fromValues$6 = fromValues$5\r\n\t/**\r\n\t * Copy the values from one quat to another\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @param {quat} a the source quaternion\r\n\t * @returns {quat} out\r\n\t * @function\r\n\t */\r\n\r\n\tvar copy$6 = copy$5\r\n\t/**\r\n\t * Set the components of a quat to the given values\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @param {Number} x X component\r\n\t * @param {Number} y Y component\r\n\t * @param {Number} z Z component\r\n\t * @param {Number} w W component\r\n\t * @returns {quat} out\r\n\t * @function\r\n\t */\r\n\r\n\tvar set$6 = set$5\r\n\t/**\r\n\t * Adds two quat's\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @param {quat} a the first operand\r\n\t * @param {quat} b the second operand\r\n\t * @returns {quat} out\r\n\t * @function\r\n\t */\r\n\r\n\tvar add$6 = add$5\r\n\t/**\r\n\t * Alias for {@link quat.multiply}\r\n\t * @function\r\n\t */\r\n\r\n\tvar mul$6 = multiply$6\r\n\t/**\r\n\t * Scales a quat by a scalar number\r\n\t *\r\n\t * @param {quat} out the receiving vector\r\n\t * @param {quat} a the vector to scale\r\n\t * @param {Number} b amount to scale the vector by\r\n\t * @returns {quat} out\r\n\t * @function\r\n\t */\r\n\r\n\tvar scale$6 = scale$5\r\n\t/**\r\n\t * Calculates the dot product of two quat's\r\n\t *\r\n\t * @param {quat} a the first operand\r\n\t * @param {quat} b the second operand\r\n\t * @returns {Number} dot product of a and b\r\n\t * @function\r\n\t */\r\n\r\n\tvar dot$2 = dot$1\r\n\t/**\r\n\t * Performs a linear interpolation between two quat's\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @param {quat} a the first operand\r\n\t * @param {quat} b the second operand\r\n\t * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n\t * @returns {quat} out\r\n\t * @function\r\n\t */\r\n\r\n\tvar lerp$2 = lerp$1\r\n\t/**\r\n\t * Calculates the length of a quat\r\n\t *\r\n\t * @param {quat} a vector to calculate length of\r\n\t * @returns {Number} length of a\r\n\t */\r\n\r\n\tvar length$2 = length$1\r\n\t/**\r\n\t * Alias for {@link quat.length}\r\n\t * @function\r\n\t */\r\n\r\n\tvar len$2 = length$2\r\n\t/**\r\n\t * Calculates the squared length of a quat\r\n\t *\r\n\t * @param {quat} a vector to calculate squared length of\r\n\t * @returns {Number} squared length of a\r\n\t * @function\r\n\t */\r\n\r\n\tvar squaredLength$2 = squaredLength$1\r\n\t/**\r\n\t * Alias for {@link quat.squaredLength}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sqrLen$2 = squaredLength$2\r\n\t/**\r\n\t * Normalize a quat\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @param {quat} a quaternion to normalize\r\n\t * @returns {quat} out\r\n\t * @function\r\n\t */\r\n\r\n\tvar normalize$2 = normalize$1\r\n\t/**\r\n\t * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n\t *\r\n\t * @param {quat} a The first quaternion.\r\n\t * @param {quat} b The second quaternion.\r\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n\t */\r\n\r\n\tvar exactEquals$6 = exactEquals$5\r\n\t/**\r\n\t * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n\t *\r\n\t * @param {quat} a The first vector.\r\n\t * @param {quat} b The second vector.\r\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n\t */\r\n\r\n\tvar equals$7 = equals$6\r\n\t/**\r\n\t * Sets a quaternion to represent the shortest rotation from one\r\n\t * vector to another.\r\n\t *\r\n\t * Both vectors are assumed to be unit length.\r\n\t *\r\n\t * @param {quat} out the receiving quaternion.\r\n\t * @param {vec3} a the initial vector\r\n\t * @param {vec3} b the destination vector\r\n\t * @returns {quat} out\r\n\t */\r\n\r\n\tvar rotationTo = (function() {\r\n\t\tvar tmpvec3 = create$4()\r\n\t\tvar xUnitVec3 = fromValues$4(1, 0, 0)\r\n\t\tvar yUnitVec3 = fromValues$4(0, 1, 0)\r\n\t\treturn function(out, a, b) {\r\n\t\t\tvar dot$$1 = dot(a, b)\r\n\r\n\t\t\tif (dot$$1 < -0.999999) {\r\n\t\t\t\tcross(tmpvec3, xUnitVec3, a)\r\n\t\t\t\tif (len(tmpvec3) < 0.000001) cross(tmpvec3, yUnitVec3, a)\r\n\t\t\t\tnormalize(tmpvec3, tmpvec3)\r\n\t\t\t\tsetAxisAngle(out, tmpvec3, Math.PI)\r\n\t\t\t\treturn out\r\n\t\t\t} else if (dot$$1 > 0.999999) {\r\n\t\t\t\tout[0] = 0\r\n\t\t\t\tout[1] = 0\r\n\t\t\t\tout[2] = 0\r\n\t\t\t\tout[3] = 1\r\n\t\t\t\treturn out\r\n\t\t\t} else {\r\n\t\t\t\tcross(tmpvec3, a, b)\r\n\t\t\t\tout[0] = tmpvec3[0]\r\n\t\t\t\tout[1] = tmpvec3[1]\r\n\t\t\t\tout[2] = tmpvec3[2]\r\n\t\t\t\tout[3] = 1 + dot$$1\r\n\t\t\t\treturn normalize$2(out, out)\r\n\t\t\t}\r\n\t\t}\r\n\t})()\r\n\t/**\r\n\t * Performs a spherical linear interpolation with two control points\r\n\t *\r\n\t * @param {quat} out the receiving quaternion\r\n\t * @param {quat} a the first operand\r\n\t * @param {quat} b the second operand\r\n\t * @param {quat} c the third operand\r\n\t * @param {quat} d the fourth operand\r\n\t * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n\t * @returns {quat} out\r\n\t */\r\n\r\n\tvar sqlerp = (function() {\r\n\t\tvar temp1 = create$6()\r\n\t\tvar temp2 = create$6()\r\n\t\treturn function(out, a, b, c, d, t) {\r\n\t\t\tslerp(temp1, a, d, t)\r\n\t\t\tslerp(temp2, b, c, t)\r\n\t\t\tslerp(out, temp1, temp2, 2 * t * (1 - t))\r\n\t\t\treturn out\r\n\t\t}\r\n\t})()\r\n\t/**\r\n\t * Sets the specified quaternion with values corresponding to the given\r\n\t * axes. Each axis is a vec3 and is expected to be unit length and\r\n\t * perpendicular to all other specified axes.\r\n\t *\r\n\t * @param {vec3} view  the vector representing the viewing direction\r\n\t * @param {vec3} right the vector representing the local \"right\" direction\r\n\t * @param {vec3} up    the vector representing the local \"up\" direction\r\n\t * @returns {quat} out\r\n\t */\r\n\r\n\tvar setAxes = (function() {\r\n\t\tvar matr = create$2()\r\n\t\treturn function(out, view, right, up) {\r\n\t\t\tmatr[0] = right[0]\r\n\t\t\tmatr[3] = right[1]\r\n\t\t\tmatr[6] = right[2]\r\n\t\t\tmatr[1] = up[0]\r\n\t\t\tmatr[4] = up[1]\r\n\t\t\tmatr[7] = up[2]\r\n\t\t\tmatr[2] = -view[0]\r\n\t\t\tmatr[5] = -view[1]\r\n\t\t\tmatr[8] = -view[2]\r\n\t\t\treturn normalize$2(out, fromMat3(out, matr))\r\n\t\t}\r\n\t})()\r\n\r\n\tvar quat = /*#__PURE__*/ Object.freeze({\r\n\t\tcreate: create$6,\r\n\t\tidentity: identity$4,\r\n\t\tsetAxisAngle: setAxisAngle,\r\n\t\tgetAxisAngle: getAxisAngle,\r\n\t\tmultiply: multiply$6,\r\n\t\trotateX: rotateX$2,\r\n\t\trotateY: rotateY$2,\r\n\t\trotateZ: rotateZ$2,\r\n\t\tcalculateW: calculateW,\r\n\t\tslerp: slerp,\r\n\t\trandom: random$2,\r\n\t\tinvert: invert$4,\r\n\t\tconjugate: conjugate,\r\n\t\tfromMat3: fromMat3,\r\n\t\tfromEuler: fromEuler,\r\n\t\tstr: str$6,\r\n\t\tclone: clone$6,\r\n\t\tfromValues: fromValues$6,\r\n\t\tcopy: copy$6,\r\n\t\tset: set$6,\r\n\t\tadd: add$6,\r\n\t\tmul: mul$6,\r\n\t\tscale: scale$6,\r\n\t\tdot: dot$2,\r\n\t\tlerp: lerp$2,\r\n\t\tlength: length$2,\r\n\t\tlen: len$2,\r\n\t\tsquaredLength: squaredLength$2,\r\n\t\tsqrLen: sqrLen$2,\r\n\t\tnormalize: normalize$2,\r\n\t\texactEquals: exactEquals$6,\r\n\t\tequals: equals$7,\r\n\t\trotationTo: rotationTo,\r\n\t\tsqlerp: sqlerp,\r\n\t\tsetAxes: setAxes,\r\n\t})\r\n\r\n\t/**\r\n\t * Dual Quaternion<br>\r\n\t * Format: [real, dual]<br>\r\n\t * Quaternion format: XYZW<br>\r\n\t * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n\t * @module quat2\r\n\t */\r\n\r\n\t/**\r\n\t * Creates a new identity dual quat\r\n\t *\r\n\t * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n\t */\r\n\r\n\tfunction create$7() {\r\n\t\tvar dq = new ARRAY_TYPE(8)\r\n\r\n\t\tif (ARRAY_TYPE != Float32Array) {\r\n\t\t\tdq[0] = 0\r\n\t\t\tdq[1] = 0\r\n\t\t\tdq[2] = 0\r\n\t\t\tdq[4] = 0\r\n\t\t\tdq[5] = 0\r\n\t\t\tdq[6] = 0\r\n\t\t\tdq[7] = 0\r\n\t\t}\r\n\r\n\t\tdq[3] = 1\r\n\t\treturn dq\r\n\t}\r\n\t/**\r\n\t * Creates a new quat initialized with values from an existing quaternion\r\n\t *\r\n\t * @param {quat2} a dual quaternion to clone\r\n\t * @returns {quat2} new dual quaternion\r\n\t * @function\r\n\t */\r\n\r\n\tfunction clone$7(a) {\r\n\t\tvar dq = new ARRAY_TYPE(8)\r\n\t\tdq[0] = a[0]\r\n\t\tdq[1] = a[1]\r\n\t\tdq[2] = a[2]\r\n\t\tdq[3] = a[3]\r\n\t\tdq[4] = a[4]\r\n\t\tdq[5] = a[5]\r\n\t\tdq[6] = a[6]\r\n\t\tdq[7] = a[7]\r\n\t\treturn dq\r\n\t}\r\n\t/**\r\n\t * Creates a new dual quat initialized with the given values\r\n\t *\r\n\t * @param {Number} x1 X component\r\n\t * @param {Number} y1 Y component\r\n\t * @param {Number} z1 Z component\r\n\t * @param {Number} w1 W component\r\n\t * @param {Number} x2 X component\r\n\t * @param {Number} y2 Y component\r\n\t * @param {Number} z2 Z component\r\n\t * @param {Number} w2 W component\r\n\t * @returns {quat2} new dual quaternion\r\n\t * @function\r\n\t */\r\n\r\n\tfunction fromValues$7(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n\t\tvar dq = new ARRAY_TYPE(8)\r\n\t\tdq[0] = x1\r\n\t\tdq[1] = y1\r\n\t\tdq[2] = z1\r\n\t\tdq[3] = w1\r\n\t\tdq[4] = x2\r\n\t\tdq[5] = y2\r\n\t\tdq[6] = z2\r\n\t\tdq[7] = w2\r\n\t\treturn dq\r\n\t}\r\n\t/**\r\n\t * Creates a new dual quat from the given values (quat and translation)\r\n\t *\r\n\t * @param {Number} x1 X component\r\n\t * @param {Number} y1 Y component\r\n\t * @param {Number} z1 Z component\r\n\t * @param {Number} w1 W component\r\n\t * @param {Number} x2 X component (translation)\r\n\t * @param {Number} y2 Y component (translation)\r\n\t * @param {Number} z2 Z component (translation)\r\n\t * @returns {quat2} new dual quaternion\r\n\t * @function\r\n\t */\r\n\r\n\tfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n\t\tvar dq = new ARRAY_TYPE(8)\r\n\t\tdq[0] = x1\r\n\t\tdq[1] = y1\r\n\t\tdq[2] = z1\r\n\t\tdq[3] = w1\r\n\t\tvar ax = x2 * 0.5,\r\n\t\t\tay = y2 * 0.5,\r\n\t\t\taz = z2 * 0.5\r\n\t\tdq[4] = ax * w1 + ay * z1 - az * y1\r\n\t\tdq[5] = ay * w1 + az * x1 - ax * z1\r\n\t\tdq[6] = az * w1 + ax * y1 - ay * x1\r\n\t\tdq[7] = -ax * x1 - ay * y1 - az * z1\r\n\t\treturn dq\r\n\t}\r\n\t/**\r\n\t * Creates a dual quat from a quaternion and a translation\r\n\t *\r\n\t * @param {quat2} dual quaternion receiving operation result\r\n\t * @param {quat} q quaternion\r\n\t * @param {vec3} t tranlation vector\r\n\t * @returns {quat2} dual quaternion receiving operation result\r\n\t * @function\r\n\t */\r\n\r\n\tfunction fromRotationTranslation$1(out, q, t) {\r\n\t\tvar ax = t[0] * 0.5,\r\n\t\t\tay = t[1] * 0.5,\r\n\t\t\taz = t[2] * 0.5,\r\n\t\t\tbx = q[0],\r\n\t\t\tby = q[1],\r\n\t\t\tbz = q[2],\r\n\t\t\tbw = q[3]\r\n\t\tout[0] = bx\r\n\t\tout[1] = by\r\n\t\tout[2] = bz\r\n\t\tout[3] = bw\r\n\t\tout[4] = ax * bw + ay * bz - az * by\r\n\t\tout[5] = ay * bw + az * bx - ax * bz\r\n\t\tout[6] = az * bw + ax * by - ay * bx\r\n\t\tout[7] = -ax * bx - ay * by - az * bz\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a dual quat from a translation\r\n\t *\r\n\t * @param {quat2} dual quaternion receiving operation result\r\n\t * @param {vec3} t translation vector\r\n\t * @returns {quat2} dual quaternion receiving operation result\r\n\t * @function\r\n\t */\r\n\r\n\tfunction fromTranslation$3(out, t) {\r\n\t\tout[0] = 0\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 1\r\n\t\tout[4] = t[0] * 0.5\r\n\t\tout[5] = t[1] * 0.5\r\n\t\tout[6] = t[2] * 0.5\r\n\t\tout[7] = 0\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a dual quat from a quaternion\r\n\t *\r\n\t * @param {quat2} dual quaternion receiving operation result\r\n\t * @param {quat} q the quaternion\r\n\t * @returns {quat2} dual quaternion receiving operation result\r\n\t * @function\r\n\t */\r\n\r\n\tfunction fromRotation$4(out, q) {\r\n\t\tout[0] = q[0]\r\n\t\tout[1] = q[1]\r\n\t\tout[2] = q[2]\r\n\t\tout[3] = q[3]\r\n\t\tout[4] = 0\r\n\t\tout[5] = 0\r\n\t\tout[6] = 0\r\n\t\tout[7] = 0\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a new dual quat from a matrix (4x4)\r\n\t *\r\n\t * @param {quat2} out the dual quaternion\r\n\t * @param {mat4} a the matrix\r\n\t * @returns {quat2} dual quat receiving operation result\r\n\t * @function\r\n\t */\r\n\r\n\tfunction fromMat4$1(out, a) {\r\n\t\t//TODO Optimize this\r\n\t\tvar outer = create$6()\r\n\t\tgetRotation(outer, a)\r\n\t\tvar t = new ARRAY_TYPE(3)\r\n\t\tgetTranslation(t, a)\r\n\t\tfromRotationTranslation$1(out, outer, t)\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Copy the values from one dual quat to another\r\n\t *\r\n\t * @param {quat2} out the receiving dual quaternion\r\n\t * @param {quat2} a the source dual quaternion\r\n\t * @returns {quat2} out\r\n\t * @function\r\n\t */\r\n\r\n\tfunction copy$7(out, a) {\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\tout[2] = a[2]\r\n\t\tout[3] = a[3]\r\n\t\tout[4] = a[4]\r\n\t\tout[5] = a[5]\r\n\t\tout[6] = a[6]\r\n\t\tout[7] = a[7]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set a dual quat to the identity dual quaternion\r\n\t *\r\n\t * @param {quat2} out the receiving quaternion\r\n\t * @returns {quat2} out\r\n\t */\r\n\r\n\tfunction identity$5(out) {\r\n\t\tout[0] = 0\r\n\t\tout[1] = 0\r\n\t\tout[2] = 0\r\n\t\tout[3] = 1\r\n\t\tout[4] = 0\r\n\t\tout[5] = 0\r\n\t\tout[6] = 0\r\n\t\tout[7] = 0\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set the components of a dual quat to the given values\r\n\t *\r\n\t * @param {quat2} out the receiving quaternion\r\n\t * @param {Number} x1 X component\r\n\t * @param {Number} y1 Y component\r\n\t * @param {Number} z1 Z component\r\n\t * @param {Number} w1 W component\r\n\t * @param {Number} x2 X component\r\n\t * @param {Number} y2 Y component\r\n\t * @param {Number} z2 Z component\r\n\t * @param {Number} w2 W component\r\n\t * @returns {quat2} out\r\n\t * @function\r\n\t */\r\n\r\n\tfunction set$7(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n\t\tout[0] = x1\r\n\t\tout[1] = y1\r\n\t\tout[2] = z1\r\n\t\tout[3] = w1\r\n\t\tout[4] = x2\r\n\t\tout[5] = y2\r\n\t\tout[6] = z2\r\n\t\tout[7] = w2\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Gets the real part of a dual quat\r\n\t * @param  {quat} out real part\r\n\t * @param  {quat2} a Dual Quaternion\r\n\t * @return {quat} real part\r\n\t */\r\n\r\n\tvar getReal = copy$6\r\n\t/**\r\n\t * Gets the dual part of a dual quat\r\n\t * @param  {quat} out dual part\r\n\t * @param  {quat2} a Dual Quaternion\r\n\t * @return {quat} dual part\r\n\t */\r\n\r\n\tfunction getDual(out, a) {\r\n\t\tout[0] = a[4]\r\n\t\tout[1] = a[5]\r\n\t\tout[2] = a[6]\r\n\t\tout[3] = a[7]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set the real component of a dual quat to the given quaternion\r\n\t *\r\n\t * @param {quat2} out the receiving quaternion\r\n\t * @param {quat} q a quaternion representing the real part\r\n\t * @returns {quat2} out\r\n\t * @function\r\n\t */\r\n\r\n\tvar setReal = copy$6\r\n\t/**\r\n\t * Set the dual component of a dual quat to the given quaternion\r\n\t *\r\n\t * @param {quat2} out the receiving quaternion\r\n\t * @param {quat} q a quaternion representing the dual part\r\n\t * @returns {quat2} out\r\n\t * @function\r\n\t */\r\n\r\n\tfunction setDual(out, q) {\r\n\t\tout[4] = q[0]\r\n\t\tout[5] = q[1]\r\n\t\tout[6] = q[2]\r\n\t\tout[7] = q[3]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Gets the translation of a normalized dual quat\r\n\t * @param  {vec3} out translation\r\n\t * @param  {quat2} a Dual Quaternion to be decomposed\r\n\t * @return {vec3} translation\r\n\t */\r\n\r\n\tfunction getTranslation$1(out, a) {\r\n\t\tvar ax = a[4],\r\n\t\t\tay = a[5],\r\n\t\t\taz = a[6],\r\n\t\t\taw = a[7],\r\n\t\t\tbx = -a[0],\r\n\t\t\tby = -a[1],\r\n\t\t\tbz = -a[2],\r\n\t\t\tbw = a[3]\r\n\t\tout[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2\r\n\t\tout[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2\r\n\t\tout[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Translates a dual quat by the given vector\r\n\t *\r\n\t * @param {quat2} out the receiving dual quaternion\r\n\t * @param {quat2} a the dual quaternion to translate\r\n\t * @param {vec3} v vector to translate by\r\n\t * @returns {quat2} out\r\n\t */\r\n\r\n\tfunction translate$3(out, a, v) {\r\n\t\tvar ax1 = a[0],\r\n\t\t\tay1 = a[1],\r\n\t\t\taz1 = a[2],\r\n\t\t\taw1 = a[3],\r\n\t\t\tbx1 = v[0] * 0.5,\r\n\t\t\tby1 = v[1] * 0.5,\r\n\t\t\tbz1 = v[2] * 0.5,\r\n\t\t\tax2 = a[4],\r\n\t\t\tay2 = a[5],\r\n\t\t\taz2 = a[6],\r\n\t\t\taw2 = a[7]\r\n\t\tout[0] = ax1\r\n\t\tout[1] = ay1\r\n\t\tout[2] = az1\r\n\t\tout[3] = aw1\r\n\t\tout[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2\r\n\t\tout[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2\r\n\t\tout[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2\r\n\t\tout[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a dual quat around the X axis\r\n\t *\r\n\t * @param {quat2} out the receiving dual quaternion\r\n\t * @param {quat2} a the dual quaternion to rotate\r\n\t * @param {number} rad how far should the rotation be\r\n\t * @returns {quat2} out\r\n\t */\r\n\r\n\tfunction rotateX$3(out, a, rad) {\r\n\t\tvar bx = -a[0],\r\n\t\t\tby = -a[1],\r\n\t\t\tbz = -a[2],\r\n\t\t\tbw = a[3],\r\n\t\t\tax = a[4],\r\n\t\t\tay = a[5],\r\n\t\t\taz = a[6],\r\n\t\t\taw = a[7],\r\n\t\t\tax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n\t\t\tay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n\t\t\taz1 = az * bw + aw * bz + ax * by - ay * bx,\r\n\t\t\taw1 = aw * bw - ax * bx - ay * by - az * bz\r\n\t\trotateX$2(out, a, rad)\r\n\t\tbx = out[0]\r\n\t\tby = out[1]\r\n\t\tbz = out[2]\r\n\t\tbw = out[3]\r\n\t\tout[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by\r\n\t\tout[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz\r\n\t\tout[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx\r\n\t\tout[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a dual quat around the Y axis\r\n\t *\r\n\t * @param {quat2} out the receiving dual quaternion\r\n\t * @param {quat2} a the dual quaternion to rotate\r\n\t * @param {number} rad how far should the rotation be\r\n\t * @returns {quat2} out\r\n\t */\r\n\r\n\tfunction rotateY$3(out, a, rad) {\r\n\t\tvar bx = -a[0],\r\n\t\t\tby = -a[1],\r\n\t\t\tbz = -a[2],\r\n\t\t\tbw = a[3],\r\n\t\t\tax = a[4],\r\n\t\t\tay = a[5],\r\n\t\t\taz = a[6],\r\n\t\t\taw = a[7],\r\n\t\t\tax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n\t\t\tay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n\t\t\taz1 = az * bw + aw * bz + ax * by - ay * bx,\r\n\t\t\taw1 = aw * bw - ax * bx - ay * by - az * bz\r\n\t\trotateY$2(out, a, rad)\r\n\t\tbx = out[0]\r\n\t\tby = out[1]\r\n\t\tbz = out[2]\r\n\t\tbw = out[3]\r\n\t\tout[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by\r\n\t\tout[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz\r\n\t\tout[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx\r\n\t\tout[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a dual quat around the Z axis\r\n\t *\r\n\t * @param {quat2} out the receiving dual quaternion\r\n\t * @param {quat2} a the dual quaternion to rotate\r\n\t * @param {number} rad how far should the rotation be\r\n\t * @returns {quat2} out\r\n\t */\r\n\r\n\tfunction rotateZ$3(out, a, rad) {\r\n\t\tvar bx = -a[0],\r\n\t\t\tby = -a[1],\r\n\t\t\tbz = -a[2],\r\n\t\t\tbw = a[3],\r\n\t\t\tax = a[4],\r\n\t\t\tay = a[5],\r\n\t\t\taz = a[6],\r\n\t\t\taw = a[7],\r\n\t\t\tax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n\t\t\tay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n\t\t\taz1 = az * bw + aw * bz + ax * by - ay * bx,\r\n\t\t\taw1 = aw * bw - ax * bx - ay * by - az * bz\r\n\t\trotateZ$2(out, a, rad)\r\n\t\tbx = out[0]\r\n\t\tby = out[1]\r\n\t\tbz = out[2]\r\n\t\tbw = out[3]\r\n\t\tout[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by\r\n\t\tout[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz\r\n\t\tout[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx\r\n\t\tout[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a dual quat by a given quaternion (a * q)\r\n\t *\r\n\t * @param {quat2} out the receiving dual quaternion\r\n\t * @param {quat2} a the dual quaternion to rotate\r\n\t * @param {quat} q quaternion to rotate by\r\n\t * @returns {quat2} out\r\n\t */\r\n\r\n\tfunction rotateByQuatAppend(out, a, q) {\r\n\t\tvar qx = q[0],\r\n\t\t\tqy = q[1],\r\n\t\t\tqz = q[2],\r\n\t\t\tqw = q[3],\r\n\t\t\tax = a[0],\r\n\t\t\tay = a[1],\r\n\t\t\taz = a[2],\r\n\t\t\taw = a[3]\r\n\t\tout[0] = ax * qw + aw * qx + ay * qz - az * qy\r\n\t\tout[1] = ay * qw + aw * qy + az * qx - ax * qz\r\n\t\tout[2] = az * qw + aw * qz + ax * qy - ay * qx\r\n\t\tout[3] = aw * qw - ax * qx - ay * qy - az * qz\r\n\t\tax = a[4]\r\n\t\tay = a[5]\r\n\t\taz = a[6]\r\n\t\taw = a[7]\r\n\t\tout[4] = ax * qw + aw * qx + ay * qz - az * qy\r\n\t\tout[5] = ay * qw + aw * qy + az * qx - ax * qz\r\n\t\tout[6] = az * qw + aw * qz + ax * qy - ay * qx\r\n\t\tout[7] = aw * qw - ax * qx - ay * qy - az * qz\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a dual quat by a given quaternion (q * a)\r\n\t *\r\n\t * @param {quat2} out the receiving dual quaternion\r\n\t * @param {quat} q quaternion to rotate by\r\n\t * @param {quat2} a the dual quaternion to rotate\r\n\t * @returns {quat2} out\r\n\t */\r\n\r\n\tfunction rotateByQuatPrepend(out, q, a) {\r\n\t\tvar qx = q[0],\r\n\t\t\tqy = q[1],\r\n\t\t\tqz = q[2],\r\n\t\t\tqw = q[3],\r\n\t\t\tbx = a[0],\r\n\t\t\tby = a[1],\r\n\t\t\tbz = a[2],\r\n\t\t\tbw = a[3]\r\n\t\tout[0] = qx * bw + qw * bx + qy * bz - qz * by\r\n\t\tout[1] = qy * bw + qw * by + qz * bx - qx * bz\r\n\t\tout[2] = qz * bw + qw * bz + qx * by - qy * bx\r\n\t\tout[3] = qw * bw - qx * bx - qy * by - qz * bz\r\n\t\tbx = a[4]\r\n\t\tby = a[5]\r\n\t\tbz = a[6]\r\n\t\tbw = a[7]\r\n\t\tout[4] = qx * bw + qw * bx + qy * bz - qz * by\r\n\t\tout[5] = qy * bw + qw * by + qz * bx - qx * bz\r\n\t\tout[6] = qz * bw + qw * bz + qx * by - qy * bx\r\n\t\tout[7] = qw * bw - qx * bx - qy * by - qz * bz\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n\t *\r\n\t * @param {quat2} out the receiving dual quaternion\r\n\t * @param {quat2} a the dual quaternion to rotate\r\n\t * @param {vec3} axis the axis to rotate around\r\n\t * @param {Number} rad how far the rotation should be\r\n\t * @returns {quat2} out\r\n\t */\r\n\r\n\tfunction rotateAroundAxis(out, a, axis, rad) {\r\n\t\t//Special case for rad = 0\r\n\t\tif (Math.abs(rad) < EPSILON) {\r\n\t\t\treturn copy$7(out, a)\r\n\t\t}\r\n\r\n\t\tvar axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2])\r\n\t\trad = rad * 0.5\r\n\t\tvar s = Math.sin(rad)\r\n\t\tvar bx = (s * axis[0]) / axisLength\r\n\t\tvar by = (s * axis[1]) / axisLength\r\n\t\tvar bz = (s * axis[2]) / axisLength\r\n\t\tvar bw = Math.cos(rad)\r\n\t\tvar ax1 = a[0],\r\n\t\t\tay1 = a[1],\r\n\t\t\taz1 = a[2],\r\n\t\t\taw1 = a[3]\r\n\t\tout[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by\r\n\t\tout[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz\r\n\t\tout[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx\r\n\t\tout[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz\r\n\t\tvar ax = a[4],\r\n\t\t\tay = a[5],\r\n\t\t\taz = a[6],\r\n\t\t\taw = a[7]\r\n\t\tout[4] = ax * bw + aw * bx + ay * bz - az * by\r\n\t\tout[5] = ay * bw + aw * by + az * bx - ax * bz\r\n\t\tout[6] = az * bw + aw * bz + ax * by - ay * bx\r\n\t\tout[7] = aw * bw - ax * bx - ay * by - az * bz\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Adds two dual quat's\r\n\t *\r\n\t * @param {quat2} out the receiving dual quaternion\r\n\t * @param {quat2} a the first operand\r\n\t * @param {quat2} b the second operand\r\n\t * @returns {quat2} out\r\n\t * @function\r\n\t */\r\n\r\n\tfunction add$7(out, a, b) {\r\n\t\tout[0] = a[0] + b[0]\r\n\t\tout[1] = a[1] + b[1]\r\n\t\tout[2] = a[2] + b[2]\r\n\t\tout[3] = a[3] + b[3]\r\n\t\tout[4] = a[4] + b[4]\r\n\t\tout[5] = a[5] + b[5]\r\n\t\tout[6] = a[6] + b[6]\r\n\t\tout[7] = a[7] + b[7]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Multiplies two dual quat's\r\n\t *\r\n\t * @param {quat2} out the receiving dual quaternion\r\n\t * @param {quat2} a the first operand\r\n\t * @param {quat2} b the second operand\r\n\t * @returns {quat2} out\r\n\t */\r\n\r\n\tfunction multiply$7(out, a, b) {\r\n\t\tvar ax0 = a[0],\r\n\t\t\tay0 = a[1],\r\n\t\t\taz0 = a[2],\r\n\t\t\taw0 = a[3],\r\n\t\t\tbx1 = b[4],\r\n\t\t\tby1 = b[5],\r\n\t\t\tbz1 = b[6],\r\n\t\t\tbw1 = b[7],\r\n\t\t\tax1 = a[4],\r\n\t\t\tay1 = a[5],\r\n\t\t\taz1 = a[6],\r\n\t\t\taw1 = a[7],\r\n\t\t\tbx0 = b[0],\r\n\t\t\tby0 = b[1],\r\n\t\t\tbz0 = b[2],\r\n\t\t\tbw0 = b[3]\r\n\t\tout[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0\r\n\t\tout[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0\r\n\t\tout[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0\r\n\t\tout[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0\r\n\t\tout[4] =\r\n\t\t\tax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0\r\n\t\tout[5] =\r\n\t\t\tay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0\r\n\t\tout[6] =\r\n\t\t\taz0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0\r\n\t\tout[7] =\r\n\t\t\taw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Alias for {@link quat2.multiply}\r\n\t * @function\r\n\t */\r\n\r\n\tvar mul$7 = multiply$7\r\n\t/**\r\n\t * Scales a dual quat by a scalar number\r\n\t *\r\n\t * @param {quat2} out the receiving dual quat\r\n\t * @param {quat2} a the dual quat to scale\r\n\t * @param {Number} b amount to scale the dual quat by\r\n\t * @returns {quat2} out\r\n\t * @function\r\n\t */\r\n\r\n\tfunction scale$7(out, a, b) {\r\n\t\tout[0] = a[0] * b\r\n\t\tout[1] = a[1] * b\r\n\t\tout[2] = a[2] * b\r\n\t\tout[3] = a[3] * b\r\n\t\tout[4] = a[4] * b\r\n\t\tout[5] = a[5] * b\r\n\t\tout[6] = a[6] * b\r\n\t\tout[7] = a[7] * b\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n\t *\r\n\t * @param {quat2} a the first operand\r\n\t * @param {quat2} b the second operand\r\n\t * @returns {Number} dot product of a and b\r\n\t * @function\r\n\t */\r\n\r\n\tvar dot$3 = dot$2\r\n\t/**\r\n\t * Performs a linear interpolation between two dual quats's\r\n\t * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n\t *\r\n\t * @param {quat2} out the receiving dual quat\r\n\t * @param {quat2} a the first operand\r\n\t * @param {quat2} b the second operand\r\n\t * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n\t * @returns {quat2} out\r\n\t */\r\n\r\n\tfunction lerp$3(out, a, b, t) {\r\n\t\tvar mt = 1 - t\r\n\t\tif (dot$3(a, b) < 0) t = -t\r\n\t\tout[0] = a[0] * mt + b[0] * t\r\n\t\tout[1] = a[1] * mt + b[1] * t\r\n\t\tout[2] = a[2] * mt + b[2] * t\r\n\t\tout[3] = a[3] * mt + b[3] * t\r\n\t\tout[4] = a[4] * mt + b[4] * t\r\n\t\tout[5] = a[5] * mt + b[5] * t\r\n\t\tout[6] = a[6] * mt + b[6] * t\r\n\t\tout[7] = a[7] * mt + b[7] * t\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n\t *\r\n\t * @param {quat2} out the receiving dual quaternion\r\n\t * @param {quat2} a dual quat to calculate inverse of\r\n\t * @returns {quat2} out\r\n\t */\r\n\r\n\tfunction invert$5(out, a) {\r\n\t\tvar sqlen = squaredLength$3(a)\r\n\t\tout[0] = -a[0] / sqlen\r\n\t\tout[1] = -a[1] / sqlen\r\n\t\tout[2] = -a[2] / sqlen\r\n\t\tout[3] = a[3] / sqlen\r\n\t\tout[4] = -a[4] / sqlen\r\n\t\tout[5] = -a[5] / sqlen\r\n\t\tout[6] = -a[6] / sqlen\r\n\t\tout[7] = a[7] / sqlen\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the conjugate of a dual quat\r\n\t * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n\t *\r\n\t * @param {quat2} out the receiving quaternion\r\n\t * @param {quat2} a quat to calculate conjugate of\r\n\t * @returns {quat2} out\r\n\t */\r\n\r\n\tfunction conjugate$1(out, a) {\r\n\t\tout[0] = -a[0]\r\n\t\tout[1] = -a[1]\r\n\t\tout[2] = -a[2]\r\n\t\tout[3] = a[3]\r\n\t\tout[4] = -a[4]\r\n\t\tout[5] = -a[5]\r\n\t\tout[6] = -a[6]\r\n\t\tout[7] = a[7]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the length of a dual quat\r\n\t *\r\n\t * @param {quat2} a dual quat to calculate length of\r\n\t * @returns {Number} length of a\r\n\t * @function\r\n\t */\r\n\r\n\tvar length$3 = length$2\r\n\t/**\r\n\t * Alias for {@link quat2.length}\r\n\t * @function\r\n\t */\r\n\r\n\tvar len$3 = length$3\r\n\t/**\r\n\t * Calculates the squared length of a dual quat\r\n\t *\r\n\t * @param {quat2} a dual quat to calculate squared length of\r\n\t * @returns {Number} squared length of a\r\n\t * @function\r\n\t */\r\n\r\n\tvar squaredLength$3 = squaredLength$2\r\n\t/**\r\n\t * Alias for {@link quat2.squaredLength}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sqrLen$3 = squaredLength$3\r\n\t/**\r\n\t * Normalize a dual quat\r\n\t *\r\n\t * @param {quat2} out the receiving dual quaternion\r\n\t * @param {quat2} a dual quaternion to normalize\r\n\t * @returns {quat2} out\r\n\t * @function\r\n\t */\r\n\r\n\tfunction normalize$3(out, a) {\r\n\t\tvar magnitude = squaredLength$3(a)\r\n\r\n\t\tif (magnitude > 0) {\r\n\t\t\tmagnitude = Math.sqrt(magnitude)\r\n\t\t\tvar a0 = a[0] / magnitude\r\n\t\t\tvar a1 = a[1] / magnitude\r\n\t\t\tvar a2 = a[2] / magnitude\r\n\t\t\tvar a3 = a[3] / magnitude\r\n\t\t\tvar b0 = a[4]\r\n\t\t\tvar b1 = a[5]\r\n\t\t\tvar b2 = a[6]\r\n\t\t\tvar b3 = a[7]\r\n\t\t\tvar a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3\r\n\t\t\tout[0] = a0\r\n\t\t\tout[1] = a1\r\n\t\t\tout[2] = a2\r\n\t\t\tout[3] = a3\r\n\t\t\tout[4] = (b0 - a0 * a_dot_b) / magnitude\r\n\t\t\tout[5] = (b1 - a1 * a_dot_b) / magnitude\r\n\t\t\tout[6] = (b2 - a2 * a_dot_b) / magnitude\r\n\t\t\tout[7] = (b3 - a3 * a_dot_b) / magnitude\r\n\t\t}\r\n\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns a string representation of a dual quatenion\r\n\t *\r\n\t * @param {quat2} a dual quaternion to represent as a string\r\n\t * @returns {String} string representation of the dual quat\r\n\t */\r\n\r\n\tfunction str$7(a) {\r\n\t\treturn (\r\n\t\t\t'quat2(' +\r\n\t\t\ta[0] +\r\n\t\t\t', ' +\r\n\t\t\ta[1] +\r\n\t\t\t', ' +\r\n\t\t\ta[2] +\r\n\t\t\t', ' +\r\n\t\t\ta[3] +\r\n\t\t\t', ' +\r\n\t\t\ta[4] +\r\n\t\t\t', ' +\r\n\t\t\ta[5] +\r\n\t\t\t', ' +\r\n\t\t\ta[6] +\r\n\t\t\t', ' +\r\n\t\t\ta[7] +\r\n\t\t\t')'\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n\t *\r\n\t * @param {quat2} a the first dual quaternion.\r\n\t * @param {quat2} b the second dual quaternion.\r\n\t * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction exactEquals$7(a, b) {\r\n\t\treturn (\r\n\t\t\ta[0] === b[0] &&\r\n\t\t\ta[1] === b[1] &&\r\n\t\t\ta[2] === b[2] &&\r\n\t\t\ta[3] === b[3] &&\r\n\t\t\ta[4] === b[4] &&\r\n\t\t\ta[5] === b[5] &&\r\n\t\t\ta[6] === b[6] &&\r\n\t\t\ta[7] === b[7]\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n\t *\r\n\t * @param {quat2} a the first dual quat.\r\n\t * @param {quat2} b the second dual quat.\r\n\t * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction equals$8(a, b) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1],\r\n\t\t\ta2 = a[2],\r\n\t\t\ta3 = a[3],\r\n\t\t\ta4 = a[4],\r\n\t\t\ta5 = a[5],\r\n\t\t\ta6 = a[6],\r\n\t\t\ta7 = a[7]\r\n\t\tvar b0 = b[0],\r\n\t\t\tb1 = b[1],\r\n\t\t\tb2 = b[2],\r\n\t\t\tb3 = b[3],\r\n\t\t\tb4 = b[4],\r\n\t\t\tb5 = b[5],\r\n\t\t\tb6 = b[6],\r\n\t\t\tb7 = b[7]\r\n\t\treturn (\r\n\t\t\tMath.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n\t\t\tMath.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n\t\t\tMath.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\r\n\t\t\tMath.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\r\n\t\t\tMath.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\r\n\t\t\tMath.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\r\n\t\t\tMath.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7))\r\n\t\t)\r\n\t}\r\n\r\n\tvar quat2 = /*#__PURE__*/ Object.freeze({\r\n\t\tcreate: create$7,\r\n\t\tclone: clone$7,\r\n\t\tfromValues: fromValues$7,\r\n\t\tfromRotationTranslationValues: fromRotationTranslationValues,\r\n\t\tfromRotationTranslation: fromRotationTranslation$1,\r\n\t\tfromTranslation: fromTranslation$3,\r\n\t\tfromRotation: fromRotation$4,\r\n\t\tfromMat4: fromMat4$1,\r\n\t\tcopy: copy$7,\r\n\t\tidentity: identity$5,\r\n\t\tset: set$7,\r\n\t\tgetReal: getReal,\r\n\t\tgetDual: getDual,\r\n\t\tsetReal: setReal,\r\n\t\tsetDual: setDual,\r\n\t\tgetTranslation: getTranslation$1,\r\n\t\ttranslate: translate$3,\r\n\t\trotateX: rotateX$3,\r\n\t\trotateY: rotateY$3,\r\n\t\trotateZ: rotateZ$3,\r\n\t\trotateByQuatAppend: rotateByQuatAppend,\r\n\t\trotateByQuatPrepend: rotateByQuatPrepend,\r\n\t\trotateAroundAxis: rotateAroundAxis,\r\n\t\tadd: add$7,\r\n\t\tmultiply: multiply$7,\r\n\t\tmul: mul$7,\r\n\t\tscale: scale$7,\r\n\t\tdot: dot$3,\r\n\t\tlerp: lerp$3,\r\n\t\tinvert: invert$5,\r\n\t\tconjugate: conjugate$1,\r\n\t\tlength: length$3,\r\n\t\tlen: len$3,\r\n\t\tsquaredLength: squaredLength$3,\r\n\t\tsqrLen: sqrLen$3,\r\n\t\tnormalize: normalize$3,\r\n\t\tstr: str$7,\r\n\t\texactEquals: exactEquals$7,\r\n\t\tequals: equals$8,\r\n\t})\r\n\r\n\t/**\r\n\t * 2 Dimensional Vector\r\n\t * @module vec2\r\n\t */\r\n\r\n\t/**\r\n\t * Creates a new, empty vec2\r\n\t *\r\n\t * @returns {vec2} a new 2D vector\r\n\t */\r\n\r\n\tfunction create$8() {\r\n\t\tvar out = new ARRAY_TYPE(2)\r\n\r\n\t\tif (ARRAY_TYPE != Float32Array) {\r\n\t\t\tout[0] = 0\r\n\t\t\tout[1] = 0\r\n\t\t}\r\n\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a new vec2 initialized with values from an existing vector\r\n\t *\r\n\t * @param {vec2} a vector to clone\r\n\t * @returns {vec2} a new 2D vector\r\n\t */\r\n\r\n\tfunction clone$8(a) {\r\n\t\tvar out = new ARRAY_TYPE(2)\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Creates a new vec2 initialized with the given values\r\n\t *\r\n\t * @param {Number} x X component\r\n\t * @param {Number} y Y component\r\n\t * @returns {vec2} a new 2D vector\r\n\t */\r\n\r\n\tfunction fromValues$8(x, y) {\r\n\t\tvar out = new ARRAY_TYPE(2)\r\n\t\tout[0] = x\r\n\t\tout[1] = y\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Copy the values from one vec2 to another\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a the source vector\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction copy$8(out, a) {\r\n\t\tout[0] = a[0]\r\n\t\tout[1] = a[1]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Set the components of a vec2 to the given values\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {Number} x X component\r\n\t * @param {Number} y Y component\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction set$8(out, x, y) {\r\n\t\tout[0] = x\r\n\t\tout[1] = y\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Adds two vec2's\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a the first operand\r\n\t * @param {vec2} b the second operand\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction add$8(out, a, b) {\r\n\t\tout[0] = a[0] + b[0]\r\n\t\tout[1] = a[1] + b[1]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Subtracts vector b from vector a\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a the first operand\r\n\t * @param {vec2} b the second operand\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction subtract$6(out, a, b) {\r\n\t\tout[0] = a[0] - b[0]\r\n\t\tout[1] = a[1] - b[1]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Multiplies two vec2's\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a the first operand\r\n\t * @param {vec2} b the second operand\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction multiply$8(out, a, b) {\r\n\t\tout[0] = a[0] * b[0]\r\n\t\tout[1] = a[1] * b[1]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Divides two vec2's\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a the first operand\r\n\t * @param {vec2} b the second operand\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction divide$2(out, a, b) {\r\n\t\tout[0] = a[0] / b[0]\r\n\t\tout[1] = a[1] / b[1]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Math.ceil the components of a vec2\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a vector to ceil\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction ceil$2(out, a) {\r\n\t\tout[0] = Math.ceil(a[0])\r\n\t\tout[1] = Math.ceil(a[1])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Math.floor the components of a vec2\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a vector to floor\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction floor$2(out, a) {\r\n\t\tout[0] = Math.floor(a[0])\r\n\t\tout[1] = Math.floor(a[1])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns the minimum of two vec2's\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a the first operand\r\n\t * @param {vec2} b the second operand\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction min$2(out, a, b) {\r\n\t\tout[0] = Math.min(a[0], b[0])\r\n\t\tout[1] = Math.min(a[1], b[1])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns the maximum of two vec2's\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a the first operand\r\n\t * @param {vec2} b the second operand\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction max$2(out, a, b) {\r\n\t\tout[0] = Math.max(a[0], b[0])\r\n\t\tout[1] = Math.max(a[1], b[1])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Math.round the components of a vec2\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a vector to round\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction round$2(out, a) {\r\n\t\tout[0] = Math.round(a[0])\r\n\t\tout[1] = Math.round(a[1])\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Scales a vec2 by a scalar number\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a the vector to scale\r\n\t * @param {Number} b amount to scale the vector by\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction scale$8(out, a, b) {\r\n\t\tout[0] = a[0] * b\r\n\t\tout[1] = a[1] * b\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Adds two vec2's after scaling the second operand by a scalar value\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a the first operand\r\n\t * @param {vec2} b the second operand\r\n\t * @param {Number} scale the amount to scale b by before adding\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction scaleAndAdd$2(out, a, b, scale) {\r\n\t\tout[0] = a[0] + b[0] * scale\r\n\t\tout[1] = a[1] + b[1] * scale\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the euclidian distance between two vec2's\r\n\t *\r\n\t * @param {vec2} a the first operand\r\n\t * @param {vec2} b the second operand\r\n\t * @returns {Number} distance between a and b\r\n\t */\r\n\r\n\tfunction distance$2(a, b) {\r\n\t\tvar x = b[0] - a[0],\r\n\t\t\ty = b[1] - a[1]\r\n\t\treturn Math.sqrt(x * x + y * y)\r\n\t}\r\n\t/**\r\n\t * Calculates the squared euclidian distance between two vec2's\r\n\t *\r\n\t * @param {vec2} a the first operand\r\n\t * @param {vec2} b the second operand\r\n\t * @returns {Number} squared distance between a and b\r\n\t */\r\n\r\n\tfunction squaredDistance$2(a, b) {\r\n\t\tvar x = b[0] - a[0],\r\n\t\t\ty = b[1] - a[1]\r\n\t\treturn x * x + y * y\r\n\t}\r\n\t/**\r\n\t * Calculates the length of a vec2\r\n\t *\r\n\t * @param {vec2} a vector to calculate length of\r\n\t * @returns {Number} length of a\r\n\t */\r\n\r\n\tfunction length$4(a) {\r\n\t\tvar x = a[0],\r\n\t\t\ty = a[1]\r\n\t\treturn Math.sqrt(x * x + y * y)\r\n\t}\r\n\t/**\r\n\t * Calculates the squared length of a vec2\r\n\t *\r\n\t * @param {vec2} a vector to calculate squared length of\r\n\t * @returns {Number} squared length of a\r\n\t */\r\n\r\n\tfunction squaredLength$4(a) {\r\n\t\tvar x = a[0],\r\n\t\t\ty = a[1]\r\n\t\treturn x * x + y * y\r\n\t}\r\n\t/**\r\n\t * Negates the components of a vec2\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a vector to negate\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction negate$2(out, a) {\r\n\t\tout[0] = -a[0]\r\n\t\tout[1] = -a[1]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Returns the inverse of the components of a vec2\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a vector to invert\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction inverse$2(out, a) {\r\n\t\tout[0] = 1.0 / a[0]\r\n\t\tout[1] = 1.0 / a[1]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Normalize a vec2\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a vector to normalize\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction normalize$4(out, a) {\r\n\t\tvar x = a[0],\r\n\t\t\ty = a[1]\r\n\t\tvar len = x * x + y * y\r\n\r\n\t\tif (len > 0) {\r\n\t\t\t//TODO: evaluate use of glm_invsqrt here?\r\n\t\t\tlen = 1 / Math.sqrt(len)\r\n\t\t}\r\n\r\n\t\tout[0] = a[0] * len\r\n\t\tout[1] = a[1] * len\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Calculates the dot product of two vec2's\r\n\t *\r\n\t * @param {vec2} a the first operand\r\n\t * @param {vec2} b the second operand\r\n\t * @returns {Number} dot product of a and b\r\n\t */\r\n\r\n\tfunction dot$4(a, b) {\r\n\t\treturn a[0] * b[0] + a[1] * b[1]\r\n\t}\r\n\t/**\r\n\t * Computes the cross product of two vec2's\r\n\t * Note that the cross product must by definition produce a 3D vector\r\n\t *\r\n\t * @param {vec3} out the receiving vector\r\n\t * @param {vec2} a the first operand\r\n\t * @param {vec2} b the second operand\r\n\t * @returns {vec3} out\r\n\t */\r\n\r\n\tfunction cross$1(out, a, b) {\r\n\t\tvar z = a[0] * b[1] - a[1] * b[0]\r\n\t\tout[0] = out[1] = 0\r\n\t\tout[2] = z\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Performs a linear interpolation between two vec2's\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a the first operand\r\n\t * @param {vec2} b the second operand\r\n\t * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction lerp$4(out, a, b, t) {\r\n\t\tvar ax = a[0],\r\n\t\t\tay = a[1]\r\n\t\tout[0] = ax + t * (b[0] - ax)\r\n\t\tout[1] = ay + t * (b[1] - ay)\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Generates a random vector with the given scale\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction random$3(out, scale) {\r\n\t\tscale = scale || 1.0\r\n\t\tvar r = RANDOM() * 2.0 * Math.PI\r\n\t\tout[0] = Math.cos(r) * scale\r\n\t\tout[1] = Math.sin(r) * scale\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Transforms the vec2 with a mat2\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a the vector to transform\r\n\t * @param {mat2} m matrix to transform with\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction transformMat2(out, a, m) {\r\n\t\tvar x = a[0],\r\n\t\t\ty = a[1]\r\n\t\tout[0] = m[0] * x + m[2] * y\r\n\t\tout[1] = m[1] * x + m[3] * y\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Transforms the vec2 with a mat2d\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a the vector to transform\r\n\t * @param {mat2d} m matrix to transform with\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction transformMat2d(out, a, m) {\r\n\t\tvar x = a[0],\r\n\t\t\ty = a[1]\r\n\t\tout[0] = m[0] * x + m[2] * y + m[4]\r\n\t\tout[1] = m[1] * x + m[3] * y + m[5]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Transforms the vec2 with a mat3\r\n\t * 3rd vector component is implicitly '1'\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a the vector to transform\r\n\t * @param {mat3} m matrix to transform with\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction transformMat3$1(out, a, m) {\r\n\t\tvar x = a[0],\r\n\t\t\ty = a[1]\r\n\t\tout[0] = m[0] * x + m[3] * y + m[6]\r\n\t\tout[1] = m[1] * x + m[4] * y + m[7]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Transforms the vec2 with a mat4\r\n\t * 3rd vector component is implicitly '0'\r\n\t * 4th vector component is implicitly '1'\r\n\t *\r\n\t * @param {vec2} out the receiving vector\r\n\t * @param {vec2} a the vector to transform\r\n\t * @param {mat4} m matrix to transform with\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction transformMat4$2(out, a, m) {\r\n\t\tvar x = a[0]\r\n\t\tvar y = a[1]\r\n\t\tout[0] = m[0] * x + m[4] * y + m[12]\r\n\t\tout[1] = m[1] * x + m[5] * y + m[13]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Rotate a 2D vector\r\n\t * @param {vec2} out The receiving vec2\r\n\t * @param {vec2} a The vec2 point to rotate\r\n\t * @param {vec2} b The origin of the rotation\r\n\t * @param {Number} c The angle of rotation\r\n\t * @returns {vec2} out\r\n\t */\r\n\r\n\tfunction rotate$4(out, a, b, c) {\r\n\t\t//Translate point to the origin\r\n\t\tvar p0 = a[0] - b[0],\r\n\t\t\tp1 = a[1] - b[1],\r\n\t\t\tsinC = Math.sin(c),\r\n\t\t\tcosC = Math.cos(c) //perform rotation and translate to correct position\r\n\r\n\t\tout[0] = p0 * cosC - p1 * sinC + b[0]\r\n\t\tout[1] = p0 * sinC + p1 * cosC + b[1]\r\n\t\treturn out\r\n\t}\r\n\t/**\r\n\t * Get the angle between two 2D vectors\r\n\t * @param {vec2} a The first operand\r\n\t * @param {vec2} b The second operand\r\n\t * @returns {Number} The angle in radians\r\n\t */\r\n\r\n\tfunction angle$1(a, b) {\r\n\t\tvar x1 = a[0],\r\n\t\t\ty1 = a[1],\r\n\t\t\tx2 = b[0],\r\n\t\t\ty2 = b[1]\r\n\t\tvar len1 = x1 * x1 + y1 * y1\r\n\r\n\t\tif (len1 > 0) {\r\n\t\t\t//TODO: evaluate use of glm_invsqrt here?\r\n\t\t\tlen1 = 1 / Math.sqrt(len1)\r\n\t\t}\r\n\r\n\t\tvar len2 = x2 * x2 + y2 * y2\r\n\r\n\t\tif (len2 > 0) {\r\n\t\t\t//TODO: evaluate use of glm_invsqrt here?\r\n\t\t\tlen2 = 1 / Math.sqrt(len2)\r\n\t\t}\r\n\r\n\t\tvar cosine = (x1 * x2 + y1 * y2) * len1 * len2\r\n\r\n\t\tif (cosine > 1.0) {\r\n\t\t\treturn 0\r\n\t\t} else if (cosine < -1.0) {\r\n\t\t\treturn Math.PI\r\n\t\t} else {\r\n\t\t\treturn Math.acos(cosine)\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Returns a string representation of a vector\r\n\t *\r\n\t * @param {vec2} a vector to represent as a string\r\n\t * @returns {String} string representation of the vector\r\n\t */\r\n\r\n\tfunction str$8(a) {\r\n\t\treturn 'vec2(' + a[0] + ', ' + a[1] + ')'\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n\t *\r\n\t * @param {vec2} a The first vector.\r\n\t * @param {vec2} b The second vector.\r\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction exactEquals$8(a, b) {\r\n\t\treturn a[0] === b[0] && a[1] === b[1]\r\n\t}\r\n\t/**\r\n\t * Returns whether or not the vectors have approximately the same elements in the same position.\r\n\t *\r\n\t * @param {vec2} a The first vector.\r\n\t * @param {vec2} b The second vector.\r\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n\t */\r\n\r\n\tfunction equals$9(a, b) {\r\n\t\tvar a0 = a[0],\r\n\t\t\ta1 = a[1]\r\n\t\tvar b0 = b[0],\r\n\t\t\tb1 = b[1]\r\n\t\treturn (\r\n\t\t\tMath.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n\t\t\tMath.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1))\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Alias for {@link vec2.length}\r\n\t * @function\r\n\t */\r\n\r\n\tvar len$4 = length$4\r\n\t/**\r\n\t * Alias for {@link vec2.subtract}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sub$6 = subtract$6\r\n\t/**\r\n\t * Alias for {@link vec2.multiply}\r\n\t * @function\r\n\t */\r\n\r\n\tvar mul$8 = multiply$8\r\n\t/**\r\n\t * Alias for {@link vec2.divide}\r\n\t * @function\r\n\t */\r\n\r\n\tvar div$2 = divide$2\r\n\t/**\r\n\t * Alias for {@link vec2.distance}\r\n\t * @function\r\n\t */\r\n\r\n\tvar dist$2 = distance$2\r\n\t/**\r\n\t * Alias for {@link vec2.squaredDistance}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sqrDist$2 = squaredDistance$2\r\n\t/**\r\n\t * Alias for {@link vec2.squaredLength}\r\n\t * @function\r\n\t */\r\n\r\n\tvar sqrLen$4 = squaredLength$4\r\n\t/**\r\n\t * Perform some operation over an array of vec2s.\r\n\t *\r\n\t * @param {Array} a the array of vectors to iterate over\r\n\t * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\r\n\t * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n\t * @param {Function} fn Function to call for each vector in the array\r\n\t * @param {Object} [arg] additional argument to pass to fn\r\n\t * @returns {Array} a\r\n\t * @function\r\n\t */\r\n\r\n\tvar forEach$2 = (function() {\r\n\t\tvar vec = create$8()\r\n\t\treturn function(a, stride, offset, count, fn, arg) {\r\n\t\t\tvar i, l\r\n\r\n\t\t\tif (!stride) {\r\n\t\t\t\tstride = 2\r\n\t\t\t}\r\n\r\n\t\t\tif (!offset) {\r\n\t\t\t\toffset = 0\r\n\t\t\t}\r\n\r\n\t\t\tif (count) {\r\n\t\t\t\tl = Math.min(count * stride + offset, a.length)\r\n\t\t\t} else {\r\n\t\t\t\tl = a.length\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = offset; i < l; i += stride) {\r\n\t\t\t\tvec[0] = a[i]\r\n\t\t\t\tvec[1] = a[i + 1]\r\n\t\t\t\tfn(vec, vec, arg)\r\n\t\t\t\ta[i] = vec[0]\r\n\t\t\t\ta[i + 1] = vec[1]\r\n\t\t\t}\r\n\r\n\t\t\treturn a\r\n\t\t}\r\n\t})()\r\n\r\n\tvar vec2 = /*#__PURE__*/ Object.freeze({\r\n\t\tcreate: create$8,\r\n\t\tclone: clone$8,\r\n\t\tfromValues: fromValues$8,\r\n\t\tcopy: copy$8,\r\n\t\tset: set$8,\r\n\t\tadd: add$8,\r\n\t\tsubtract: subtract$6,\r\n\t\tmultiply: multiply$8,\r\n\t\tdivide: divide$2,\r\n\t\tceil: ceil$2,\r\n\t\tfloor: floor$2,\r\n\t\tmin: min$2,\r\n\t\tmax: max$2,\r\n\t\tround: round$2,\r\n\t\tscale: scale$8,\r\n\t\tscaleAndAdd: scaleAndAdd$2,\r\n\t\tdistance: distance$2,\r\n\t\tsquaredDistance: squaredDistance$2,\r\n\t\tlength: length$4,\r\n\t\tsquaredLength: squaredLength$4,\r\n\t\tnegate: negate$2,\r\n\t\tinverse: inverse$2,\r\n\t\tnormalize: normalize$4,\r\n\t\tdot: dot$4,\r\n\t\tcross: cross$1,\r\n\t\tlerp: lerp$4,\r\n\t\trandom: random$3,\r\n\t\ttransformMat2: transformMat2,\r\n\t\ttransformMat2d: transformMat2d,\r\n\t\ttransformMat3: transformMat3$1,\r\n\t\ttransformMat4: transformMat4$2,\r\n\t\trotate: rotate$4,\r\n\t\tangle: angle$1,\r\n\t\tstr: str$8,\r\n\t\texactEquals: exactEquals$8,\r\n\t\tequals: equals$9,\r\n\t\tlen: len$4,\r\n\t\tsub: sub$6,\r\n\t\tmul: mul$8,\r\n\t\tdiv: div$2,\r\n\t\tdist: dist$2,\r\n\t\tsqrDist: sqrDist$2,\r\n\t\tsqrLen: sqrLen$4,\r\n\t\tforEach: forEach$2,\r\n\t})\r\n\r\n\texports.glMatrix = common\r\n\texports.mat2 = mat2\r\n\texports.mat2d = mat2d\r\n\texports.mat3 = mat3\r\n\texports.mat4 = mat4\r\n\texports.quat = quat\r\n\texports.quat2 = quat2\r\n\texports.vec2 = vec2\r\n\texports.vec3 = vec3\r\n\texports.vec4 = vec4\r\n\r\n\tObject.defineProperty(exports, '__esModule', { value: true })\r\n})\r\n","/*\r\n * Copyright 2012, Gregg Tavares.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *     * Redistributions of source code must retain the above copyright\r\n * notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above\r\n * copyright notice, this list of conditions and the following disclaimer\r\n * in the documentation and/or other materials provided with the\r\n * distribution.\r\n *     * Neither the name of Gregg Tavares. nor the names of his\r\n * contributors may be used to endorse or promote products derived from\r\n * this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Creates a program, attaches shaders, binds attrib locations, links the\r\n * program and calls useProgram.\r\n * @param {WebGLShader[]} shaders The shaders to attach\r\n * @param {string[]} [opt_attribs] An array of attribs names.\r\n * Locations will be assigned by index if not passed in\r\n * @param {number[]} [opt_locations] The locations for the.\r\n * A parallel array to opt_attribs letting you assign locations.\r\n * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors.\r\n * By default it just prints an error to the console on error.\r\n * If you want something else pass an callback. It's passed an error message.\r\n * @memberOf module:webgl-utils\r\n */\r\nexport function createProgram(\r\n\tgl: WebGLRenderingContext,\r\n\tshaders: WebGLShader[],\r\n\topt_attribs?: string[],\r\n\topt_locations?: number[],\r\n\topt_errorCallback?: any,\r\n): WebGLProgram {\r\n\tconst errFn = opt_errorCallback || console.error\r\n\tconst program: WebGLProgram = gl.createProgram()\r\n\r\n\tshaders.forEach((shader) => gl.attachShader(program, shader))\r\n\r\n\tif (opt_attribs) {\r\n\t\topt_attribs.forEach((attrib, ndx) =>\r\n\t\t\tgl.bindAttribLocation(program, opt_locations ? opt_locations[ndx] : ndx, attrib),\r\n\t\t)\r\n\t}\r\n\r\n\tgl.linkProgram(program)\r\n\r\n\t// Check the link status\r\n\tconst linked = gl.getProgramParameter(program, gl.LINK_STATUS)\r\n\tif (!linked) {\r\n\t\t// something went wrong with the link\r\n\t\tconst lastError = gl.getProgramInfoLog(program)\r\n\t\terrFn('Error in program linking:' + lastError)\r\n\r\n\t\tgl.deleteProgram(program)\r\n\t\treturn null\r\n\t}\r\n\treturn program\r\n}\r\n\r\n/**\r\n * Resize a canvas to match the size its displayed.\r\n * @param {HTMLCanvasElement} canvas The canvas to resize.\r\n * @param {number} [multiplier] amount to multiply by.\r\n *    Pass in window.devicePixelRatio for native pixels.\r\n * @return {boolean} true if the canvas was resized.\r\n * @memberOf module:webgl-utils\r\n */\r\nexport function resizeCanvasToDisplaySize(\r\n\tcanvas: HTMLCanvasElement,\r\n\tmultiplier: number = 1,\r\n): boolean {\r\n\tconst width = (canvas.clientWidth * multiplier) | 0\r\n\tconst height = (canvas.clientHeight * multiplier) | 0\r\n\tif (canvas.width !== width || canvas.height !== height) {\r\n\t\tcanvas.width = width\r\n\t\tcanvas.height = height\r\n\t\treturn true\r\n\t}\r\n\treturn false\r\n}\r\n\r\n/**\r\n * Resize a canvas to match the size its displayed.\r\n * @param {HTMLCanvasElement} canvas The canvas to resize.\r\n * @return {boolean} true if the canvas was resized.\r\n * @memberOf module:webgl-utils\r\n */\r\nexport function resizeCanvasToSquare(canvas: HTMLCanvasElement): boolean {\r\n\tconst styles = getComputedStyle(canvas)\r\n\tconst width = parseFloat(styles.width)\r\n\tconst height = parseFloat(styles.height)\r\n\r\n\tif (canvas.width !== width || canvas.height !== height) {\r\n\t\tcanvas.width = width\r\n\t\tcanvas.height = width\r\n\t\treturn true\r\n\t}\r\n\treturn false\r\n}\r\n\r\nexport function createShader(\r\n\tgl: WebGLRenderingContext,\r\n\ttype: string,\r\n\tresolve: (value: WebGLShader | PromiseLike<{}>) => void,\r\n\treject: (reason: Error) => void,\r\n) {\r\n\tfunction handleShader(data: string): WebGLShader {\r\n\t\tlet shader: WebGLShader\r\n\t\tif (type === 'fragment-shader') {\r\n\t\t\tshader = gl.createShader(gl.FRAGMENT_SHADER)\r\n\t\t} else if (type === 'vertex-shader') {\r\n\t\t\tshader = gl.createShader(gl.VERTEX_SHADER)\r\n\t\t} else {\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tgl.shaderSource(shader, data)\r\n\t\tgl.compileShader(shader)\r\n\r\n\t\treturn shader\r\n\t}\r\n\r\n\tfetch(`http://localhost:1337/assets/shaders/${type}.glsl`)\r\n\t\t.then((resp) => resp.text())\r\n\t\t.then((data: string) => handleShader(data))\r\n\t\t.then((shader: WebGLShader) => resolve(shader))\r\n\t\t.catch((err: Error) => reject(err))\r\n\r\n\t// if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n\t// \talert(gl.getShaderInfoLog(shader))\r\n\t// \treturn null\r\n\t// }\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}